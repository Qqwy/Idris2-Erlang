-module('Idris.Idris2.Idris.Driver').
-compile('no_auto_import').
-export([
  'case--case block in mainWithCodegens-4708'/4,
  'case--mainWithCodegens-4691'/3,
  'case--case block in case block in stMain-4596'/6,
  'case--case block in case block in case block in case block in stMain-4376'/33,
  'case--case block in case block in case block in case block in case block in case block in case block in stMain-4070'/33,
  'case--case block in case block in case block in case block in case block in case block in stMain-3994'/31,
  'case--case block in case block in case block in case block in case block in stMain-3858'/31,
  'case--case block in case block in case block in case block in stMain-3794'/31,
  'case--case block in case block in case block in stMain-3733'/30,
  'case--case block in case block in case block in stMain-3578'/28,
  'case--case block in case block in case block in stMain-3465'/27,
  'case--case block in case block in stMain-3321'/20,
  'case--case block in case block in stMain-3228'/14,
  'case--case block in case block in stMain-3147'/7,
  'case--case block in stMain-3125'/4,
  'case--stMain-3114'/3,
  'case--case block in updateREPLOpts-2972'/4,
  'case--updateREPLOpts-2942'/3,
  'case--updateEnv-2903'/3,
  'case--updateEnv-2863'/5,
  'case--updateEnv-2815'/7,
  'case--updateEnv-2759'/9,
  'case--case block in updateEnv-2669'/13,
  'case--updateEnv-2642'/11,
  'case--updateEnv-2528'/14,
  'case--getPrivDir-2387'/2,
  'un--updateREPLOpts'/2,
  'un--updateEnv'/2,
  'un--tryYaffle'/1,
  'un--tryTTM'/1,
  'un--stMain'/3,
  'un--showInfo'/3,
  'un--quitOpts'/1,
  'un--mainWithCodegens'/2,
  'un--getPrivDir'/1,
  'un--findInput'/1,
  'un--checkVerbose'/1,
  'un--banner'/0
]).
'case--case block in mainWithCodegens-4708'(V0, V1, V2, V3) -> case V3 of 0 -> fun (V4) -> begin (V5 = ('Idris.Idris2.Utils.Term':'un--setupTerm'(V4))), ('Idris.Idris2.Core.Core':'un--coreRun'('erased', 'erased', fun (V6) -> ('un--stMain'(V1, V2, V6)) end, fun (V7) -> fun (V8) -> begin (V36 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> fun (V16) -> V15 end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), begin (V23 = (V20(V21))), (V22(V23)) end end end end end end end}, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), ((V27(V29))(V28)) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V31(V32))), (V33(V32)) end end end end}, fun (V34) -> fun (V35) -> V35 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Uncaught error: "/utf8>>, ('Idris.Idris2.Core.Core':'dn--un--show_Show__Error'(V7))))))(V8))), (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V39, V40, V41)) end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> V43 end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V47(V49))), begin (V51 = (V48(V49))), (V50(V51)) end end end end end end end}, fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V54(V56))), ((V55(V57))(V56)) end end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V59(V60))), (V61(V60)) end end end end}, fun (V62) -> fun (V63) -> V63 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V8)) end end end, fun (V64) -> fun (V65) -> {'Idris.Builtin.MkUnit'} end end, V4)) end end; 1 -> fun (V66) -> {'Idris.Builtin.MkUnit'} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mainWithCodegens-4691'(V0, V1, V2) -> case V2 of {'Idris.Prelude.Types.Right', E0} -> (fun (V3) -> fun (V4) -> begin (V5 = (('un--quitOpts'(V3))(V4))), case V5 of 0 -> begin (V6 = ('Idris.Idris2.Utils.Term':'un--setupTerm'(V4))), ('Idris.Idris2.Core.Core':'un--coreRun'('erased', 'erased', fun (V7) -> ('un--stMain'(V1, V3, V7)) end, fun (V8) -> fun (V9) -> begin (V37 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Uncaught error: "/utf8>>, ('Idris.Idris2.Core.Core':'dn--un--show_Show__Error'(V8))))))(V9))), (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V40, V41, V42)) end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> V44 end end end, fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> begin (V51 = (V48(V50))), begin (V52 = (V49(V50))), (V51(V52)) end end end end end end end}, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), ((V56(V58))(V57)) end end end end end end, fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V60(V61))), (V62(V61)) end end end end}, fun (V63) -> fun (V64) -> V64 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V9)) end end end, fun (V65) -> fun (V66) -> {'Idris.Builtin.MkUnit'} end end, V4)) end; 1 -> {'Idris.Builtin.MkUnit'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Left', E1} -> (fun (V67) -> fun (V68) -> begin (V96 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V71, V72, V73)) end end end end end, fun (V74) -> fun (V75) -> fun (V76) -> V75 end end end, fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> begin (V82 = (V79(V81))), begin (V83 = (V80(V81))), (V82(V83)) end end end end end end end}, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V86(V88))), ((V87(V89))(V88)) end end end end end end, fun (V90) -> fun (V91) -> fun (V92) -> begin (V93 = (V91(V92))), (V93(V92)) end end end end}, fun (V94) -> fun (V95) -> V95 end end}, V67))(V68))), (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V99, V100, V101)) end end end end end, fun (V102) -> fun (V103) -> fun (V104) -> V103 end end end, fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> begin (V110 = (V107(V109))), begin (V111 = (V108(V109))), (V110(V111)) end end end end end end end}, fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> begin (V117 = (V114(V116))), ((V115(V117))(V116)) end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> begin (V121 = (V119(V120))), (V121(V120)) end end end end}, fun (V122) -> fun (V123) -> V123 end end}, ('Idris.Idris2.Idris.CommandLine':'un--usage'())))(V68)) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in stMain-4596'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Core.Context.MkDefs', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> {'Idris.Core.Context.MkDefs', V6, V7, V8, V9, V5, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in stMain-4376'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> case V32 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V34) -> fun (V35) -> begin (V63 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V38, V39, V40)) end end end end end, fun (V41) -> fun (V42) -> fun (V43) -> V42 end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V46(V48))), begin (V50 = (V47(V48))), (V49(V50)) end end end end end end end}, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), ((V54(V56))(V55)) end end end end end end, fun (V57) -> fun (V58) -> fun (V59) -> begin (V60 = (V58(V59))), (V60(V59)) end end end end}, fun (V61) -> fun (V62) -> V62 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V35))), {'Idris.Prelude.Types.Right', V63} end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in case block in case block in case block in stMain-4070'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> fun (V34) -> begin (V63 = begin (V62 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> V41 end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V45(V47))), begin (V49 = (V46(V47))), (V48(V49)) end end end end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), ((V53(V55))(V54)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V57(V58))), (V59(V58)) end end end end}, fun (V60) -> fun (V61) -> V61 end end}, V33))(V34))), {'Idris.Prelude.Types.Right', V62} end), case V63 of {'Idris.Prelude.Types.Left', E1} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V65) -> begin (V93 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V68, V69, V70)) end end end end end, fun (V71) -> fun (V72) -> fun (V73) -> V72 end end end, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> begin (V79 = (V76(V78))), begin (V80 = (V77(V78))), (V79(V80)) end end end end end end end}, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> begin (V86 = (V83(V85))), ((V84(V86))(V85)) end end end end end end, fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V88(V89))), (V90(V89)) end end end end}, fun (V91) -> fun (V92) -> V92 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V34))), {'Idris.Prelude.Types.Right', V93} end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Right', E3} -> (fun (V94) -> fun (V95) -> begin (V96 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V16, {'Idris.Idris.REPLOpts.IDEMode', 0, V94, V94}, V95))), case V96 of {'Idris.Prelude.Types.Left', E4} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V98) -> ('Idris.Idris2.Idris.IDEMode.REPL':'un--replIDE'(V6, V21, V7, V22, V16, V95)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in case block in case block in stMain-3994'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> case V30 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V31, V32) -> fun (V33) -> begin (V35 = begin (V34 = ('Idris.Idris2.Idris.IDEMode.REPL':'un--initIDESocketFile'(V31, V32, V33))), {'Idris.Prelude.Types.Right', V34} end), case V35 of {'Idris.Prelude.Types.Left', E2} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> case V37 of {'Idris.Prelude.Types.Left', E4} -> (fun (V38) -> begin (V67 = begin (V66 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}, V38))(V33))), {'Idris.Prelude.Types.Right', V66} end), case V67 of {'Idris.Prelude.Types.Left', E5} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V69) -> begin (V97 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V72, V73, V74)) end end end end end, fun (V75) -> fun (V76) -> fun (V77) -> V76 end end end, fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> begin (V83 = (V80(V82))), begin (V84 = (V81(V82))), (V83(V84)) end end end end end end end}, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V87(V89))), ((V88(V90))(V89)) end end end end end end, fun (V91) -> fun (V92) -> fun (V93) -> begin (V94 = (V92(V93))), (V94(V93)) end end end end}, fun (V95) -> fun (V96) -> V96 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V33))), {'Idris.Prelude.Types.Right', V97} end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Prelude.Types.Right', E7} -> (fun (V98) -> begin (V99 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V16, {'Idris.Idris.REPLOpts.IDEMode', 0, V98, V98}, V33))), case V99 of {'Idris.Prelude.Types.Left', E8} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V101) -> ('Idris.Idris2.Idris.IDEMode.REPL':'un--replIDE'(V6, V21, V7, V22, V16, V33)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in case block in stMain-3858'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> case V30 of 0 -> fun (V31) -> begin (V32 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V16, {'Idris.Idris.REPLOpts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}, V31))), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> ('Idris.Idris2.Idris.IDEMode.REPL':'un--replIDE'(V6, V21, V7, V22, V16, V31)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> ('case--case block in case block in case block in case block in case block in case block in stMain-3994'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, ('Idris.Idris2.Idris.CommandLine':'un--ideSocketModeAddress'(V0)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in stMain-3794'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> case V30 of 0 -> ('case--case block in case block in case block in case block in case block in stMain-3858'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, ('Idris.Idris2.Prelude.Basics':'un--not'(V13)))); 1 -> fun (V31) -> begin (V32 = ('Idris.Idris2.Idris.REPL':'un--repl'(V6, V21, V7, V22, V16, V31))), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V6, V31)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in stMain-3733'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> case V29 of 0 -> begin (V30 = 0), ('case--case block in case block in case block in case block in stMain-3794'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V30, ('Idris.Idris2.Prelude.Basics':'un--||'(V12, fun () -> V13 end)))) end; 1 -> fun (V31) -> begin (V60 = begin (V59 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> V38 end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), begin (V46 = (V43(V44))), (V45(V46)) end end end end end end end}, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), ((V50(V52))(V51)) end end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V54(V55))), (V56(V55)) end end end end}, fun (V57) -> fun (V58) -> V58 end end}, V16))(V31))), {'Idris.Prelude.Types.Right', V59} end), case V60 of {'Idris.Prelude.Types.Left', E0} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V62) -> begin (V63 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V6, V31))), case V63 of {'Idris.Prelude.Types.Left', E2} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V65) -> begin (V66 = 1), (('case--case block in case block in case block in case block in stMain-4376'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V66, V62, V65, case V62 of {'Idris.Idris.REPLOpts.MkREPLOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80) -> V73 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V31)) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in stMain-3578'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V26 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V28) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V6, fun () -> <<"+ Loading prelude"/utf8>> end, fun (V29) -> begin (V44 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V24 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V30 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V6, V21, V7, 0, V29)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V44 of {'Idris.Prelude.Types.Left', E14} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V28)) end end()); {'Idris.Prelude.Types.Just', E16} -> (fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V6, fun () -> <<"+ Loading main file"/utf8>> end, fun (V49) -> begin (V50 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V6, V21, V7, V22, V16, V47, V49))), case V50 of {'Idris.Prelude.Types.Left', E17} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V52) -> begin (V53 = (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V6, V21, V7, V22, V16, V52))(V49))), case V53 of {'Idris.Prelude.Types.Left', E19} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V55) -> {'Idris.Prelude.Types.Right', V52} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V48)) end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in stMain-3465'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of 0 -> fun (V27) -> ('Idris.Idris2.Idris.Package':'un--findIpkg'(V6, V16, V15, V27)) end; 1 -> fun (V28) -> {'Idris.Prelude.Types.Right', V15} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in stMain-3321'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of 0 -> fun (V20) -> begin (V21 = case ('un--checkVerbose'(V0)) of 0 -> ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V16, {'Idris.Idris.REPLOpts.REPL', 1}, V20)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V21 of {'Idris.Prelude.Types.Left', E0} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V20))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V20))), case V27 of {'Idris.Prelude.Types.Left', E4} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V29) -> begin (V30 = ('un--updateREPLOpts'(V16, V20))), case V30 of {'Idris.Prelude.Types.Left', E6} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V32) -> begin (V33 = ('Idris.Idris2.Core.Context':'un--getSession'(V6, V20))), case V33 of {'Idris.Prelude.Types.Left', E8} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V35) -> begin (V58 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V35 of {'Idris.Core.Options.MkSessionOpts', E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49) -> V37 end(E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> begin (V50 = ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V16, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('un--banner'()))), V20))), case V50 of {'Idris.Prelude.Types.Left', E10} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V52) -> case ('Idris.Idris2.Data.List':'un--isCons'('erased', V1)) of 0 -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V16, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"With codegen for:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V55, V56)) end end end end, fun (V57) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V57)))) end, V1)))))), V20)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V58 of {'Idris.Prelude.Types.Left', E26} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V60) -> begin (V76 = begin (V61 = 0), (('case--case block in case block in case block in stMain-3465'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V61, V23, V26, V29, V32, V35, V60, case V35 of {'Idris.Core.Options.MkSessionOpts', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75) -> V64 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V20)) end), case V76 of {'Idris.Prelude.Types.Left', E42} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Idris.REPLOpts':'un--setMainFile'(V16, V78, V20))), case V79 of {'Idris.Prelude.Types.Left', E44} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V81) -> begin (V108 = case V78 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V6, fun () -> <<"+ Loading prelude"/utf8>> end, fun (V82) -> begin (V97 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V35 of {'Idris.Core.Options.MkSessionOpts', E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59} -> (fun (V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V83 end(E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V6, V26, V7, 0, V82)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V97 of {'Idris.Prelude.Types.Left', E60} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V20)) end()); {'Idris.Prelude.Types.Just', E62} -> (fun (V100) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V6, fun () -> <<"+ Loading main file"/utf8>> end, fun (V101) -> begin (V102 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V6, V26, V7, V29, V16, V100, V101))), case V102 of {'Idris.Prelude.Types.Left', E63} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V104) -> begin (V105 = (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V6, V26, V7, V29, V16, V104))(V101))), case V105 of {'Idris.Prelude.Types.Left', E65} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V107) -> {'Idris.Prelude.Types.Right', V104} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V20)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V108 of {'Idris.Prelude.Types.Left', E67} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V110) -> begin (V111 = (('Idris.Idris2.Idris.SetOptions':'un--postOptions'(V6, V26, V7, V29, V16, V110, V0))(V20))), case V111 of {'Idris.Prelude.Types.Left', E69} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V113) -> begin (V114 = 0), case V113 of 0 -> begin (V115 = 0), (('case--case block in case block in case block in case block in stMain-3794'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V114, V23, V26, V29, V32, V35, V60, V78, V81, V110, V115, ('Idris.Idris2.Prelude.Basics':'un--||'(V12, fun () -> V13 end))))(V20)) end; 1 -> begin (V144 = begin (V143 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V118, V119, V120)) end end end end end, fun (V121) -> fun (V122) -> fun (V123) -> V122 end end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> begin (V129 = (V126(V128))), begin (V130 = (V127(V128))), (V129(V130)) end end end end end end end}, fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> begin (V136 = (V133(V135))), ((V134(V136))(V135)) end end end end end end, fun (V137) -> fun (V138) -> fun (V139) -> begin (V140 = (V138(V139))), (V140(V139)) end end end end}, fun (V141) -> fun (V142) -> V142 end end}, V16))(V20))), {'Idris.Prelude.Types.Right', V143} end), case V144 of {'Idris.Prelude.Types.Left', E71} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V146) -> begin (V147 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V6, V20))), case V147 of {'Idris.Prelude.Types.Left', E73} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V149) -> begin (V150 = 1), (('case--case block in case block in case block in case block in stMain-4376'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V114, V23, V26, V29, V32, V35, V60, V78, V81, V110, V150, V146, V149, case V146 of {'Idris.Idris.REPLOpts.MkREPLOpts', E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164) -> V157 end(E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V20)) end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> fun (V165) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in stMain-3228'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V12 of 0 -> {'Idris.Idris.REPLOpts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}; 1 -> {'Idris.Idris.REPLOpts.REPL', 1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in stMain-3147'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('Idris.Idris2.Core.Options':'un--addCG'({'Idris.Builtin.MkPair', V7, {'Idris.Core.Options.Other', V7}}, V5)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in stMain-3125'(V0, V1, V2, V3) -> case V3 of 1 -> fun (V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--initDefs'(V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V38 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V8) -> fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V10, V11) -> ('Idris.Idris2.Core.Options':'un--addCG'({'Idris.Builtin.MkPair', V10, {'Idris.Core.Options.Other', V10}}, V8)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, case V7 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V16 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1))), begin (V65 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Context.Ctxt'}, case V7 of {'Idris.Core.Context.MkDefs', E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64) -> {'Idris.Core.Context.MkDefs', V39, V40, V41, V42, V38, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64} end(E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V65 of {'Idris.Prelude.Types.Left', E56} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V67) -> begin (V68 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Syntax.Syn'}, ('Idris.Idris2.Idris.Syntax':'un--initSyntax'()), V4))), case V68 of {'Idris.Prelude.Types.Left', E58} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V70) -> begin (V72 = ('Idris.Idris2.Core.Context':'un--setCG'(V67, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Core.Options.Chez'} end, fun () -> fun (V71) -> {'Idris.Core.Options.Other', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V71))} end end, ('Idris.Idris2.Data.List':'un--head\x{27}'('erased', V1)))), V4))), case V72 of {'Idris.Prelude.Types.Left', E60} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V74) -> begin (V75 = (('Idris.Idris2.Core.InitPrimitives':'un--addPrimitives'(V67))(V4))), case V75 of {'Idris.Prelude.Types.Left', E62} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V77) -> begin (V78 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V67, <<"."/utf8>>, V4))), case V78 of {'Idris.Prelude.Types.Left', E64} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V80) -> begin (V81 = ('un--updateEnv'(V67, V4))), case V81 of {'Idris.Prelude.Types.Left', E66} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V83) -> begin (V84 = ('Idris.Idris2.Idris.SetOptions':'un--ideMode'(V0))), begin (V85 = ('Idris.Idris2.Idris.SetOptions':'un--ideModeSocket'(V0))), begin (V86 = case V84 of 0 -> {'Idris.Idris.REPLOpts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}; 1 -> {'Idris.Idris.REPLOpts.REPL', 1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V87 = ('un--findInput'(V0))), begin (V88 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.REPLOpts.ROpts'}, ('Idris.Idris2.Idris.REPLOpts':'un--defaultOpts'(V87, V86, V1)), V4))), case V88 of {'Idris.Prelude.Types.Left', E68} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V90) -> begin (V91 = (('un--showInfo'(V67, V90, V0))(V4))), case V91 of {'Idris.Prelude.Types.Left', E70} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V93) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V93)) of 0 -> begin (V94 = (('Idris.Idris2.Idris.Package':'un--processPackageOpts'(V67, V70, V90, V0))(V4))), case V94 of {'Idris.Prelude.Types.Left', E72} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V96) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V96)) of 0 -> begin (V97 = (('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V67, V90, V0))(V4))), case V97 of {'Idris.Prelude.Types.Left', E74} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V99) -> begin (V100 = 1), case V99 of 0 -> begin (V101 = case ('un--checkVerbose'(V0)) of 0 -> ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V90, {'Idris.Idris.REPLOpts.REPL', 1}, V4)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V101 of {'Idris.Prelude.Types.Left', E76} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V103) -> begin (V104 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V4))), case V104 of {'Idris.Prelude.Types.Left', E78} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V106) -> begin (V107 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V4))), case V107 of {'Idris.Prelude.Types.Left', E80} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V109) -> begin (V110 = ('un--updateREPLOpts'(V90, V4))), case V110 of {'Idris.Prelude.Types.Left', E82} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V112) -> begin (V113 = ('Idris.Idris2.Core.Context':'un--getSession'(V67, V4))), case V113 of {'Idris.Prelude.Types.Left', E84} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V115) -> begin (V138 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V115 of {'Idris.Core.Options.MkSessionOpts', E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101} -> (fun (V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129) -> V117 end(E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> begin (V130 = ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V90, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('un--banner'()))), V4))), case V130 of {'Idris.Prelude.Types.Left', E86} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V132) -> case ('Idris.Idris2.Data.List':'un--isCons'('erased', V1)) of 0 -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V90, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"With codegen for:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V135, V136)) end end end end, fun (V137) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V137)))) end, V1)))))), V4)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V138 of {'Idris.Prelude.Types.Left', E102} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V140) -> begin (V156 = begin (V141 = 0), (('case--case block in case block in case block in stMain-3465'(V0, V1, V2, V100, V7, V38, V67, V70, V74, V77, V80, V83, V84, V85, V86, V87, V90, V93, V96, V141, V103, V106, V109, V112, V115, V140, case V115 of {'Idris.Core.Options.MkSessionOpts', E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117} -> (fun (V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155) -> V144 end(E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end), case V156 of {'Idris.Prelude.Types.Left', E118} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V158) -> begin (V159 = ('Idris.Idris2.Idris.REPLOpts':'un--setMainFile'(V90, V158, V4))), case V159 of {'Idris.Prelude.Types.Left', E120} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V161) -> begin (V188 = case V158 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V67, fun () -> <<"+ Loading prelude"/utf8>> end, fun (V162) -> begin (V177 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V115 of {'Idris.Core.Options.MkSessionOpts', E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135} -> (fun (V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176) -> V163 end(E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V67, V106, V70, 0, V162)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V177 of {'Idris.Prelude.Types.Left', E136} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V179) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4)) end()); {'Idris.Prelude.Types.Just', E138} -> (fun (V180) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V67, fun () -> <<"+ Loading main file"/utf8>> end, fun (V181) -> begin (V182 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V67, V106, V70, V109, V90, V180, V181))), case V182 of {'Idris.Prelude.Types.Left', E139} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V184) -> begin (V185 = (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V67, V106, V70, V109, V90, V184))(V181))), case V185 of {'Idris.Prelude.Types.Left', E141} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V187) -> {'Idris.Prelude.Types.Right', V184} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V188 of {'Idris.Prelude.Types.Left', E143} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V190) -> begin (V191 = (('Idris.Idris2.Idris.SetOptions':'un--postOptions'(V67, V106, V70, V109, V90, V190, V0))(V4))), case V191 of {'Idris.Prelude.Types.Left', E145} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V193) -> begin (V194 = 0), case V193 of 0 -> begin (V195 = 0), (('case--case block in case block in case block in case block in stMain-3794'(V0, V1, V2, V100, V7, V38, V67, V70, V74, V77, V80, V83, V84, V85, V86, V87, V90, V93, V96, V194, V103, V106, V109, V112, V115, V140, V158, V161, V190, V195, ('Idris.Idris2.Prelude.Basics':'un--||'(V84, fun () -> V85 end))))(V4)) end; 1 -> begin (V224 = begin (V223 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V198, V199, V200)) end end end end end, fun (V201) -> fun (V202) -> fun (V203) -> V202 end end end, fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> begin (V209 = (V206(V208))), begin (V210 = (V207(V208))), (V209(V210)) end end end end end end end}, fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> begin (V216 = (V213(V215))), ((V214(V216))(V215)) end end end end end end, fun (V217) -> fun (V218) -> fun (V219) -> begin (V220 = (V218(V219))), (V220(V219)) end end end end}, fun (V221) -> fun (V222) -> V222 end end}, V90))(V4))), {'Idris.Prelude.Types.Right', V223} end), case V224 of {'Idris.Prelude.Types.Left', E147} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V226) -> begin (V227 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V67, V4))), case V227 of {'Idris.Prelude.Types.Left', E149} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V229) -> begin (V230 = 1), (('case--case block in case block in case block in case block in stMain-4376'(V0, V1, V2, V100, V7, V38, V67, V70, V74, V77, V80, V83, V84, V85, V86, V87, V90, V93, V96, V194, V103, V106, V109, V112, V115, V140, V158, V161, V190, V230, V226, V229, case V226 of {'Idris.Idris.REPLOpts.MkREPLOpts', E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164} -> (fun (V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244) -> V237 end(E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> fun (V245) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--stMain-3114'(V0, V1, V2) -> case V2 of 1 -> fun (V3) -> begin (V4 = (('un--tryTTM'(V0))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V7 = 1), case V6 of 1 -> begin (V8 = ('Idris.Idris2.Core.Context':'un--initDefs'(V3))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V41 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V11) -> fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V13, V14) -> ('Idris.Idris2.Core.Options':'un--addCG'({'Idris.Builtin.MkPair', V13, {'Idris.Core.Options.Other', V13}}, V11)) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, case V10 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V19 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1))), begin (V68 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Context.Ctxt'}, case V10 of {'Idris.Core.Context.MkDefs', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> {'Idris.Core.Context.MkDefs', V42, V43, V44, V45, V41, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V68 of {'Idris.Prelude.Types.Left', E58} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V70) -> begin (V71 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Syntax.Syn'}, ('Idris.Idris2.Idris.Syntax':'un--initSyntax'()), V3))), case V71 of {'Idris.Prelude.Types.Left', E60} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V73) -> begin (V75 = ('Idris.Idris2.Core.Context':'un--setCG'(V70, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Core.Options.Chez'} end, fun () -> fun (V74) -> {'Idris.Core.Options.Other', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V74))} end end, ('Idris.Idris2.Data.List':'un--head\x{27}'('erased', V1)))), V3))), case V75 of {'Idris.Prelude.Types.Left', E62} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V77) -> begin (V78 = (('Idris.Idris2.Core.InitPrimitives':'un--addPrimitives'(V70))(V3))), case V78 of {'Idris.Prelude.Types.Left', E64} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V80) -> begin (V81 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V70, <<"."/utf8>>, V3))), case V81 of {'Idris.Prelude.Types.Left', E66} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V83) -> begin (V84 = ('un--updateEnv'(V70, V3))), case V84 of {'Idris.Prelude.Types.Left', E68} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V86) -> begin (V87 = ('Idris.Idris2.Idris.SetOptions':'un--ideMode'(V0))), begin (V88 = ('Idris.Idris2.Idris.SetOptions':'un--ideModeSocket'(V0))), begin (V89 = case V87 of 0 -> {'Idris.Idris.REPLOpts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}; 1 -> {'Idris.Idris.REPLOpts.REPL', 1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V90 = ('un--findInput'(V0))), begin (V91 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.REPLOpts.ROpts'}, ('Idris.Idris2.Idris.REPLOpts':'un--defaultOpts'(V90, V89, V1)), V3))), case V91 of {'Idris.Prelude.Types.Left', E70} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V93) -> begin (V94 = (('un--showInfo'(V70, V93, V0))(V3))), case V94 of {'Idris.Prelude.Types.Left', E72} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V96) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V96)) of 0 -> begin (V97 = (('Idris.Idris2.Idris.Package':'un--processPackageOpts'(V70, V73, V93, V0))(V3))), case V97 of {'Idris.Prelude.Types.Left', E74} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V99) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V99)) of 0 -> begin (V100 = (('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V70, V93, V0))(V3))), case V100 of {'Idris.Prelude.Types.Left', E76} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V102) -> begin (V103 = 1), case V102 of 0 -> begin (V104 = case ('un--checkVerbose'(V0)) of 0 -> ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V93, {'Idris.Idris.REPLOpts.REPL', 1}, V3)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V104 of {'Idris.Prelude.Types.Left', E78} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V106) -> begin (V107 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V3))), case V107 of {'Idris.Prelude.Types.Left', E80} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V109) -> begin (V110 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V3))), case V110 of {'Idris.Prelude.Types.Left', E82} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V112) -> begin (V113 = ('un--updateREPLOpts'(V93, V3))), case V113 of {'Idris.Prelude.Types.Left', E84} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V115) -> begin (V116 = ('Idris.Idris2.Core.Context':'un--getSession'(V70, V3))), case V116 of {'Idris.Prelude.Types.Left', E86} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V118) -> begin (V141 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V118 of {'Idris.Core.Options.MkSessionOpts', E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103} -> (fun (V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132) -> V120 end(E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> begin (V133 = ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V93, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('un--banner'()))), V3))), case V133 of {'Idris.Prelude.Types.Left', E88} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V135) -> case ('Idris.Idris2.Data.List':'un--isCons'('erased', V1)) of 0 -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V93, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"With codegen for:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V138, V139)) end end end end, fun (V140) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V140)))) end, V1)))))), V3)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V141 of {'Idris.Prelude.Types.Left', E104} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V143) -> begin (V159 = begin (V144 = 0), (('case--case block in case block in case block in stMain-3465'(V0, V1, V7, V103, V10, V41, V70, V73, V77, V80, V83, V86, V87, V88, V89, V90, V93, V96, V99, V144, V106, V109, V112, V115, V118, V143, case V118 of {'Idris.Core.Options.MkSessionOpts', E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119} -> (fun (V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158) -> V147 end(E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3)) end), case V159 of {'Idris.Prelude.Types.Left', E120} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V161) -> begin (V162 = ('Idris.Idris2.Idris.REPLOpts':'un--setMainFile'(V93, V161, V3))), case V162 of {'Idris.Prelude.Types.Left', E122} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V164) -> begin (V191 = case V161 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V70, fun () -> <<"+ Loading prelude"/utf8>> end, fun (V165) -> begin (V180 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V118 of {'Idris.Core.Options.MkSessionOpts', E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137} -> (fun (V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179) -> V166 end(E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V70, V109, V73, 0, V165)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V180 of {'Idris.Prelude.Types.Left', E138} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V182) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3)) end()); {'Idris.Prelude.Types.Just', E140} -> (fun (V183) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V70, fun () -> <<"+ Loading main file"/utf8>> end, fun (V184) -> begin (V185 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V70, V109, V73, V112, V93, V183, V184))), case V185 of {'Idris.Prelude.Types.Left', E141} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V187) -> begin (V188 = (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V70, V109, V73, V112, V93, V187))(V184))), case V188 of {'Idris.Prelude.Types.Left', E143} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V190) -> {'Idris.Prelude.Types.Right', V187} end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3)) end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V191 of {'Idris.Prelude.Types.Left', E145} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V193) -> begin (V194 = (('Idris.Idris2.Idris.SetOptions':'un--postOptions'(V70, V109, V73, V112, V93, V193, V0))(V3))), case V194 of {'Idris.Prelude.Types.Left', E147} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V196) -> begin (V197 = 0), case V196 of 0 -> begin (V198 = 0), (('case--case block in case block in case block in case block in stMain-3794'(V0, V1, V7, V103, V10, V41, V70, V73, V77, V80, V83, V86, V87, V88, V89, V90, V93, V96, V99, V197, V106, V109, V112, V115, V118, V143, V161, V164, V193, V198, ('Idris.Idris2.Prelude.Basics':'un--||'(V87, fun () -> V88 end))))(V3)) end; 1 -> begin (V227 = begin (V226 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V201, V202, V203)) end end end end end, fun (V204) -> fun (V205) -> fun (V206) -> V205 end end end, fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> begin (V212 = (V209(V211))), begin (V213 = (V210(V211))), (V212(V213)) end end end end end end end}, fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> begin (V219 = (V216(V218))), ((V217(V219))(V218)) end end end end end end, fun (V220) -> fun (V221) -> fun (V222) -> begin (V223 = (V221(V222))), (V223(V222)) end end end end}, fun (V224) -> fun (V225) -> V225 end end}, V93))(V3))), {'Idris.Prelude.Types.Right', V226} end), case V227 of {'Idris.Prelude.Types.Left', E149} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V229) -> begin (V230 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V70, V3))), case V230 of {'Idris.Prelude.Types.Left', E151} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V232) -> begin (V233 = 1), (('case--case block in case block in case block in case block in stMain-4376'(V0, V1, V7, V103, V10, V41, V70, V73, V77, V80, V83, V86, V87, V88, V89, V90, V93, V96, V99, V197, V106, V109, V112, V115, V118, V143, V161, V164, V193, V233, V229, V232, case V229 of {'Idris.Idris.REPLOpts.MkREPLOpts', E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166} -> (fun (V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247) -> V240 end(E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3)) end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> fun (V248) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in updateREPLOpts-2972'(V0, V1, V2, V3) -> case V1 of {'Idris.Idris.REPLOpts.MkREPLOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V4, V5, V6, V7, V8, V2, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateREPLOpts-2942'(V0, V1, V2) -> case V2 of {'Idris.Prelude.Types.Just', E0} -> (fun (V3) -> fun (V4) -> begin (V46 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> V11 end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> begin (V18 = (V15(V17))), begin (V19 = (V16(V17))), (V18(V19)) end end end end end end end}, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), ((V23(V25))(V24)) end end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V27(V28))), (V29(V28)) end end end end}, fun (V30) -> fun (V31) -> V31 end end}, V0, case V1 of {'Idris.Idris.REPLOpts.MkREPLOpts', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V32, V33, V34, V35, V36, V3, V38, V39, V40, V41, V42, V43, V44, V45} end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), {'Idris.Prelude.Types.Right', V46} end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2903'(V0, V1, V2) -> case V2 of {'Idris.Prelude.Types.Just', E0} -> (fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Context':'un--setPrefix'(V0, V3, V4)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2863'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> ('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V0, V6, V7)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V8) -> ('Idris.Idris2.Data.Strings':'un--trim'(V8)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V9) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V9, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V5)))))) end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2815'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> ('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, V8, V9)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V10) -> ('Idris.Idris2.Data.Strings':'un--trim'(V10)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V11) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V11, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V7)))))) end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2759'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> ('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, V10, V11)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V12) -> ('Idris.Idris2.Data.Strings':'un--trim'(V12)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V13) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V13, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V9)))))) end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in updateEnv-2669'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Context':'un--setCG'(V0, V13, V14)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V15) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Unknown code generator "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V10))))}, V15)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2642'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> begin (V12 = {'Idris.Prelude.Types.Just', V11}), ('case--case block in updateEnv-2669'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V11, V12, ('Idris.Idris2.Core.Options':'un--getCG'(case V1 of {'Idris.Core.Context.MkDefs', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V17 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V11)))) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateEnv-2528'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"prelude"/utf8>>, V15))), case V16 of {'Idris.Prelude.Types.Left', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"base"/utf8>>, V15))), case V19 of {'Idris.Prelude.Types.Left', E3} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V21) -> begin (V22 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"erlang"/utf8>>, V15))), case V22 of {'Idris.Prelude.Types.Left', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Core.Context':'un--addPkgDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V14, <<"libs"/utf8>>)), V15))), case V25 of {'Idris.Prelude.Types.Left', E7} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V27) -> begin (V28 = ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V14, <<"support"/utf8>>)), V15))), case V28 of {'Idris.Prelude.Types.Left', E9} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V30) -> begin (V31 = ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, <<"lib"/utf8>>, V15))), case V31 of {'Idris.Prelude.Types.Left', E11} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V33) -> ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V14, <<"lib"/utf8>>)), V15)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V34) -> begin (V62 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> V41 end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V45(V47))), begin (V49 = (V46(V47))), (V48(V49)) end end end end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), ((V53(V55))(V54)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V57(V58))), (V59(V58)) end end end end}, fun (V60) -> fun (V61) -> V61 end end}, <<"Directory idris2/priv not found"/utf8>>))(V34))), {'Idris.Prelude.Types.Right', V62} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getPrivDir-2387'(V0, V1) -> case V1 of E0 -> (fun (V2) -> V2 end((fun (V3) -> ('unicode':'characters_to_binary'(V3)) end(E0)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--updateREPLOpts'(V0, V1) -> begin (V30 = begin (V29 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V4, V5, V6)) end end end end end, fun (V7) -> fun (V8) -> fun (V9) -> V8 end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> begin (V15 = (V12(V14))), begin (V16 = (V13(V14))), (V15(V16)) end end end end end end end}, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), ((V20(V22))(V21)) end end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V24(V25))), (V26(V25)) end end end end}, fun (V27) -> fun (V28) -> V28 end end}, V0))(V1))), {'Idris.Prelude.Types.Right', V29} end), case V30 of {'Idris.Prelude.Types.Left', E0} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V32) -> begin (V61 = begin (V60 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V35, V36, V37)) end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> V39 end end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V43(V45))), begin (V47 = (V44(V45))), (V46(V47)) end end end end end end end}, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> begin (V53 = (V50(V52))), ((V51(V53))(V52)) end end end end end end, fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V55(V56))), (V57(V56)) end end end end}, fun (V58) -> fun (V59) -> V59 end end}, <<"EDITOR"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V60} end), case V61 of {'Idris.Prelude.Types.Left', E2} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V63) -> case V63 of {'Idris.Prelude.Types.Just', E4} -> (fun (V64) -> begin (V106 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V67, V68, V69)) end end end end end, fun (V70) -> fun (V71) -> fun (V72) -> V71 end end end, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V75(V77))), begin (V79 = (V76(V77))), (V78(V79)) end end end end end end end}, fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> begin (V85 = (V82(V84))), ((V83(V85))(V84)) end end end end end end, fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V87(V88))), (V89(V88)) end end end end}, fun (V90) -> fun (V91) -> V91 end end}, V0, case V32 of {'Idris.Idris.REPLOpts.MkREPLOpts', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18} -> (fun (V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105) -> {'Idris.Idris.REPLOpts.MkREPLOpts', V92, V93, V94, V95, V96, V64, V98, V99, V100, V101, V102, V103, V104, V105} end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V1))), {'Idris.Prelude.Types.Right', V106} end end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--updateEnv'(V0, V1) -> begin (V30 = begin (V29 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V4, V5, V6)) end end end end end, fun (V7) -> fun (V8) -> fun (V9) -> V8 end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> begin (V15 = (V12(V14))), begin (V16 = (V13(V14))), (V15(V16)) end end end end end end end}, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> begin (V22 = (V19(V21))), ((V20(V22))(V21)) end end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V24(V25))), (V26(V25)) end end end end}, fun (V27) -> fun (V28) -> V28 end end}, V0))(V1))), {'Idris.Prelude.Types.Right', V29} end), case V30 of {'Idris.Prelude.Types.Left', E0} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V32) -> begin (V61 = begin (V60 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V35, V36, V37)) end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> V39 end end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V43(V45))), begin (V47 = (V44(V45))), (V46(V47)) end end end end end end end}, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> begin (V53 = (V50(V52))), ((V51(V53))(V52)) end end end end end end, fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V55(V56))), (V57(V56)) end end end end}, fun (V58) -> fun (V59) -> V59 end end}, <<"IDRIS2_PREFIX"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V60} end), case V61 of {'Idris.Prelude.Types.Left', E2} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V63) -> begin (V65 = case V63 of {'Idris.Prelude.Types.Just', E4} -> (fun (V64) -> ('Idris.Idris2.Core.Context':'un--setPrefix'(V0, V64, V1)) end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V65 of {'Idris.Prelude.Types.Left', E5} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V67) -> begin (V96 = begin (V95 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V70, V71, V72)) end end end end end, fun (V73) -> fun (V74) -> fun (V75) -> V74 end end end, fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> begin (V81 = (V78(V80))), begin (V82 = (V79(V80))), (V81(V82)) end end end end end end end}, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V85(V87))), ((V86(V88))(V87)) end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> begin (V92 = (V90(V91))), (V92(V91)) end end end end}, fun (V93) -> fun (V94) -> V94 end end}, <<"IDRIS2_PATH"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V95} end), case V96 of {'Idris.Prelude.Types.Left', E7} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V98) -> begin (V104 = case V98 of {'Idris.Prelude.Types.Just', E9} -> (fun (V99) -> (('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Context':'un--addExtraDir'(V0, V100, V101)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V102) -> ('Idris.Idris2.Data.Strings':'un--trim'(V102)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V103) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V103, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V99))))))(V1)) end(E9)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V104 of {'Idris.Prelude.Types.Left', E10} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V106) -> begin (V135 = begin (V134 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V109, V110, V111)) end end end end end, fun (V112) -> fun (V113) -> fun (V114) -> V113 end end end, fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V117(V119))), begin (V121 = (V118(V119))), (V120(V121)) end end end end end end end}, fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> begin (V127 = (V124(V126))), ((V125(V127))(V126)) end end end end end end, fun (V128) -> fun (V129) -> fun (V130) -> begin (V131 = (V129(V130))), (V131(V130)) end end end end}, fun (V132) -> fun (V133) -> V133 end end}, <<"IDRIS2_DATA"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V134} end), case V135 of {'Idris.Prelude.Types.Left', E12} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V137) -> begin (V143 = case V137 of {'Idris.Prelude.Types.Just', E14} -> (fun (V138) -> (('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, V139, V140)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V141) -> ('Idris.Idris2.Data.Strings':'un--trim'(V141)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V142) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V142, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V138))))))(V1)) end(E14)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V143 of {'Idris.Prelude.Types.Left', E15} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V145) -> begin (V174 = begin (V173 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V148, V149, V150)) end end end end end, fun (V151) -> fun (V152) -> fun (V153) -> V152 end end end, fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> begin (V159 = (V156(V158))), begin (V160 = (V157(V158))), (V159(V160)) end end end end end end end}, fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> begin (V166 = (V163(V165))), ((V164(V166))(V165)) end end end end end end, fun (V167) -> fun (V168) -> fun (V169) -> begin (V170 = (V168(V169))), (V170(V169)) end end end end}, fun (V171) -> fun (V172) -> V172 end end}, <<"IDRIS2_LIBS"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V173} end), case V174 of {'Idris.Prelude.Types.Left', E17} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V176) -> begin (V182 = case V176 of {'Idris.Prelude.Types.Just', E19} -> (fun (V177) -> (('Idris.Idris2.Core.Core':'un--traverseList1_'('erased', 'erased', fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, V178, V179)) end end, ('Idris.Idris2.Data.List1':'dn--un--map_Functor__List1'('erased', 'erased', fun (V180) -> ('Idris.Idris2.Data.Strings':'un--trim'(V180)) end, ('Idris.Idris2.Data.Strings':'un--split'(fun (V181) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__Char'(V181, ('Idris.Idris2.Utils.Path':'un--pathSeparator'()))) end, V177))))))(V1)) end(E19)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V182 of {'Idris.Prelude.Types.Left', E20} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V184) -> begin (V213 = begin (V212 = (('Idris.Idris2.Erlang.System':'un--getEnv'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V187, V188, V189)) end end end end end, fun (V190) -> fun (V191) -> fun (V192) -> V191 end end end, fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> begin (V198 = (V195(V197))), begin (V199 = (V196(V197))), (V198(V199)) end end end end end end end}, fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> begin (V205 = (V202(V204))), ((V203(V205))(V204)) end end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> begin (V209 = (V207(V208))), (V209(V208)) end end end end}, fun (V210) -> fun (V211) -> V211 end end}, <<"IDRIS2_CG"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V212} end), case V213 of {'Idris.Prelude.Types.Left', E22} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V215) -> begin (V244 = case V215 of {'Idris.Prelude.Types.Just', E24} -> (fun (V216) -> begin (V217 = {'Idris.Prelude.Types.Just', V216}), (('case--case block in updateEnv-2669'(V0, V32, V63, V67, V98, V106, V137, V145, V176, V184, V216, V217, ('Idris.Idris2.Core.Options':'un--getCG'(case V32 of {'Idris.Core.Context.MkDefs', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50} -> (fun (V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243) -> V222 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V216))))(V1)) end end(E24)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V244 of {'Idris.Prelude.Types.Left', E51} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V246) -> begin (V275 = begin (V274 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V249, V250, V251)) end end end end end, fun (V252) -> fun (V253) -> fun (V254) -> V253 end end end, fun (V255) -> fun (V256) -> fun (V257) -> fun (V258) -> fun (V259) -> begin (V260 = (V257(V259))), begin (V261 = (V258(V259))), (V260(V261)) end end end end end end end}, fun (V262) -> fun (V263) -> fun (V264) -> fun (V265) -> fun (V266) -> begin (V267 = (V264(V266))), ((V265(V267))(V266)) end end end end end end, fun (V268) -> fun (V269) -> fun (V270) -> begin (V271 = (V269(V270))), (V271(V270)) end end end end}, fun (V272) -> fun (V273) -> V273 end end}, V0))(V1))), {'Idris.Prelude.Types.Right', V274} end), case V275 of {'Idris.Prelude.Types.Left', E53} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V277) -> begin (V279 = begin (V278 = ('un--getPrivDir'(V1))), {'Idris.Prelude.Types.Right', V278} end), case V279 of {'Idris.Prelude.Types.Left', E55} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V281) -> case V281 of {'Idris.Prelude.Types.Just', E57} -> (fun (V282) -> begin (V283 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"prelude"/utf8>>, V1))), case V283 of {'Idris.Prelude.Types.Left', E58} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V285) -> begin (V286 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"base"/utf8>>, V1))), case V286 of {'Idris.Prelude.Types.Left', E60} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V288) -> begin (V289 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, <<"erlang"/utf8>>, V1))), case V289 of {'Idris.Prelude.Types.Left', E62} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V291) -> begin (V292 = ('Idris.Idris2.Core.Context':'un--addPkgDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V282, <<"libs"/utf8>>)), V1))), case V292 of {'Idris.Prelude.Types.Left', E64} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V294) -> begin (V295 = ('Idris.Idris2.Core.Context':'un--addDataDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V282, <<"support"/utf8>>)), V1))), case V295 of {'Idris.Prelude.Types.Left', E66} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V297) -> begin (V298 = ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, <<"lib"/utf8>>, V1))), case V298 of {'Idris.Prelude.Types.Left', E68} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V300) -> ('Idris.Idris2.Core.Context':'un--addLibDir'(V0, ('Idris.Idris2.Utils.Path':'un--</>'(V282, <<"lib"/utf8>>)), V1)) end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V328 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V301) -> fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V303, V304, V305)) end end end end end, fun (V306) -> fun (V307) -> fun (V308) -> V307 end end end, fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> begin (V314 = (V311(V313))), begin (V315 = (V312(V313))), (V314(V315)) end end end end end end end}, fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> begin (V321 = (V318(V320))), ((V319(V321))(V320)) end end end end end end, fun (V322) -> fun (V323) -> fun (V324) -> begin (V325 = (V323(V324))), (V325(V324)) end end end end}, fun (V326) -> fun (V327) -> V327 end end}, <<"Directory idris2/priv not found"/utf8>>))(V1))), {'Idris.Prelude.Types.Right', V328} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--tryYaffle'(V0) -> case V0 of [] -> fun (V1) -> {'Idris.Prelude.Types.Right', 1} end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Idris.CommandLine.Yaffle', E2} -> (fun (V4) -> fun (V5) -> begin (V6 = ('Idris.Idris2.Yaffle.Main':'un--yaffleMain'(V4, [], V5))), case V6 of {'Idris.Prelude.Types.Left', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V8) -> {'Idris.Prelude.Types.Right', 0} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); _ -> ('un--tryYaffle'(V3)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--tryTTM'(V0) -> case V0 of [] -> fun (V1) -> {'Idris.Prelude.Types.Right', 1} end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Idris.CommandLine.Metadata', E2} -> (fun (V4) -> fun (V5) -> begin (V6 = ('Idris.Idris2.Core.Metadata':'un--dumpTTM'(V4, V5))), case V6 of {'Idris.Prelude.Types.Left', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V8) -> {'Idris.Prelude.Types.Right', 0} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); _ -> ('un--tryTTM'(V3)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--stMain'(V0, V1, V2) -> begin (V3 = (('un--tryYaffle'(V1))(V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> case V5 of 1 -> begin (V6 = (('un--tryTTM'(V1))(V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> begin (V9 = 1), case V8 of 1 -> begin (V10 = ('Idris.Idris2.Core.Context':'un--initDefs'(V2))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> begin (V43 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', fun (V13) -> fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> ('Idris.Idris2.Core.Options':'un--addCG'({'Idris.Builtin.MkPair', V15, {'Idris.Core.Options.Other', V15}}, V13)) end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, case V12 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V21 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V0))), begin (V70 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Context.Ctxt'}, case V12 of {'Idris.Core.Context.MkDefs', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> {'Idris.Core.Context.MkDefs', V44, V45, V46, V47, V43, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69} end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V70 of {'Idris.Prelude.Types.Left', E60} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.Syntax.Syn'}, ('Idris.Idris2.Idris.Syntax':'un--initSyntax'()), V2))), case V73 of {'Idris.Prelude.Types.Left', E62} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V75) -> begin (V77 = ('Idris.Idris2.Core.Context':'un--setCG'(V72, ('Idris.Idris2.Prelude.Types':'un--maybe'('erased', 'erased', fun () -> {'Idris.Core.Options.Chez'} end, fun () -> fun (V76) -> {'Idris.Core.Options.Other', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V76))} end end, ('Idris.Idris2.Data.List':'un--head\x{27}'('erased', V0)))), V2))), case V77 of {'Idris.Prelude.Types.Left', E64} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V79) -> begin (V80 = (('Idris.Idris2.Core.InitPrimitives':'un--addPrimitives'(V72))(V2))), case V80 of {'Idris.Prelude.Types.Left', E66} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V82) -> begin (V83 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V72, <<"."/utf8>>, V2))), case V83 of {'Idris.Prelude.Types.Left', E68} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V85) -> begin (V86 = ('un--updateEnv'(V72, V2))), case V86 of {'Idris.Prelude.Types.Left', E70} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V88) -> begin (V89 = ('Idris.Idris2.Idris.SetOptions':'un--ideMode'(V1))), begin (V90 = ('Idris.Idris2.Idris.SetOptions':'un--ideModeSocket'(V1))), begin (V91 = case V89 of 0 -> {'Idris.Idris.REPLOpts.IDEMode', 0, ('Idris.Idris2.Erlang.System.File':'un--stdin'()), ('Idris.Idris2.Erlang.System.File':'un--stdout'())}; 1 -> {'Idris.Idris.REPLOpts.REPL', 1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V92 = ('un--findInput'(V1))), begin (V93 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Idris.REPLOpts.ROpts'}, ('Idris.Idris2.Idris.REPLOpts':'un--defaultOpts'(V92, V91, V0)), V2))), case V93 of {'Idris.Prelude.Types.Left', E72} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V95) -> begin (V96 = (('un--showInfo'(V72, V95, V1))(V2))), case V96 of {'Idris.Prelude.Types.Left', E74} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V98) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V98)) of 0 -> begin (V99 = (('Idris.Idris2.Idris.Package':'un--processPackageOpts'(V72, V75, V95, V1))(V2))), case V99 of {'Idris.Prelude.Types.Left', E76} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V101) -> case ('Idris.Idris2.Prelude.Basics':'un--not'(V101)) of 0 -> begin (V102 = (('Idris.Idris2.Idris.SetOptions':'un--preOptions'(V72, V95, V1))(V2))), case V102 of {'Idris.Prelude.Types.Left', E78} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V104) -> begin (V105 = 1), case V104 of 0 -> begin (V106 = case ('un--checkVerbose'(V1)) of 0 -> ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V95, {'Idris.Idris.REPLOpts.REPL', 1}, V2)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V106 of {'Idris.Prelude.Types.Left', E80} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V108) -> begin (V109 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.UnifyState.UST'}, ('Idris.Idris2.Core.UnifyState':'un--initUState'()), V2))), case V109 of {'Idris.Prelude.Types.Left', E82} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V111) -> begin (V112 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.Core.Metadata.MD'}, ('Idris.Idris2.Core.Metadata':'un--initMetadata'()), V2))), case V112 of {'Idris.Prelude.Types.Left', E84} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V114) -> begin (V115 = ('un--updateREPLOpts'(V95, V2))), case V115 of {'Idris.Prelude.Types.Left', E86} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V117) -> begin (V118 = ('Idris.Idris2.Core.Context':'un--getSession'(V72, V2))), case V118 of {'Idris.Prelude.Types.Left', E88} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V120) -> begin (V143 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V120 of {'Idris.Core.Options.MkSessionOpts', E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105} -> (fun (V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134) -> V122 end(E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> begin (V135 = ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V95, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('un--banner'()))), V2))), case V135 of {'Idris.Prelude.Types.Left', E90} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V137) -> case ('Idris.Idris2.Data.List':'un--isCons'('erased', V0)) of 0 -> ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V95, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'('erased', ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'('erased', <<"With codegen for:"/utf8>>)), ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'un--hsep'('erased', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'('erased', 'erased', 'erased', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', V140, V141)) end end end end, fun (V142) -> ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V142)))) end, V0)))))), V2)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V143 of {'Idris.Prelude.Types.Left', E106} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V145) -> begin (V161 = begin (V146 = 0), (('case--case block in case block in case block in stMain-3465'(V1, V0, V9, V105, V12, V43, V72, V75, V79, V82, V85, V88, V89, V90, V91, V92, V95, V98, V101, V146, V108, V111, V114, V117, V120, V145, case V120 of {'Idris.Core.Options.MkSessionOpts', E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121} -> (fun (V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160) -> V149 end(E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end), case V161 of {'Idris.Prelude.Types.Left', E122} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V163) -> begin (V164 = ('Idris.Idris2.Idris.REPLOpts':'un--setMainFile'(V95, V163, V2))), case V164 of {'Idris.Prelude.Types.Left', E124} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V166) -> begin (V193 = case V163 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V72, fun () -> <<"+ Loading prelude"/utf8>> end, fun (V167) -> begin (V182 = case ('Idris.Idris2.Prelude.Basics':'un--not'(case V120 of {'Idris.Core.Options.MkSessionOpts', E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139} -> (fun (V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181) -> V168 end(E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 0 -> ('Idris.Idris2.Idris.ProcessIdr':'un--readPrelude'(V72, V111, V75, 0, V167)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V182 of {'Idris.Prelude.Types.Left', E140} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V184) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Done'}} end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2)) end()); {'Idris.Prelude.Types.Just', E142} -> (fun (V185) -> ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V72, fun () -> <<"+ Loading main file"/utf8>> end, fun (V186) -> begin (V187 = ('Idris.Idris2.Idris.REPL':'un--loadMainFile'(V72, V111, V75, V114, V95, V185, V186))), case V187 of {'Idris.Prelude.Types.Left', E143} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V189) -> begin (V190 = (('Idris.Idris2.Idris.REPL':'un--displayErrors'(V72, V111, V75, V114, V95, V189))(V186))), case V190 of {'Idris.Prelude.Types.Left', E145} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V192) -> {'Idris.Prelude.Types.Right', V189} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V193 of {'Idris.Prelude.Types.Left', E147} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V195) -> begin (V196 = (('Idris.Idris2.Idris.SetOptions':'un--postOptions'(V72, V111, V75, V114, V95, V195, V1))(V2))), case V196 of {'Idris.Prelude.Types.Left', E149} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V198) -> begin (V199 = 0), case V198 of 0 -> begin (V200 = 0), (('case--case block in case block in case block in case block in stMain-3794'(V1, V0, V9, V105, V12, V43, V72, V75, V79, V82, V85, V88, V89, V90, V91, V92, V95, V98, V101, V199, V108, V111, V114, V117, V120, V145, V163, V166, V195, V200, ('Idris.Idris2.Prelude.Basics':'un--||'(V89, fun () -> V90 end))))(V2)) end; 1 -> begin (V229 = begin (V228 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V203, V204, V205)) end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> V207 end end end, fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> begin (V214 = (V211(V213))), begin (V215 = (V212(V213))), (V214(V215)) end end end end end end end}, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> begin (V221 = (V218(V220))), ((V219(V221))(V220)) end end end end end end, fun (V222) -> fun (V223) -> fun (V224) -> begin (V225 = (V223(V224))), (V225(V224)) end end end end}, fun (V226) -> fun (V227) -> V227 end end}, V95))(V2))), {'Idris.Prelude.Types.Right', V228} end), case V229 of {'Idris.Prelude.Types.Left', E151} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V231) -> begin (V232 = ('Idris.Idris2.Core.Context.Log':'un--showTimeRecord'(V72, V2))), case V232 of {'Idris.Prelude.Types.Left', E153} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V234) -> begin (V235 = 1), (('case--case block in case block in case block in case block in stMain-4376'(V1, V0, V9, V105, V12, V43, V72, V75, V79, V82, V85, V88, V89, V90, V91, V92, V95, V98, V101, V199, V108, V111, V114, V117, V120, V145, V163, V166, V195, V235, V231, V234, case V231 of {'Idris.Idris.REPLOpts.MkREPLOpts', E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168} -> (fun (V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249) -> V242 end(E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--showInfo'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', 1} end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Idris.CommandLine.BlodwenPaths'} -> (fun () -> fun (V6) -> begin (V35 = begin (V34 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> V13 end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> begin (V20 = (V17(V19))), begin (V21 = (V18(V19))), (V20(V21)) end end end end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), ((V25(V27))(V26)) end end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V29(V30))), (V31(V30)) end end end end}, fun (V32) -> fun (V33) -> V33 end end}, V0))(V6))), {'Idris.Prelude.Types.Right', V34} end), case V35 of {'Idris.Prelude.Types.Left', E2} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> begin (V73 = ('Idris.Idris2.Idris.REPLCommon':'un--iputStrLn'(V1, ('Idris.Idris2.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty__String'('erased', ('Idris.Idris2.Core.Options':'un--toString'(case case V37 of {'Idris.Core.Context.MkDefs', E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V42 end(E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72) -> V64 end(E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), V6))), case V73 of {'Idris.Prelude.Types.Left', E39} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V75) -> {'Idris.Prelude.Types.Right', 0} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('un--showInfo'(V0, V1, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--quitOpts'(V0) -> case V0 of [] -> fun (V1) -> 0 end; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Idris.CommandLine.Version'} -> (fun () -> fun (V4) -> begin (V32 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> V11 end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> begin (V18 = (V15(V17))), begin (V19 = (V16(V17))), (V18(V19)) end end end end end end end}, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), ((V23(V25))(V24)) end end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V27(V28))), (V29(V28)) end end end end}, fun (V30) -> fun (V31) -> V31 end end}, ('Idris.Idris2.Idris.CommandLine':'un--versionMsg'())))(V4))), 1 end end end()); {'Idris.Idris.CommandLine.Help'} -> (fun () -> fun (V33) -> begin (V61 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V36, V37, V38)) end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> V40 end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> begin (V47 = (V44(V46))), begin (V48 = (V45(V46))), (V47(V48)) end end end end end end end}, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> begin (V54 = (V51(V53))), ((V52(V54))(V53)) end end end end end end, fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V56(V57))), (V58(V57)) end end end end}, fun (V59) -> fun (V60) -> V60 end end}, ('Idris.Idris2.Idris.CommandLine':'un--usage'())))(V33))), 1 end end end()); {'Idris.Idris.CommandLine.ShowPrefix'} -> (fun () -> fun (V62) -> begin (V90 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V65, V66, V67)) end end end end end, fun (V68) -> fun (V69) -> fun (V70) -> V69 end end end, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), begin (V77 = (V74(V75))), (V76(V77)) end end end end end end end}, fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> begin (V83 = (V80(V82))), ((V81(V83))(V82)) end end end end end end, fun (V84) -> fun (V85) -> fun (V86) -> begin (V87 = (V85(V86))), (V87(V86)) end end end end}, fun (V88) -> fun (V89) -> V89 end end}, ('Idris.Idris2.IdrisPaths':'un--yprefix'())))(V62))), 1 end end end()); _ -> ('un--quitOpts'(V3)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mainWithCodegens'(V0, V1) -> ('case--mainWithCodegens-4691'(V1, V0, ('Idris.Idris2.Idris.CommandLine':'un--getOpts'(V1)))).
'un--getPrivDir'(V0) -> begin (V1 = ('erlang':'apply'('code', 'priv_dir', ['idris2' | []]))), ('Idris.Idris2.Erlang.Decode':'un--erlDecodeMay'('erased', 'erased', {'Idris.Erlang.Types.ETErlTerm'}, fun (V2) -> ('Idris.Idris2.Erlang.Decode':'dn--un--map_Functor__ErlDecoder'('erased', 'erased', fun (V3) -> case V3 of E0 -> (fun (V4) -> V4 end((fun (V5) -> ('unicode':'characters_to_binary'(V5)) end(E0)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V6) -> ('Idris.Idris2.Erlang.Decode':'un--charlist'(V6)) end, V2)) end, V1)) end.
'un--findInput'(V0) -> case V0 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.InputFile', E2} -> (fun (V3) -> {'Idris.Prelude.Types.Just', V3} end(E2)); _ -> ('un--findInput'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--checkVerbose'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.Verbose'} -> (fun () -> 0 end()); _ -> ('un--checkVerbose'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--banner'() -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"     ____    __     _         ___                                           \x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"    /  _/___/ /____(_)____   |__ \x{5c}                                          \x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"    / // __  / ___/ / ___/   __/ /     Version "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Idris.Version':'un--showVersion'(0, ('Idris.Idris2.Idris.Version':'un--version'()))), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"  _/ // /_/ / /  / (__  )   / __/      https://www.idris-lang.org           \x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" /___/\x{5c}__,_/_/  /_/____/   /____/      Type :? for help                     \x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{a}"/utf8>>, <<"Welcome to Idris 2.  Enjoy yourself!"/utf8>>)))))))))))))))).
