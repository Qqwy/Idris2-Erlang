-module('Idris.Idris2.TTImp.Unelab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--unelabBinder-6443'/13,
  'case--case block in unelabBinder-6376'/17,
  'case--unelabBinder-6335'/14,
  'case--unelabBinder-6276'/14,
  'case--case block in case block in unelabBinder-6175'/18,
  'case--case block in unelabBinder-6092'/18,
  'case--unelabBinder-6047'/14,
  'case--case block in unelabBinder-5960'/17,
  'case--unelabBinder-5919'/14,
  'case--unelabBinder-5852'/14,
  'case--unelabPi-5816'/6,
  'case--unelabTy\x{27}-5695'/8,
  'case--unelabTy\x{27}-5644'/9,
  'case--unelabTy\x{27}-5593'/8,
  'case--case block in case block in case block in unelabTy\x{27}-5468'/16,
  'case--case block in case block in unelabTy\x{27}-5437'/14,
  'case--case block in unelabTy\x{27}-5408'/12,
  'case--unelabTy\x{27}-5375'/9,
  'case--case block in case block in unelabTy\x{27}-5217'/15,
  'case--case block in unelabTy\x{27}-5174'/11,
  'case--unelabTy\x{27}-5145'/8,
  'case--case block in unelabTy\x{27}-5056'/11,
  'case--unelabTy\x{27}-5033'/9,
  'case--unelabTy\x{27},uniqueLocal-4975'/11,
  'case--case block in unelabTy\x{27}-4886'/11,
  'case--unelabTy\x{27}-4831'/11,
  'case--case block in unelabTy\x{27}-4760'/9,
  'case--case block in unelabTy\x{27}-4693'/10,
  'case--unelabTy\x{27}-4657'/9,
  'case--case block in unelabSugar-4554'/7,
  'case--unelabSugar-4536'/6,
  'case--case block in case block in case block in unelabCase-4377'/14,
  'case--case block in case block in unelabCase-4341'/13,
  'case--case block in unelabCase-4317'/8,
  'case--unelabCase-4302'/6,
  'case--unelabCase,getNth-4168'/8,
  'nested--7365-3949--in--un--usedBinder'/7,
  'nested--7535-4948--in--un--uniqueLocal'/10,
  'nested--10421-6544--in--un--toName'/8,
  'nested--10421-6546--in--un--showScope'/8,
  'nested--10421-6545--in--un--showNScope'/8,
  'nested--7527-4111--in--un--nthArg'/8,
  'nested--7535-4947--in--un--next'/9,
  'nested--7527-4112--in--un--mkClause'/7,
  'nested--7527-4113--in--un--mkCase'/8,
  'nested--7541-6017--in--un--isNoSugar'/14,
  'nested--7541-6018--in--un--isDefImp'/15,
  'nested--7527-4109--in--un--idxOrDefault'/8,
  'nested--7527-4110--in--un--getNth'/7,
  'nested--7529-4516--in--un--getFnArgs'/7,
  'nested--7527-4108--in--un--findArgPos'/6,
  'un--used'/3,
  'un--unelabUniqueBinders'/5,
  'un--unelabTy\x{27}'/5,
  'un--unelabTy'/6,
  'un--unelabSugar'/4,
  'un--unelabPi'/5,
  'un--unelabNoSugar'/5,
  'un--unelabNoPatvars'/5,
  'un--unelabCase'/5,
  'un--unelabBinder'/10,
  'un--unelab'/4
]).
'case--unelabBinder-6443'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V9))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-6376'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6335'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PLet', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6276'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.PVTy', V4, V3, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabBinder-6175'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', {'Idris.Core.Name.UN', <<"_"/utf8>>}}; 1 -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-6092'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> {'Idris.Prelude.Types.Just', V5}; 1 -> ('case--case block in case block in unelabBinder-6175'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, ('Idris.Idris2.Prelude.Basics':'un--||'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq__ZeroOneOmega'(V4, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()))), fun () -> ('nested--7541-6018--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V3)) end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-6047'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V3))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V21 = begin (V20 = {'Idris.Builtin.MkPair', V14, V15}), ('case--case block in unelabBinder-6092'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14, V20, V19, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V8)), fun () -> ('nested--7541-6017--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V11)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V10, V4, V19, V21, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V10))}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabBinder-5960'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V17, V18) -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V17, V13, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5919'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = ('un--unelabTy'(V0, V12, V11, V9, V2, V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V10, V3, V5, V20, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Let', V4, V3, V1, V2}, V6}))}} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabBinder-5852'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('un--unelabPi'(V0, V12, V11, V9, V2))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V10, V3, V19, {'Idris.Prelude.Types.Just', V5}, V14, V7}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V9, {'Idris.Core.TT.Bind', V10, V5, {'Idris.Core.TT.Pi', V4, V3, V2, V1}, V6}))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabPi-5816'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V6}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5695'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V39 = begin (V38 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, V6))(V10))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E2} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V3, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5644'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V40 = begin (V39 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, V7))(V11))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E2} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V42) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5593'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V39 = begin (V38 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, V6))(V10))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E2} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V3, V2, V8}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabTy\x{27}-5468'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V14, V11}, V12}} end end(E0)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in case block in unelabTy\x{27}-5437'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V15, V11}, V12}} end end(E2)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end end(E0, E1)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V11, V12}} end end.
'case--case block in unelabTy\x{27}-5408'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V12, V13) -> case V9 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V14, V15) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V15, V12}, V13}} end end(E4)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E2, E3)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V12, V13}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5375'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> begin (V12 = (('un--unelabTy\x{27}'(V0, V7, V6, V5, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V15, V16) -> case V9 of {'Idris.TTImp.TTImp.IVar', E6, E7} -> (fun (V17, V18) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V4, V3, V18, V15}, V16}} end(E8)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E6, E7)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V15, V16}} end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabTy\x{27}-5217'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> case V17 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V23) -> begin (V24 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V23))), case V24 of {'Idris.Prelude.Types.Left', E10} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V26))}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> fun (V27) -> begin (V28 = (((V18(V14))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V27))), case V28 of {'Idris.Prelude.Types.Left', E8} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IImplicitApp', V3, V7, {'Idris.Prelude.Types.Just', V16}, V10}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V14, V4, V30))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5, E6, E7)); _ -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end(E0, E1, E2, E3)); _ -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V10}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-5174'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V8))(V13))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V45 = begin (V44 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> V23 end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), begin (V31 = (V28(V29))), (V30(V31)) end end end end end end end}, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), ((V35(V37))(V36)) end end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V39(V40))), (V41(V40)) end end end end}, fun (V42) -> fun (V43) -> V43 end end}, V6))(V13))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E4} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V47) -> case V16 of {'Idris.Core.Value.NBind', E6, E7, E8, E9} -> (fun (V48, V49, V50, V51) -> case V50 of {'Idris.Core.TT.Pi', E10, E11, E12, E13} -> (fun (V52, V53, V54, V55) -> case V54 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V56 = (((V51(V47))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V56 of {'Idris.Prelude.Types.Left', E16} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V58) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V47, V4, V58))}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V59 = (((V51(V47))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V13))), case V59 of {'Idris.Prelude.Types.Left', E14} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IImplicitApp', V3, V7, {'Idris.Prelude.Types.Just', V49}, V11}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V47, V4, V61))}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E6, E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V7, V11}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27}-5145'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V6, V5, V4, V1, V10))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V14, V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V6, V9))(V10))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V47 = begin (V46 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V21, V22, V23)) end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> V25 end end end, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), begin (V33 = (V30(V31))), (V32(V33)) end end end end end end end}, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V36(V38))), ((V37(V39))(V38)) end end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> begin (V43 = (V41(V42))), (V43(V42)) end end end end}, fun (V44) -> fun (V45) -> V45 end end}, V6))(V10))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E8} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V49) -> case V18 of {'Idris.Core.Value.NBind', E10, E11, E12, E13} -> (fun (V50, V51, V52, V53) -> case V52 of {'Idris.Core.TT.Pi', E14, E15, E16, E17} -> (fun (V54, V55, V56, V57) -> case V56 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V58 = (((V53(V49))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V58 of {'Idris.Prelude.Types.Left', E20} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V49, V4, V60))}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V61 = (((V53(V49))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V4, V1))))(V10))), case V61 of {'Idris.Prelude.Types.Left', E18} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IImplicitApp', V3, V8, {'Idris.Prelude.Types.Just', V51}, V14}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V6, V0, V49, V4, V63))}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14, E15, E16, E17)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E10, E11, E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V3, V8, V14}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-5056'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--7535-4948--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V13))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V8, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V17))), case V18 of {'Idris.Prelude.Types.Left', E3} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V20))(V17)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V9))(V21))), case V22 of {'Idris.Prelude.Types.Left', E0} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V8, V24))(V21)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-5033'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V6 of {'Idris.TTImp.Unelab.NoSugar', E4} -> (fun (V11) -> case V11 of 0 -> begin (V12 = ('nested--7535-4948--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V0, V1))), fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V13))), case V14 of {'Idris.Prelude.Types.Left', E7} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V16) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V12, V3, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V2)), V9, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V16))))(V13)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V17))), case V18 of {'Idris.Prelude.Types.Left', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V20) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V20))(V17)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4)); _ -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V10))(V21))), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> (('un--unelabBinder'(V0, V7, V6, V4, V5, V1, V3, V2, V9, V24))(V21)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabTy\x{27},uniqueLocal-4975'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of 0 -> ('nested--7535-4948--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('nested--7535-4947--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8)))); 1 -> V8; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4886'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end.
'case--unelabTy\x{27}-4831'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Prelude.Types.Just', E0} -> (fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V5, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V11))))}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V6 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V4, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end()); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V4, V9}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V4))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabTy\x{27}-4760'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end.
'case--case block in unelabTy\x{27}-4693'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V5 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1)) end(E2)); _ -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V11))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V11)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--unelabTy\x{27}-4657'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> fun (V10) -> begin (V15 = case V5 of {'Idris.TTImp.Unelab.NoSugar', E3} -> (fun (V11) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10)) end(E3)); _ -> begin (V12 = (('Idris.Idris2.Core.Context':'un--getFullName'(V6, V1))(V10))), case V12 of {'Idris.Prelude.Types.Left', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V6, V14, V10)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V17}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V9))))}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V5 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V3, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end()); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V3, V1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V3))}} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unelabSugar-4554'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.CaseBlock', E4, E5} -> (fun (V11, V12) -> fun (V13) -> begin (V14 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V9, {'Idris.Core.Name.CaseBlock', V11, V12}}, V6, V2, V13))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V16, V3}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end.
'case--unelabSugar-4536'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V6 of {'Idris.TTImp.TTImp.IVar', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Core.Name.NS', E4, E5} -> (fun (V10, V11) -> case V11 of {'Idris.Core.Name.CaseBlock', E6, E7} -> (fun (V12, V13) -> fun (V14) -> begin (V15 = ('un--unelabCase'(V4, {'Idris.Core.Name.NS', V10, {'Idris.Core.Name.CaseBlock', V12, V13}}, V7, V2, V14))), case V15 of {'Idris.Prelude.Types.Left', E8} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V17, V3}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E4, E5)); _ -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E2, E3)); _ -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2, V3}} end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in unelabCase-4377'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('nested--7527-4113--in--un--mkCase'(V0, V1, V2, V3, V10, V12, 0, V1)); 1 -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in unelabCase-4341'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> ('case--case block in case block in case block in unelabCase-4377'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V13, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V1)), ('Idris.Idris2.Prelude.Types.List':'un--length'('erased', V8)))))) end(E0)); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--case block in unelabCase-4317'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.Context.PMDef', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> ('case--case block in case block in unelabCase-4341'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V11, V12, V10, ('nested--7527-4108--in--un--findArgPos'(V0, V1, V2, V3, 'erased', V10)))) end(E0, E1, E2, E3, E4)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', V0} end end.
'case--unelabCase-4302'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> begin (V7 = {'Idris.Prelude.Types.Just', V6}), ('case--case block in unelabCase-4317'(V0, V1, V2, V3, V4, V6, V7, case V6 of {'Idris.Core.Context.MkGlobalDef', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V25 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V29) -> {'Idris.Prelude.Types.Right', V0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--unelabCase,getNth-4168'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> ('nested--7527-4109--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V6, V8, V9)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7365-3949--in--un--usedBinder'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Core.TT.Let', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V5, V9)), fun () -> ('un--used'('erased', V5, V10)) end)) end(E0, E1, E2, E3)); _ -> ('un--used'('erased', V5, ('Idris.Idris2.Core.TT':'un--binderType'('erased', V6)))) end.
'nested--7535-4948--in--un--uniqueLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('case--unelabTy\x{27},uniqueLocal-4975'(V0, V1, V2, V3, V4, V5, V6, V7, V9, V8, ('Idris.Idris2.Prelude.Types':'un--elem'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V12, V13)) end end}, V9, V8)))).
'nested--10421-6544--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V8, V9, V10) -> {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V10, 'erased'))} end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--10421-6546--in--un--showScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('nested--10421-6545--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Data.List':'un--mapMaybe'('erased', 'erased', fun (V8) -> ('nested--10421-6544--in--un--toName'(V0, V1, V2, V3, V4, V5, V6, V8)) end, V7)))))).
'nested--10421-6545--in--un--showNScope'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> <<"[no locals in scope]"/utf8>>; _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"[locals in scope: "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)) end, ('Idris.Idris2.Data.List':'un--nub'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V11, V12)) end end}, V7)))))), <<"]"/utf8>>)))) end.
'nested--7527-4111--in--un--nthArg'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.TT.App', E0, E1, E2} -> (fun (V8, V9, V10) -> ('nested--7527-4110--in--un--getNth'(V0, V1, V2, V3, 'erased', V6, {'Idris.Core.TT.App', V8, V9, V10})) end(E0, E1, E2)); _ -> {'Idris.Core.TT.Erased', V5, 1} end.
'nested--7535-4947--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Name.MN', E0, E1} -> (fun (V9, V10) -> {'Idris.Core.Name.MN', V9, ((V10 + 1) rem 9223372036854775808)} end(E0, E1)); {'Idris.Core.Name.UN', E2} -> (fun (V11) -> {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V11)), 0} end(E2)); {'Idris.Core.Name.NS', E3, E4} -> (fun (V12, V13) -> {'Idris.Core.Name.NS', V12, ('nested--7535-4947--in--un--next'(V0, V1, V2, V3, V4, V5, V6, V7, V13))} end(E3, E4)); _ -> {'Idris.Core.Name.MN', ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)), 0} end.
'nested--7527-4112--in--un--mkClause'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V11, V12) -> begin (V13 = ('nested--7527-4111--in--un--nthArg'(V0, V1, V2, V3, 'erased', V4, V5, V11))), fun (V14) -> begin (V15 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = ('un--unelabTy'(V7, V3, {'Idris.TTImp.Unelab.Full'}, V9, V12, V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V4, ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V17)), ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V20))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7527-4113--in--un--mkCase'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> case V8 of {'Idris.TTImp.Unelab.Exp', E4, E5} -> (fun (V10, V11) -> fun (V12) -> begin (V14 = (('Idris.Idris2.Core.Core':'un--traverse'('erased', 'erased', fun (V13) -> ('nested--7527-4112--in--un--mkClause'(V0, V1, V2, V3, V10, V6, V13)) end, V4))(V12))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V10, V11, {'Idris.TTImp.TTImp.Implicit', V10, 1}, V16}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', V0} end end end(E2, E3)); _ -> fun (V18) -> {'Idris.Prelude.Types.Right', V0} end end; _ -> begin (V19 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V20, V21) -> ('nested--7527-4113--in--un--mkCase'(V0, V1, V2, V3, V4, V19, (1 + V6), V21)) end(E0, E1)); _ -> fun (V22) -> {'Idris.Prelude.Types.Right', V0} end end end end.
'nested--7541-6017--in--un--isNoSugar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.TTImp.Unelab.NoSugar', E0} -> (fun (V14) -> 0 end(E0)); _ -> 1 end.
'nested--7541-6018--in--un--isDefImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> 0 end(E0)); _ -> 1 end.
'nested--7527-4109--in--un--idxOrDefault'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V5 of 0 -> case V7 of [E2 | E3] -> (fun (V8, V9) -> V8 end(E2, E3)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V10 = (V5 - 1)), case V7 of [E0 | E1] -> (fun (V11, V12) -> ('nested--7527-4109--in--un--idxOrDefault'(V0, V1, V2, V3, 'erased', V10, V6, V12)) end(E0, E1)); _ -> case V7 of [] -> V6; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--7527-4110--in--un--getNth'(V0, V1, V2, V3, V4, V5, V6) -> ('case--unelabCase,getNth-4168'(V0, V1, V2, V3, 'erased', V6, V5, ('Idris.Idris2.Core.TT':'un--getFnArgs'('erased', V6)))).
'nested--7529-4516--in--un--getFnArgs'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V7, V8, V9) -> ('nested--7529-4516--in--un--getFnArgs'('erased', V1, V2, V3, V4, V8, [{'Idris.TTImp.Unelab.Exp', V7, V9} | V6])) end(E0, E1, E2)); {'Idris.TTImp.TTImp.IImplicitApp', E3, E4, E5, E6} -> (fun (V10, V11, V12, V13) -> ('nested--7529-4516--in--un--getFnArgs'('erased', V1, V2, V3, V4, V11, [{'Idris.TTImp.Unelab.Imp', V10, V12, V13} | V6])) end(E3, E4, E5, E6)); _ -> {'Idris.Builtin.MkPair', V5, V6} end.
'nested--7527-4108--in--un--findArgPos'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> {'Idris.Prelude.Types.Just', V7} end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--used'(V0, V1, V2) -> case V2 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V3, V4, V5) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__Nat'(V1, V5)) end(E0, E1, E2)); {'Idris.Core.TT.Bind', E3, E4, E5, E6} -> (fun (V6, V7, V8, V9) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('nested--7365-3949--in--un--usedBinder'(V6, V7, 'erased', V9, V8, V1, V8)), fun () -> ('un--used'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--+_Num__Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1)), V1)), V9)) end)) end(E3, E4, E5, E6)); {'Idris.Core.TT.Meta', E7, E8, E9, E10} -> (fun (V10, V11, V12, V13) -> (('Idris.Idris2.Prelude.Interfaces':'un--any'('erased', 'erased', {'Idris.Prelude.Interfaces.dn--un--__mkFoldable', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable__List'('erased', 'erased', V16, V17, V18)) end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable__List'('erased', 'erased', V21, V22, V23)) end end end end end}, fun (V24) -> ('un--used'('erased', V1, V24)) end))(V13)) end(E7, E8, E9, E10)); {'Idris.Core.TT.App', E11, E12, E13} -> (fun (V25, V26, V27) -> ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', V1, V26)), fun () -> ('un--used'('erased', V1, V27)) end)) end(E11, E12, E13)); {'Idris.Core.TT.As', E14, E15, E16, E17} -> (fun (V28, V29, V30, V31) -> ('un--used'('erased', V1, V31)) end(E14, E15, E16, E17)); {'Idris.Core.TT.TDelayed', E18, E19, E20} -> (fun (V32, V33, V34) -> ('un--used'('erased', V1, V34)) end(E18, E19, E20)); {'Idris.Core.TT.TDelay', E21, E22, E23, E24} -> (fun (V35, V36, V37, V38) -> ('un--used'('erased', V1, V38)) end(E21, E22, E23, E24)); {'Idris.Core.TT.TForce', E25, E26, E27} -> (fun (V39, V40, V41) -> ('un--used'('erased', V1, V41)) end(E25, E26, E27)); _ -> 1 end.
'un--unelabUniqueBinders'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 0}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabTy\x{27}'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V5, V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V5, ('Idris.Idris2.Core.TT':'un--nameAt'('erased', V0, V7, 'erased'))}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--binderType'('erased', ('Idris.Idris2.Core.Env':'un--getBinder'('erased', 'erased', {'Idris.Core.TT.dn--un--__mkWeaken', fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken__Term'('erased', 'erased', V11)) end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken__Term'('erased', 'erased', V14, V15)) end end end end}, V0, V7, 'erased', V3))))))}} end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V16, V17, V18) -> fun (V19) -> begin (V48 = begin (V47 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V22, V23, V24)) end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> V26 end end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V30(V32))), begin (V34 = (V31(V32))), (V33(V34)) end end end end end end end}, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V37(V39))), ((V38(V40))(V39)) end end end end end end, fun (V41) -> fun (V42) -> fun (V43) -> begin (V44 = (V42(V43))), (V44(V43)) end end end end}, fun (V45) -> fun (V46) -> V46 end end}, V1))(V19))), {'Idris.Prelude.Types.Right', V47} end), case V48 of {'Idris.Prelude.Types.Left', E6} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V50) -> begin (V77 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V18, case V50 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76) -> V51 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V19))), case V77 of {'Idris.Prelude.Types.Left', E34} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V79) -> case V79 of {'Idris.Prelude.Types.Just', E36} -> (fun (V80) -> begin (V85 = case V2 of {'Idris.TTImp.Unelab.NoSugar', E39} -> (fun (V81) -> (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V18))(V19)) end(E39)); _ -> begin (V82 = (('Idris.Idris2.Core.Context':'un--getFullName'(V1, V18))(V19))), case V82 of {'Idris.Prelude.Types.Left', E37} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V84) -> ('Idris.Idris2.Core.Context':'un--aliasName'(V1, V84, V19)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V85 of {'Idris.Prelude.Types.Left', E40} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V87) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V16, V87}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V80))))}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V16, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V16))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IVar', V16, V18}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V16))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5)); {'Idris.Core.TT.Meta', E42, E43, E44, E45} -> (fun (V88, V89, V90, V91) -> fun (V92) -> begin (V121 = begin (V120 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V95, V96, V97)) end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> V99 end end end, fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> begin (V106 = (V103(V105))), begin (V107 = (V104(V105))), (V106(V107)) end end end end end end end}, fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> begin (V113 = (V110(V112))), ((V111(V113))(V112)) end end end end end end, fun (V114) -> fun (V115) -> fun (V116) -> begin (V117 = (V115(V116))), (V117(V116)) end end end end}, fun (V118) -> fun (V119) -> V119 end end}, V1))(V92))), {'Idris.Prelude.Types.Right', V120} end), case V121 of {'Idris.Prelude.Types.Left', E46} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V123) -> begin (V124 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V89))), begin (V151 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V90}, case V123 of {'Idris.Core.Context.MkDefs', E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150) -> V125 end(E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V92))), case V151 of {'Idris.Prelude.Types.Left', E74} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V153) -> case V153 of {'Idris.Prelude.Types.Just', E76} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V88, V124}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V3, ('Idris.Idris2.Core.TT':'un--embed'('erased', 'erased', V154))))}} end(E76)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V2 of {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V88, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V88))}} end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IHole', V88, V124}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V88))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45)); {'Idris.Core.TT.Bind', E77, E78, E79, E80} -> (fun (V155, V156, V157, V158) -> fun (V159) -> begin (V160 = ('un--unelabTy'([V156 | V0], V1, V2, {'Idris.Core.Env.::', V157, V3}, V158, V159))), case V160 of {'Idris.Prelude.Types.Left', E81} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V162) -> case V162 of {'Idris.Builtin.MkPair', E83, E84} -> (fun (V163, V164) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E87} -> (fun (V165) -> case V165 of 0 -> begin (V166 = ('nested--7535-4948--in--un--uniqueLocal'(V0, V156, V158, V157, V155, V3, V2, V1, V0, V156))), begin (V167 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V164))(V159))), case V167 of {'Idris.Prelude.Types.Left', E90} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V169) -> (('un--unelabBinder'(V0, V1, V2, V155, V3, V166, V157, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V158)), V163, ('Idris.Idris2.Core.TT':'un--renameVars'('erased', 'erased', {'Idris.Core.TT.CompatExt', {'Idris.Core.TT.CompatPre'}}, V169))))(V159)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> begin (V170 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V164))(V159))), case V170 of {'Idris.Prelude.Types.Left', E88} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V172) -> (('un--unelabBinder'(V0, V1, V2, V155, V3, V156, V157, V158, V163, V172))(V159)) end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E87)); _ -> begin (V173 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V164))(V159))), case V173 of {'Idris.Prelude.Types.Left', E85} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V175) -> (('un--unelabBinder'(V0, V1, V2, V155, V3, V156, V157, V158, V163, V175))(V159)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E77, E78, E79, E80)); {'Idris.Core.TT.App', E92, E93, E94} -> (fun (V176, V177, V178) -> fun (V179) -> begin (V180 = ('un--unelabTy'(V0, V1, V2, V3, V177, V179))), case V180 of {'Idris.Prelude.Types.Left', E95} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V182) -> case V182 of {'Idris.Builtin.MkPair', E97, E98} -> (fun (V183, V184) -> begin (V185 = ('un--unelabTy'(V0, V1, V2, V3, V178, V179))), case V185 of {'Idris.Prelude.Types.Left', E99} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V187) -> case V187 of {'Idris.Builtin.MkPair', E101, E102} -> (fun (V188, V189) -> begin (V190 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V1, V184))(V179))), case V190 of {'Idris.Prelude.Types.Left', E103} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V192) -> begin (V221 = begin (V220 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V195, V196, V197)) end end end end end, fun (V198) -> fun (V199) -> fun (V200) -> V199 end end end, fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> begin (V206 = (V203(V205))), begin (V207 = (V204(V205))), (V206(V207)) end end end end end end end}, fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> begin (V213 = (V210(V212))), ((V211(V213))(V212)) end end end end end end, fun (V214) -> fun (V215) -> fun (V216) -> begin (V217 = (V215(V216))), (V217(V216)) end end end end}, fun (V218) -> fun (V219) -> V219 end end}, V1))(V179))), {'Idris.Prelude.Types.Right', V220} end), case V221 of {'Idris.Prelude.Types.Left', E105} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V223) -> case V192 of {'Idris.Core.Value.NBind', E107, E108, E109, E110} -> (fun (V224, V225, V226, V227) -> case V226 of {'Idris.Core.TT.Pi', E111, E112, E113, E114} -> (fun (V228, V229, V230, V231) -> case V230 of {'Idris.Core.TT.Explicit'} -> (fun () -> begin (V232 = (((V227(V223))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V178))))(V179))), case V232 of {'Idris.Prelude.Types.Left', E117} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V234) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V176, V183, V188}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V223, V3, V234))}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V235 = (((V227(V223))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, V178))))(V179))), case V235 of {'Idris.Prelude.Types.Left', E115} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V237) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IImplicitApp', V176, V183, {'Idris.Prelude.Types.Just', V225}, V188}, ('Idris.Idris2.Core.Normalise':'un--glueBack'(V1, V0, V223, V3, V237))}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112, E113, E114)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V176, V183, V188}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V176))}} end end(E107, E108, E109, E110)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IApp', V176, V183, V188}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V176))}} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97, E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E92, E93, E94)); {'Idris.Core.TT.As', E119, E120, E121, E122} -> (fun (V238, V239, V240, V241) -> fun (V242) -> begin (V243 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V240))(V242))), case V243 of {'Idris.Prelude.Types.Left', E123} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V245) -> case V245 of {'Idris.Builtin.MkPair', E125, E126} -> (fun (V246, V247) -> begin (V248 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V241))(V242))), case V248 of {'Idris.Prelude.Types.Left', E127} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V250) -> case V250 of {'Idris.Builtin.MkPair', E129, E130} -> (fun (V251, V252) -> case V246 of {'Idris.TTImp.TTImp.IVar', E131, E132} -> (fun (V253, V254) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E133} -> (fun (V255) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IAs', V238, V239, V254, V251}, V252}} end(E133)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V251, V252}} end end(E131, E132)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V251, V252}} end end(E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125, E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E119, E120, E121, E122)); {'Idris.Core.TT.TDelayed', E134, E135, E136} -> (fun (V256, V257, V258) -> fun (V259) -> begin (V260 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V258))(V259))), case V260 of {'Idris.Prelude.Types.Left', E137} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V262) -> case V262 of {'Idris.Builtin.MkPair', E139, E140} -> (fun (V263, V264) -> begin (V293 = begin (V292 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V267, V268, V269)) end end end end end, fun (V270) -> fun (V271) -> fun (V272) -> V271 end end end, fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> begin (V278 = (V275(V277))), begin (V279 = (V276(V277))), (V278(V279)) end end end end end end end}, fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> begin (V285 = (V282(V284))), ((V283(V285))(V284)) end end end end end end, fun (V286) -> fun (V287) -> fun (V288) -> begin (V289 = (V287(V288))), (V289(V288)) end end end end}, fun (V290) -> fun (V291) -> V291 end end}, V1))(V259))), {'Idris.Prelude.Types.Right', V292} end), case V293 of {'Idris.Prelude.Types.Left', E141} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelayed', V256, V257, V263}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V256))}} end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139, E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135, E136)); {'Idris.Core.TT.TDelay', E143, E144, E145, E146} -> (fun (V296, V297, V298, V299) -> fun (V300) -> begin (V301 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V299))(V300))), case V301 of {'Idris.Prelude.Types.Left', E147} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V303) -> case V303 of {'Idris.Builtin.MkPair', E149, E150} -> (fun (V304, V305) -> begin (V334 = begin (V333 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V308, V309, V310)) end end end end end, fun (V311) -> fun (V312) -> fun (V313) -> V312 end end end, fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> begin (V319 = (V316(V318))), begin (V320 = (V317(V318))), (V319(V320)) end end end end end end end}, fun (V321) -> fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> begin (V326 = (V323(V325))), ((V324(V326))(V325)) end end end end end end, fun (V327) -> fun (V328) -> fun (V329) -> begin (V330 = (V328(V329))), (V330(V329)) end end end end}, fun (V331) -> fun (V332) -> V332 end end}, V1))(V300))), {'Idris.Prelude.Types.Right', V333} end), case V334 of {'Idris.Prelude.Types.Left', E151} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V336) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IDelay', V296, V304}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V296))}} end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E143, E144, E145, E146)); {'Idris.Core.TT.TForce', E153, E154, E155} -> (fun (V337, V338, V339) -> fun (V340) -> begin (V341 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V339))(V340))), case V341 of {'Idris.Prelude.Types.Left', E156} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V343) -> case V343 of {'Idris.Builtin.MkPair', E158, E159} -> (fun (V344, V345) -> begin (V374 = begin (V373 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> fun (V350) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V348, V349, V350)) end end end end end, fun (V351) -> fun (V352) -> fun (V353) -> V352 end end end, fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> begin (V359 = (V356(V358))), begin (V360 = (V357(V358))), (V359(V360)) end end end end end end end}, fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> begin (V366 = (V363(V365))), ((V364(V366))(V365)) end end end end end end, fun (V367) -> fun (V368) -> fun (V369) -> begin (V370 = (V368(V369))), (V370(V369)) end end end end}, fun (V371) -> fun (V372) -> V372 end end}, V1))(V340))), {'Idris.Prelude.Types.Right', V373} end), case V374 of {'Idris.Prelude.Types.Left', E160} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V376) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IForce', V337, V344}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V337))}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158, E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E153, E154, E155)); {'Idris.Core.TT.PrimVal', E162, E163} -> (fun (V377, V378) -> fun (V379) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPrimVal', V377, V378}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V377))}} end end(E162, E163)); {'Idris.Core.TT.Erased', E164, E165} -> (fun (V380, V381) -> fun (V382) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V380, 0}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V380))}} end end(E164, E165)); {'Idris.Core.TT.TType', E166} -> (fun (V383) -> fun (V384) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IType', V383}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V383))}} end end(E166)); _ -> begin (V385 = ('Idris.Idris2.Core.TT':'un--getLoc'('erased', V4))), fun (V386) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.Implicit', V385, 1}, ('Idris.Idris2.Core.Normalise':'un--gErased'('erased', V385))}} end end end.
'un--unelabTy'(V0, V1, V2, V3, V4, V5) -> begin (V6 = (('un--unelabTy\x{27}'(V0, V1, V2, V3, V4))(V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> (('un--unelabSugar'('erased', V1, V2, V8))(V5)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabSugar'(V0, V1, V2, V3) -> case V2 of {'Idris.TTImp.Unelab.NoSugar', E2} -> (fun (V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', V3} end end(E2)); {'Idris.TTImp.Unelab.ImplicitHoles'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', V3} end end()); _ -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> ('case--unelabSugar-4536'('erased', V2, V7, V8, V1, ('nested--7529-4516--in--un--getFnArgs'('erased', V2, V7, V8, V1, V7, [])))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabPi'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = ('un--unelabTy'(V0, V1, V2, V3, V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V13, V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.DefImplicit', V13}} end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelabNoSugar'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.NoSugar', 1}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabNoPatvars'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.ImplicitHoles'}, V2, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V7))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabCase'(V0, V1, V2, V3, V4) -> begin (V33 = begin (V32 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> V11 end end end, fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> begin (V18 = (V15(V17))), begin (V19 = (V16(V17))), (V18(V19)) end end end end end end end}, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), ((V23(V25))(V24)) end end end end end end, fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V27(V28))), (V29(V28)) end end end end}, fun (V30) -> fun (V31) -> V31 end end}, V0))(V4))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E0} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V35) -> begin (V62 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V35 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27} -> (fun (V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V36 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V62 of {'Idris.Prelude.Types.Left', E28} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V64) -> case V64 of {'Idris.Prelude.Types.Just', E30} -> (fun (V65) -> begin (V66 = {'Idris.Prelude.Types.Just', V65}), (('case--case block in unelabCase-4317'(V3, V2, V1, V0, V35, V65, V66, case V65 of {'Idris.Core.Context.MkGlobalDef', E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87) -> V84 end(E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4)) end end(E30)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', V3} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unelabBinder'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V6 of {'Idris.Core.TT.Lam', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> fun (V14) -> begin (V15 = ('un--unelabTy'(V0, V1, V2, V4, V13, V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V18, V19) -> begin (V20 = (('un--unelabPi'(V0, V1, V2, V4, V12))(V14))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILam', V3, V11, V22, {'Idris.Prelude.Types.Just', V5}, V18, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Pi', V10, V11, V12, V13}, V9}))}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); {'Idris.Core.TT.Let', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V28 = ('un--unelabTy'(V0, V1, V2, V4, V25, V27))), case V28 of {'Idris.Prelude.Types.Left', E14} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V30) -> case V30 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V31, V32) -> begin (V33 = ('un--unelabTy'(V0, V1, V2, V4, V26, V27))), case V33 of {'Idris.Prelude.Types.Left', E18} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V35) -> case V35 of {'Idris.Builtin.MkPair', E20, E21} -> (fun (V36, V37) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, V24, V5, V36, V31, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.Let', V23, V24, V25, V26}, V9}))}} end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13)); {'Idris.Core.TT.Pi', E22, E23, E24, E25} -> (fun (V38, V39, V40, V41) -> fun (V42) -> begin (V43 = ('un--unelabTy'(V0, V1, V2, V4, V41, V42))), case V43 of {'Idris.Prelude.Types.Left', E26} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V45) -> case V45 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V46, V47) -> begin (V48 = (('un--unelabPi'(V0, V1, V2, V4, V40))(V42))), case V48 of {'Idris.Prelude.Types.Left', E30} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V50) -> begin (V52 = begin (V51 = {'Idris.Builtin.MkPair', V46, V47}), ('case--case block in unelabBinder-6092'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V47, V46, V51, V50, ('Idris.Idris2.Prelude.Basics':'un--||'(('un--used'('erased', 0, V7)), fun () -> ('nested--7541-6017--in--un--isNoSugar'(V0, V38, V41, V40, V39, V5, V9, V8, V7, V4, V3, V2, V1, V2)) end)))) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.IPi', V3, V39, V50, V52, V46, V8}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23, E24, E25)); {'Idris.Core.TT.PVar', E32, E33, E34, E35} -> (fun (V53, V54, V55, V56) -> fun (V57) -> begin (V58 = ('un--unelabTy'(V0, V1, V2, V4, V56, V57))), case V58 of {'Idris.Prelude.Types.Left', E36} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V60) -> case V60 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V61, V62) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PVTy', V53, V54, V56}, V9}))}} end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.Core.TT.PLet', E40, E41, E42, E43} -> (fun (V63, V64, V65, V66) -> fun (V67) -> begin (V68 = ('un--unelabTy'(V0, V1, V2, V4, V65, V67))), case V68 of {'Idris.Prelude.Types.Left', E44} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V70) -> case V70 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V71, V72) -> begin (V73 = ('un--unelabTy'(V0, V1, V2, V4, V66, V67))), case V73 of {'Idris.Prelude.Types.Left', E48} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V75) -> case V75 of {'Idris.Builtin.MkPair', E50, E51} -> (fun (V76, V77) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.TTImp.TTImp.ILet', V3, V64, V5, V76, V71, V8}, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, {'Idris.Core.TT.Bind', V3, V5, {'Idris.Core.TT.PLet', V63, V64, V65, V66}, V9}))}} end(E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E40, E41, E42, E43)); {'Idris.Core.TT.PVTy', E52, E53, E54} -> (fun (V78, V79, V80) -> fun (V81) -> begin (V82 = ('un--unelabTy'(V0, V1, V2, V4, V80, V81))), case V82 of {'Idris.Prelude.Types.Left', E55} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V84) -> case V84 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V85, V86) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V8, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V3))}} end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unelab'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Meta', E2, E3, E4, E5} -> (fun (V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'un--nameRoot'(V5)), ('nested--10421-6546--in--un--showScope'(V0, V7, V6, V5, V4, V2, V1, V7))))), fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V4, V8}} end end end(E2, E3, E4, E5)); _ -> fun (V10) -> begin (V11 = ('un--unelabTy'(V0, V1, {'Idris.TTImp.Unelab.Full'}, V2, V3, V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V13))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
