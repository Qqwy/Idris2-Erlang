-module('Idris.Idris2.Idris.SetOptions').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--preOptions-2958'/5,
  'case--preOptions-2912'/5,
  'case--preOptions-2866'/5,
  'case--preOptions-2820'/5,
  'case--preOptions-2774'/5,
  'case--preOptions-2730'/5,
  'case--preOptions-2688'/4,
  'case--preOptions-2642'/6,
  'case--preOptions-2493'/5,
  'case--preOptions-2383'/6,
  'case--preOptions-2361'/4,
  'case--preOptions-2307'/4,
  'case--preOptions-2263'/5,
  'case--preOptions-2219'/4,
  'case--preOptions-2175'/5,
  'case--preOptions-2129'/5,
  'case--preOptions-2085'/4,
  'un--preOptions'/3,
  'un--postOptions'/7,
  'un--ideModeSocket'/1,
  'un--ideMode'/1,
  'un--dirOption'/2
]).
'case--preOptions-2958'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V0))(V12)), V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2912'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, {'Idris.Prelude.Types.Just', V0}} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2866'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, {'Idris.Prelude.Types.Just', V0}, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2820'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, {'Idris.Prelude.Types.Just', V0}, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2774'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, {'Idris.Prelude.Types.Just', V0}, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2730'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, V9, V10, V0, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2688'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2642'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> {'Idris.Core.Options.MkSessionOpts', V6, 0, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2493'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, V6, V7, V8, [V0 | V9], V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2383'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Context':'un--setCG'(V3, V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> (('un--preOptions'(V3, V2, V1))(V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V11) -> begin (V40 = begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, <<"No such code generator"/utf8>>))(V11))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E3} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V42) -> begin (V98 = begin (V97 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Code generators available: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V70) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V70)) end, ('Idris.Idris2.Core.Options':'un--availableCGs'(case V4 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96) -> V75 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))))(V11))), {'Idris.Prelude.Types.Right', V97} end), case V98 of {'Idris.Prelude.Types.Left', E31} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V100) -> begin (V128 = (('Idris.Idris2.Utils.System':'un--softExitWith'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V103, V104, V105)) end end end end end, fun (V106) -> fun (V107) -> fun (V108) -> V107 end end end, fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> begin (V114 = (V111(V113))), begin (V115 = (V112(V113))), (V114(V115)) end end end end end end end}, fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> begin (V121 = (V118(V120))), ((V119(V121))(V120)) end end end end end end, fun (V122) -> fun (V123) -> fun (V124) -> begin (V125 = (V123(V124))), (V125(V124)) end end end end}, fun (V126) -> fun (V127) -> V127 end end}, {'Idris.Erlang.System.ExitFailure', 1, {'Idris.Data.So.Oh'}}))(V11))), {'Idris.Prelude.Types.Right', V128} end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2361'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', 0, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2307'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2263'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2219'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2175'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2129'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> {'Idris.Core.Options.MkSessionOpts', V5, 0, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--preOptions-2085'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Options.MkSessionOpts', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> {'Idris.Core.Options.MkSessionOpts', V4, 0, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--preOptions'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', 0} end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Idris.CommandLine.NoBanner'} -> (fun () -> fun (V6) -> begin (V24 = begin (V7 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V9 of {'Idris.Core.Options.MkSessionOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> {'Idris.Core.Options.MkSessionOpts', V10, 0, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23} end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E18} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V26) -> (('un--preOptions'(V0, V1, V5))(V6)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.OutputFile', E20} -> (fun (V27) -> fun (V28) -> begin (V46 = begin (V29 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V28))), case V29 of {'Idris.Prelude.Types.Left', E21} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V31) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V31 of {'Idris.Core.Options.MkSessionOpts', E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45) -> {'Idris.Core.Options.MkSessionOpts', V32, 0, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45} end(E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V28)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V46 of {'Idris.Prelude.Types.Left', E37} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V48) -> (('un--preOptions'(V0, V1, V5))(V28)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20)); {'Idris.Idris.CommandLine.ExecFn', E39} -> (fun (V49) -> fun (V50) -> begin (V68 = begin (V51 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V50))), case V51 of {'Idris.Prelude.Types.Left', E40} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V53) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V53 of {'Idris.Core.Options.MkSessionOpts', E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67) -> {'Idris.Core.Options.MkSessionOpts', V54, 0, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67} end(E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V50)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E56} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V70) -> (('un--preOptions'(V0, V1, V5))(V50)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39)); {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> fun (V71) -> begin (V89 = begin (V72 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V71))), case V72 of {'Idris.Prelude.Types.Left', E58} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V74) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V74 of {'Idris.Core.Options.MkSessionOpts', E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73} -> (fun (V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> {'Idris.Core.Options.MkSessionOpts', V75, 0, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88} end(E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V71)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E74} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V91) -> (('un--preOptions'(V0, V1, V5))(V71)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.IdeModeSocket', E76} -> (fun (V92) -> fun (V93) -> begin (V111 = begin (V94 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V93))), case V94 of {'Idris.Prelude.Types.Left', E77} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V96) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V96 of {'Idris.Core.Options.MkSessionOpts', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92} -> (fun (V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> {'Idris.Core.Options.MkSessionOpts', V97, 0, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110} end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V93)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V111 of {'Idris.Prelude.Types.Left', E93} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V113) -> (('un--preOptions'(V0, V1, V5))(V93)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E76)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V114) -> begin (V132 = begin (V115 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V114))), case V115 of {'Idris.Prelude.Types.Left', E95} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V117) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V117 of {'Idris.Core.Options.MkSessionOpts', E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110} -> (fun (V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131) -> {'Idris.Core.Options.MkSessionOpts', V118, 0, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131} end(E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V114)) end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E111} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V134) -> (('un--preOptions'(V0, V1, V5))(V114)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.Quiet'} -> (fun () -> fun (V135) -> begin (V136 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V135))), case V136 of {'Idris.Prelude.Types.Left', E113} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V138) -> (('un--preOptions'(V0, V1, V5))(V135)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.NoPrelude'} -> (fun () -> fun (V139) -> begin (V157 = begin (V140 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V139))), case V140 of {'Idris.Prelude.Types.Left', E115} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V142) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V142 of {'Idris.Core.Options.MkSessionOpts', E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130} -> (fun (V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156) -> {'Idris.Core.Options.MkSessionOpts', 0, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156} end(E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V139)) end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V157 of {'Idris.Prelude.Types.Left', E131} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V159) -> (('un--preOptions'(V0, V1, V5))(V139)) end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.SetCG', E133} -> (fun (V160) -> fun (V161) -> begin (V190 = begin (V189 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V164, V165, V166)) end end end end end, fun (V167) -> fun (V168) -> fun (V169) -> V168 end end end, fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> begin (V175 = (V172(V174))), begin (V176 = (V173(V174))), (V175(V176)) end end end end end end end}, fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> begin (V182 = (V179(V181))), ((V180(V182))(V181)) end end end end end end, fun (V183) -> fun (V184) -> fun (V185) -> begin (V186 = (V184(V185))), (V186(V185)) end end end end}, fun (V187) -> fun (V188) -> V188 end end}, V0))(V161))), {'Idris.Prelude.Types.Right', V189} end), case V190 of {'Idris.Prelude.Types.Left', E134} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V192) -> (('case--preOptions-2383'(V160, V5, V1, V0, V192, ('Idris.Idris2.Core.Options':'un--getCG'(case V192 of {'Idris.Core.Context.MkDefs', E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161} -> (fun (V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218) -> V197 end(E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V160))))(V161)) end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E133)); {'Idris.Idris.CommandLine.Directive', E162} -> (fun (V219) -> fun (V220) -> begin (V238 = begin (V221 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V220))), case V221 of {'Idris.Prelude.Types.Left', E163} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V223) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V223 of {'Idris.Core.Options.MkSessionOpts', E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178} -> (fun (V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237) -> {'Idris.Core.Options.MkSessionOpts', V224, V225, V226, V227, [V219 | V228], V229, V230, V231, V232, V233, V234, V235, V236, V237} end(E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V220)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V238 of {'Idris.Prelude.Types.Left', E179} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V240) -> (('un--preOptions'(V0, V1, V5))(V220)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E162)); {'Idris.Idris.CommandLine.PkgName', E181} -> (fun (V241) -> fun (V242) -> begin (V243 = ('Idris.Idris2.Core.Context':'un--addPkg'(V0, V241, V242))), case V243 of {'Idris.Prelude.Types.Left', E182} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V245) -> (('un--preOptions'(V0, V1, V5))(V242)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E181)); {'Idris.Idris.CommandLine.SourceDir', E184} -> (fun (V246) -> fun (V247) -> begin (V248 = ('Idris.Idris2.Core.Context':'un--setSourceDir'(V0, {'Idris.Prelude.Types.Just', V246}, V247))), case V248 of {'Idris.Prelude.Types.Left', E185} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V250) -> (('un--preOptions'(V0, V1, V5))(V247)) end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184)); {'Idris.Idris.CommandLine.BuildDir', E187} -> (fun (V251) -> fun (V252) -> begin (V253 = ('Idris.Idris2.Core.Context':'un--setBuildDir'(V0, V251, V252))), case V253 of {'Idris.Prelude.Types.Left', E188} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V255) -> (('un--preOptions'(V0, V1, V5))(V252)) end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E187)); {'Idris.Idris.CommandLine.OutputDir', E190} -> (fun (V256) -> fun (V257) -> begin (V258 = ('Idris.Idris2.Core.Context':'un--setOutputDir'(V0, {'Idris.Prelude.Types.Just', V256}, V257))), case V258 of {'Idris.Prelude.Types.Left', E191} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V260) -> (('un--preOptions'(V0, V1, V5))(V257)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E190)); {'Idris.Idris.CommandLine.Directory', E193} -> (fun (V261) -> fun (V262) -> begin (V291 = begin (V290 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V263) -> fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V265, V266, V267)) end end end end end, fun (V268) -> fun (V269) -> fun (V270) -> V269 end end end, fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> begin (V276 = (V273(V275))), begin (V277 = (V274(V275))), (V276(V277)) end end end end end end end}, fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> begin (V283 = (V280(V282))), ((V281(V283))(V282)) end end end end end end, fun (V284) -> fun (V285) -> fun (V286) -> begin (V287 = (V285(V286))), (V287(V286)) end end end end}, fun (V288) -> fun (V289) -> V289 end end}, V0))(V262))), {'Idris.Prelude.Types.Right', V290} end), case V291 of {'Idris.Prelude.Types.Left', E194} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V293) -> begin (V329 = (('un--dirOption'(case case V293 of {'Idris.Core.Context.MkDefs', E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230} -> (fun (V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315, V316, V317, V318, V319) -> V298 end(E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of {'Idris.Core.Options.MkOptions', E196, E197, E198, E199, E200, E201, E202, E203, E204} -> (fun (V320, V321, V322, V323, V324, V325, V326, V327, V328) -> V320 end(E196, E197, E198, E199, E200, E201, E202, E203, E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V261))(V262))), case V329 of {'Idris.Prelude.Types.Left', E231} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V331) -> {'Idris.Prelude.Types.Right', 1} end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E193)); {'Idris.Idris.CommandLine.Timing'} -> (fun () -> fun (V332) -> begin (V333 = ('Idris.Idris2.Core.Context':'un--setLogTimings'(V0, 0, V332))), case V333 of {'Idris.Prelude.Types.Left', E233} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V335) -> (('un--preOptions'(V0, V1, V5))(V332)) end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.DebugElabCheck'} -> (fun () -> fun (V336) -> begin (V337 = ('Idris.Idris2.Core.Context':'un--setDebugElabCheck'(V0, 0, V336))), case V337 of {'Idris.Prelude.Types.Left', E235} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V339) -> (('un--preOptions'(V0, V1, V5))(V336)) end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E237} -> (fun (V340) -> fun (V341) -> begin (V342 = ('Idris.Idris2.Idris.REPLOpts':'un--setOutput'(V1, {'Idris.Idris.REPLOpts.REPL', 0}, V341))), case V342 of {'Idris.Prelude.Types.Left', E238} -> (fun (V343) -> {'Idris.Prelude.Types.Left', V343} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V344) -> begin (V362 = begin (V345 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V341))), case V345 of {'Idris.Prelude.Types.Left', E240} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V347) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V347 of {'Idris.Core.Options.MkSessionOpts', E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255} -> (fun (V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361) -> {'Idris.Core.Options.MkSessionOpts', V348, 0, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361} end(E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V341)) end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V362 of {'Idris.Prelude.Types.Left', E256} -> (fun (V363) -> {'Idris.Prelude.Types.Left', V363} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V364) -> (('un--preOptions'(V0, V1, V5))(V341)) end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E237)); {'Idris.Idris.CommandLine.FindIPKG'} -> (fun () -> fun (V365) -> begin (V383 = begin (V366 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V365))), case V366 of {'Idris.Prelude.Types.Left', E258} -> (fun (V367) -> {'Idris.Prelude.Types.Left', V367} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V368) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V368 of {'Idris.Core.Options.MkSessionOpts', E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273} -> (fun (V369, V370, V371, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382) -> {'Idris.Core.Options.MkSessionOpts', V369, V370, 0, V372, V373, V374, V375, V376, V377, V378, V379, V380, V381, V382} end(E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V365)) end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V383 of {'Idris.Prelude.Types.Left', E274} -> (fun (V384) -> {'Idris.Prelude.Types.Left', V384} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V385) -> (('un--preOptions'(V0, V1, V5))(V365)) end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.ChangedModules', E276} -> (fun (V386) -> fun (V387) -> begin (V405 = begin (V388 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V387))), case V388 of {'Idris.Prelude.Types.Left', E277} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V390) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V390 of {'Idris.Core.Options.MkSessionOpts', E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292} -> (fun (V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404) -> {'Idris.Core.Options.MkSessionOpts', V391, V392, V393, V394, V395, V396, V386, V398, V399, V400, V401, V402, V403, V404} end(E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V387)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V405 of {'Idris.Prelude.Types.Left', E293} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V407) -> (('un--preOptions'(V0, V1, V5))(V387)) end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276)); {'Idris.Idris.CommandLine.DumpCases', E295} -> (fun (V408) -> fun (V409) -> begin (V427 = begin (V410 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V409))), case V410 of {'Idris.Prelude.Types.Left', E296} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V412) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V412 of {'Idris.Core.Options.MkSessionOpts', E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311} -> (fun (V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426) -> {'Idris.Core.Options.MkSessionOpts', V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, {'Idris.Prelude.Types.Just', V408}, V424, V425, V426} end(E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V409)) end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V427 of {'Idris.Prelude.Types.Left', E312} -> (fun (V428) -> {'Idris.Prelude.Types.Left', V428} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V429) -> (('un--preOptions'(V0, V1, V5))(V409)) end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E295)); {'Idris.Idris.CommandLine.DumpLifted', E314} -> (fun (V430) -> fun (V431) -> begin (V449 = begin (V432 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V431))), case V432 of {'Idris.Prelude.Types.Left', E315} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V434) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V434 of {'Idris.Core.Options.MkSessionOpts', E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330} -> (fun (V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, V446, V447, V448) -> {'Idris.Core.Options.MkSessionOpts', V435, V436, V437, V438, V439, V440, V441, V442, V443, V444, V445, {'Idris.Prelude.Types.Just', V430}, V447, V448} end(E317, E318, E319, E320, E321, E322, E323, E324, E325, E326, E327, E328, E329, E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V431)) end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V449 of {'Idris.Prelude.Types.Left', E331} -> (fun (V450) -> {'Idris.Prelude.Types.Left', V450} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V451) -> (('un--preOptions'(V0, V1, V5))(V431)) end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E314)); {'Idris.Idris.CommandLine.DumpANF', E333} -> (fun (V452) -> fun (V453) -> begin (V471 = begin (V454 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V453))), case V454 of {'Idris.Prelude.Types.Left', E334} -> (fun (V455) -> {'Idris.Prelude.Types.Left', V455} end(E334)); {'Idris.Prelude.Types.Right', E335} -> (fun (V456) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V456 of {'Idris.Core.Options.MkSessionOpts', E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349} -> (fun (V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470) -> {'Idris.Core.Options.MkSessionOpts', V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, {'Idris.Prelude.Types.Just', V452}, V470} end(E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V453)) end(E335)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V471 of {'Idris.Prelude.Types.Left', E350} -> (fun (V472) -> {'Idris.Prelude.Types.Left', V472} end(E350)); {'Idris.Prelude.Types.Right', E351} -> (fun (V473) -> (('un--preOptions'(V0, V1, V5))(V453)) end(E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E333)); {'Idris.Idris.CommandLine.DumpVMCode', E352} -> (fun (V474) -> fun (V475) -> begin (V493 = begin (V476 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V475))), case V476 of {'Idris.Prelude.Types.Left', E353} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E353)); {'Idris.Prelude.Types.Right', E354} -> (fun (V478) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V478 of {'Idris.Core.Options.MkSessionOpts', E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368} -> (fun (V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492) -> {'Idris.Core.Options.MkSessionOpts', V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, {'Idris.Prelude.Types.Just', V474}} end(E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V475)) end(E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V493 of {'Idris.Prelude.Types.Left', E369} -> (fun (V494) -> {'Idris.Prelude.Types.Left', V494} end(E369)); {'Idris.Prelude.Types.Right', E370} -> (fun (V495) -> (('un--preOptions'(V0, V1, V5))(V475)) end(E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E352)); {'Idris.Idris.CommandLine.Logging', E371} -> (fun (V496) -> fun (V497) -> begin (V515 = begin (V498 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V497))), case V498 of {'Idris.Prelude.Types.Left', E372} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E372)); {'Idris.Prelude.Types.Right', E373} -> (fun (V500) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V500 of {'Idris.Core.Options.MkSessionOpts', E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384, E385, E386, E387} -> (fun (V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514) -> {'Idris.Core.Options.MkSessionOpts', V501, V502, V503, V504, V505, V506, V507, (('Idris.Idris2.Core.Options.Log':'un--insertLogLevel'(V496))(V508)), V509, V510, V511, V512, V513, V514} end(E374, E375, E376, E377, E378, E379, E380, E381, E382, E383, E384, E385, E386, E387)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V497)) end(E373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V515 of {'Idris.Prelude.Types.Left', E388} -> (fun (V516) -> {'Idris.Prelude.Types.Left', V516} end(E388)); {'Idris.Prelude.Types.Right', E389} -> (fun (V517) -> (('un--preOptions'(V0, V1, V5))(V497)) end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E371)); {'Idris.Idris.CommandLine.ConsoleWidth', E390} -> (fun (V518) -> fun (V519) -> begin (V520 = ('Idris.Idris2.Idris.REPLOpts':'un--setConsoleWidth'(V1, V518, V519))), case V520 of {'Idris.Prelude.Types.Left', E391} -> (fun (V521) -> {'Idris.Prelude.Types.Left', V521} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V522) -> (('un--preOptions'(V0, V1, V5))(V519)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E390)); {'Idris.Idris.CommandLine.Color', E393} -> (fun (V523) -> fun (V524) -> begin (V525 = ('Idris.Idris2.Idris.REPLOpts':'un--setColor'(V1, V523, V524))), case V525 of {'Idris.Prelude.Types.Left', E394} -> (fun (V526) -> {'Idris.Prelude.Types.Left', V526} end(E394)); {'Idris.Prelude.Types.Right', E395} -> (fun (V527) -> (('un--preOptions'(V0, V1, V5))(V524)) end(E395)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E393)); _ -> ('un--preOptions'(V0, V1, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--postOptions'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> fun (V7) -> {'Idris.Prelude.Types.Right', 0} end; _ -> case V5 of {'Idris.Idris.REPL.ErrorLoadingFile', E21, E22} -> (fun (V8, V9) -> case V6 of [E44 | E45] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.CommandLine.OutputFile', E67} -> (fun (V12) -> fun (V13) -> begin (V14 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V11))(V13))), case V14 of {'Idris.Prelude.Types.Left', E68} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V16) -> {'Idris.Prelude.Types.Right', 1} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E67)); _ -> case V6 of [E46 | E47] -> (fun (V17, V18) -> case V17 of {'Idris.Idris.CommandLine.OutputFile', E48} -> (fun (V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E49} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V23) -> begin (V24 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V20))), case V24 of {'Idris.Prelude.Types.Left', E51} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V26) -> {'Idris.Prelude.Types.Right', 1} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48)); {'Idris.Idris.CommandLine.ExecFn', E53} -> (fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V29) -> begin (V30 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V27}}, V29))), case V30 of {'Idris.Prelude.Types.Left', E54} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V32) -> begin (V33 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V29))), case V33 of {'Idris.Prelude.Types.Left', E56} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V35) -> {'Idris.Prelude.Types.Right', 1} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V36) -> fun (V37) -> begin (V41 = begin (V38 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V36))(V37))), case V38 of {'Idris.Prelude.Types.Left', E58} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V40) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, V40, V37)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V41 of {'Idris.Prelude.Types.Left', E60} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V43) -> {'Idris.Prelude.Types.Right', 1} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V28)) end end(E53)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V44) -> begin (V45 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V18))(V44))), case V45 of {'Idris.Prelude.Types.Left', E62} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V47) -> {'Idris.Prelude.Types.Right', 1} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E64} -> (fun (V48) -> fun (V49) -> begin (V50 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V48))(V49))), case V50 of {'Idris.Prelude.Types.Left', E65} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V52) -> {'Idris.Prelude.Types.Right', 1} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E64)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V18)) end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44, E45)); _ -> case V6 of [E23 | E24] -> (fun (V53, V54) -> case V53 of {'Idris.Idris.CommandLine.OutputFile', E25} -> (fun (V55) -> fun (V56) -> begin (V57 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V55, V56))), case V57 of {'Idris.Prelude.Types.Left', E26} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V59) -> begin (V60 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V54))(V56))), case V60 of {'Idris.Prelude.Types.Left', E28} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V62) -> {'Idris.Prelude.Types.Right', 1} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E25)); {'Idris.Idris.CommandLine.ExecFn', E30} -> (fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V65) -> begin (V66 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V63}}, V65))), case V66 of {'Idris.Prelude.Types.Left', E31} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V68) -> begin (V69 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V54))(V65))), case V69 of {'Idris.Prelude.Types.Left', E33} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V71) -> {'Idris.Prelude.Types.Right', 1} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V72) -> fun (V73) -> begin (V77 = begin (V74 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V72))(V73))), case V74 of {'Idris.Prelude.Types.Left', E35} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V76) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, V76, V73)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V77 of {'Idris.Prelude.Types.Left', E37} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V79) -> {'Idris.Prelude.Types.Right', 1} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V64)) end end(E30)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V80) -> begin (V81 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V54))(V80))), case V81 of {'Idris.Prelude.Types.Left', E39} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V83) -> {'Idris.Prelude.Types.Right', 1} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E41} -> (fun (V84) -> fun (V85) -> begin (V86 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V84))(V85))), case V86 of {'Idris.Prelude.Types.Left', E42} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V88) -> {'Idris.Prelude.Types.Right', 1} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E41)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V54)) end end(E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21, E22)); _ -> case V6 of [E0 | E1] -> (fun (V89, V90) -> case V89 of {'Idris.Idris.CommandLine.OutputFile', E2} -> (fun (V91) -> fun (V92) -> begin (V93 = ('Idris.Idris2.Idris.REPL':'un--compileExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', <<"main"/utf8>>}}, V91, V92))), case V93 of {'Idris.Prelude.Types.Left', E3} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V95) -> begin (V96 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V90))(V92))), case V96 of {'Idris.Prelude.Types.Left', E5} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V98) -> {'Idris.Prelude.Types.Right', 1} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Idris.CommandLine.ExecFn', E7} -> (fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V101) -> begin (V102 = ('Idris.Idris2.Idris.REPL':'un--execExp'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.PRef', {'Idris.Core.FC.MkFC', <<"(script)"/utf8>>, {'Idris.Builtin.MkPair', 0, 0}, {'Idris.Builtin.MkPair', 0, 0}}, {'Idris.Core.Name.UN', V99}}, V101))), case V102 of {'Idris.Prelude.Types.Left', E8} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V104) -> begin (V105 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V90))(V101))), case V105 of {'Idris.Prelude.Types.Left', E10} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V107) -> {'Idris.Prelude.Types.Right', 1} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V108) -> fun (V109) -> begin (V113 = begin (V110 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V108))(V109))), case V110 of {'Idris.Prelude.Types.Left', E12} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V112) -> ('Idris.Idris2.Idris.REPLCommon':'un--printError'(V4, V112, V109)) end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V113 of {'Idris.Prelude.Types.Left', E14} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V115) -> {'Idris.Prelude.Types.Right', 1} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V100)) end end(E7)); {'Idris.Idris.CommandLine.CheckOnly'} -> (fun () -> fun (V116) -> begin (V117 = (('un--postOptions'(V0, V1, V2, V3, V4, V5, V90))(V116))), case V117 of {'Idris.Prelude.Types.Left', E16} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V119) -> {'Idris.Prelude.Types.Right', 1} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.CommandLine.RunREPL', E18} -> (fun (V120) -> fun (V121) -> begin (V122 = (('Idris.Idris2.Idris.REPL':'un--replCmd'(V0, V1, V2, V3, V4, V120))(V121))), case V122 of {'Idris.Prelude.Types.Left', E19} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V124) -> {'Idris.Prelude.Types.Right', 1} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18)); _ -> ('un--postOptions'(V0, V1, V2, V3, V4, V5, V90)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--ideModeSocket'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeModeSocket', E2} -> (fun (V3) -> 0 end(E2)); _ -> ('un--ideModeSocket'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ideMode'(V0) -> case V0 of [] -> 1; [E0 | E1] -> (fun (V1, V2) -> case V1 of {'Idris.Idris.CommandLine.IdeMode'} -> (fun () -> 0 end()); _ -> ('un--ideMode'(V2)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dirOption'(V0, V1) -> case V1 of {'Idris.Idris.CommandLine.LibDir'} -> (fun () -> fun (V2) -> begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> V9 end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> begin (V16 = (V13(V15))), begin (V17 = (V14(V15))), (V16(V17)) end end end end end end end}, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), ((V21(V23))(V22)) end end end end end end, fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V25(V26))), (V27(V26)) end end end end}, fun (V28) -> fun (V29) -> V29 end end}, ('Idris.Idris2.Utils.Path':'un--</>'(case V0 of {'Idris.Core.Options.MkDirs', E0, E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V34 end(E0, E1, E2, E3, E4, E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"idris2-"/utf8>>, ('Idris.Idris2.Idris.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'())))))))))(V2))), {'Idris.Prelude.Types.Right', V39} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
