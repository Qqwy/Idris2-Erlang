-module('Idris.Idris2.TTImp.Elab.Term').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--check-12144'/15,
  'case--checkTerm-12045'/15,
  'case--checkTerm-11986'/18,
  'case--case block in checkTerm,resolveNames-11769'/19,
  'case--checkTerm,resolveNames-11672'/17,
  'case--checkTerm-11448'/13,
  'case--checkTerm-10937'/15,
  'case--insertImpLam,bindLam-10839'/10,
  'case--insertImpLam,bindLamTm-10513'/10,
  'case--insertImpLam,bindLamTm-10427'/17,
  'case--insertImpLam,bindLamTm-10322'/16,
  'case--insertImpLam,bindLamTm-10219'/16,
  'nested--14900-11658--in--un--resolveNames'/15,
  'nested--14021-10088--in--un--bindLamTm'/9,
  'nested--14021-10089--in--un--bindLamNF'/8,
  'nested--14021-10090--in--un--bindLam'/9,
  'un--insertImpLam'/6,
  'un--checkTerm'/11
]).
'case--check-12144'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.TTImp.Elab.Check.InLHS', E2} -> (fun (V15) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkImp'(V0, V10, V9, V8, V7, V6, V5, V4, V3, V13, V1)) end(E2)); _ -> fun (V16) -> begin (V17 = (('un--insertImpLam'('erased', V10, V8, V3, V13, V1))(V16))), case V17 of {'Idris.Prelude.Types.Left', E0} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V19) -> (('Idris.Idris2.TTImp.Elab.Check':'un--checkImp'(V0, V10, V9, V8, V7, V6, V5, V4, V3, V19, V1))(V16)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--checkTerm-12045'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.TTImp.Elab.Check.MkEState', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> {'Idris.TTImp.Elab.Check.MkEState', V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', V14, case V13 of {'Idris.TTImp.Elab.Check.MkEState', E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V40 end(E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--checkTerm-11986'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.TTImp.Elab.Check.MkEState', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.TTImp.Elab.Check.MkEState', V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, case V13 of {'Idris.TTImp.Elab.Check.MkEState', E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V43 end(E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in checkTerm,resolveNames-11769'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of [] -> fun (V19) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V15, V13}, V19)) end; [E0 | E1] -> (fun (V20, V21) -> case V21 of [] -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V23) -> case V23 of {'Idris.Prelude.Types.Left', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V25) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V16, V20, V25))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('nested--14900-11658--in--un--resolveNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14)), V22)) end; _ -> fun (V26) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V27) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V27)) end, V18))}, V26)) end end end(E0, E1)); _ -> fun (V28) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V29) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V29)) end, V18))}, V28)) end end.
'case--checkTerm,resolveNames-11672'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V17) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"non-UN in \x{22}with\x{22} LHS: "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V13))))}, V17)) end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> fun (V19) -> begin (V48 = begin (V47 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V22, V23, V24)) end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> V26 end end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> begin (V33 = (V30(V32))), begin (V34 = (V31(V32))), (V33(V34)) end end end end end end end}, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V37(V39))), ((V38(V40))(V39)) end end end end end end, fun (V41) -> fun (V42) -> fun (V43) -> begin (V44 = (V42(V43))), (V44(V43)) end end end end}, fun (V45) -> fun (V46) -> V46 end end}, V12))(V19))), {'Idris.Prelude.Types.Right', V47} end), case V48 of {'Idris.Prelude.Types.Left', E1} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V50) -> begin (V77 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V13, case V50 of {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28} -> (fun (V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76) -> V51 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V19))), case V77 of {'Idris.Prelude.Types.Left', E29} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V79) -> case V79 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', V15, V13}, V19)); [E31 | E32] -> (fun (V80, V81) -> case V81 of [] -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', fun (V82) -> case V82 of {'Idris.Prelude.Types.Left', E33} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V84) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.StringMap':'un--insert'('erased', V18, V80, V84))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('nested--14900-11658--in--un--resolveNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V15, V14)), V19)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V85) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V85)) end, V79))}, V19)) end end(E31, E32)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', V15, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V86) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V86)) end, V79))}, V19)) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--checkTerm-11448'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V13, V14) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V3, V0, V10, V9, V8, V7, V5, V2, V13, ('Idris.Idris2.Core.Normalise':'un--gnf'(V3, V5, V14)), V4)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--checkTerm-10937'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V3 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V15) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V14, V12, <<"arg"/utf8>>, V15)) end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V16) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V14, V12, <<"impArg"/utf8>>, V16)) end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V17) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V14, V12, <<"conArg"/utf8>>, V17)) end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V14, V12, <<"defArg"/utf8>>, V19)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--insertImpLam,bindLam-10839'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Prelude.Types.Just', E0} -> (fun (V10) -> fun (V11) -> {'Idris.Prelude.Types.Right', V10} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V12) -> begin (V13 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V5, V6))(V12))), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V7, V15))(V12)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--insertImpLam,bindLamTm-10513'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V10, V11, V12) -> case V11 of {'Idris.Core.TT.Func'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V8}} end end end(E0, E1, E2)); {'Idris.Core.TT.TForce', E3, E4, E5} -> (fun (V15, V16, V17) -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E3, E4, E5)); {'Idris.Core.TT.Bind', E6, E7, E8, E9} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Lam', E10, E11, E12, E13} -> (fun (V23, V24, V25, V26) -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E10, E11, E12, E13)); _ -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V8}} end end end(E6, E7, E8, E9)); _ -> fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V8}} end end.
'case--insertImpLam,bindLamTm-10427'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Prelude.Types.Just', E0} -> (fun (V17) -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V13, V10, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V13, 1}}, {'Idris.Prelude.Types.Just', V15}, {'Idris.TTImp.TTImp.Implicit', V13, 1}, V17}}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--insertImpLam,bindLamTm-10322'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E0} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V12, V9, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V14}, {'Idris.TTImp.TTImp.Implicit', V12, 1}, V16}}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--insertImpLam,bindLamTm-10219'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E0} -> (fun (V16) -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V12, V9, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V14}, {'Idris.TTImp.TTImp.Implicit', V12, 1}, V16}}} end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14900-11658--in--un--resolveNames'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of [] -> fun (V15) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.StringMap':'un--empty'('erased'))} end; [E0 | E1] -> (fun (V16, V17) -> ('case--checkTerm,resolveNames-11672'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V16, V17, V13, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V16)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--14021-10088--in--un--bindLamTm'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.TTImp.TTImp.ILam', E24, E25, E26, E27, E28, E29} -> (fun (V9, V10, V11, V12, V13, V14) -> case V11 of {'Idris.Core.TT.Implicit'} -> (fun () -> case V8 of {'Idris.Core.TT.Bind', E78, E79, E80, E81} -> (fun (V15, V16, V17, V18) -> case V17 of {'Idris.Core.TT.Pi', E106, E107, E108, E109} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V7}} end end()); _ -> case V8 of {'Idris.Core.TT.Bind', E110, E111, E112, E113} -> (fun (V24, V25, V26, V27) -> case V26 of {'Idris.Core.TT.Pi', E114, E115, E116, E117} -> (fun (V28, V29, V30, V31) -> case V30 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V32) -> begin (V33 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V25)), V32))), case V33 of {'Idris.Prelude.Types.Left', E118} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V35) -> begin (V36 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V27))(V32))), case V36 of {'Idris.Prelude.Types.Left', E120} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V38) -> case V38 of {'Idris.Prelude.Types.Just', E122} -> (fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V24, V29, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V35}, {'Idris.TTImp.TTImp.Implicit', V24, 1}, V39}}} end(E122)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V40) -> begin (V41 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V25)), V40))), case V41 of {'Idris.Prelude.Types.Left', E123} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V43) -> begin (V44 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V27))(V40))), case V44 of {'Idris.Prelude.Types.Left', E125} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V46) -> case V46 of {'Idris.Prelude.Types.Just', E127} -> (fun (V47) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V24, V29, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V43}, {'Idris.TTImp.TTImp.Implicit', V24, 1}, V47}}} end(E127)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E128} -> (fun (V48) -> fun (V49) -> begin (V50 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V25)), V49))), case V50 of {'Idris.Prelude.Types.Left', E129} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V52) -> begin (V53 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V27))(V49))), case V53 of {'Idris.Prelude.Types.Left', E131} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V55) -> case V55 of {'Idris.Prelude.Types.Just', E133} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V24, V29, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V24, 1}}, {'Idris.Prelude.Types.Just', V52}, {'Idris.TTImp.TTImp.Implicit', V24, 1}, V56}}} end(E133)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E128)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E114, E115, E116, E117)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E110, E111, E112, E113)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E106, E107, E108, E109)); _ -> case V8 of {'Idris.Core.TT.Bind', E82, E83, E84, E85} -> (fun (V57, V58, V59, V60) -> case V59 of {'Idris.Core.TT.Pi', E86, E87, E88, E89} -> (fun (V61, V62, V63, V64) -> case V63 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V65) -> begin (V66 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V58)), V65))), case V66 of {'Idris.Prelude.Types.Left', E90} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V68) -> begin (V69 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V60))(V65))), case V69 of {'Idris.Prelude.Types.Left', E92} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V71) -> case V71 of {'Idris.Prelude.Types.Just', E94} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V57, V62, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V68}, {'Idris.TTImp.TTImp.Implicit', V57, 1}, V72}}} end(E94)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V73) -> begin (V74 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V58)), V73))), case V74 of {'Idris.Prelude.Types.Left', E95} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V76) -> begin (V77 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V60))(V73))), case V77 of {'Idris.Prelude.Types.Left', E97} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V79) -> case V79 of {'Idris.Prelude.Types.Just', E99} -> (fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V57, V62, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V76}, {'Idris.TTImp.TTImp.Implicit', V57, 1}, V80}}} end(E99)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E100} -> (fun (V81) -> fun (V82) -> begin (V83 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V58)), V82))), case V83 of {'Idris.Prelude.Types.Left', E101} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V85) -> begin (V86 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V60))(V82))), case V86 of {'Idris.Prelude.Types.Left', E103} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V88) -> case V88 of {'Idris.Prelude.Types.Just', E105} -> (fun (V89) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V57, V62, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V57, 1}}, {'Idris.Prelude.Types.Just', V85}, {'Idris.TTImp.TTImp.Implicit', V57, 1}, V89}}} end(E105)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E100)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E86, E87, E88, E89)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E82, E83, E84, E85)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E78, E79, E80, E81)); _ -> case V8 of {'Idris.Core.TT.Bind', E54, E55, E56, E57} -> (fun (V90, V91, V92, V93) -> case V92 of {'Idris.Core.TT.Pi', E58, E59, E60, E61} -> (fun (V94, V95, V96, V97) -> case V96 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V98) -> begin (V99 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V91)), V98))), case V99 of {'Idris.Prelude.Types.Left', E62} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V101) -> begin (V102 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V93))(V98))), case V102 of {'Idris.Prelude.Types.Left', E64} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V104) -> case V104 of {'Idris.Prelude.Types.Just', E66} -> (fun (V105) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V90, V95, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V101}, {'Idris.TTImp.TTImp.Implicit', V90, 1}, V105}}} end(E66)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V106) -> begin (V107 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V91)), V106))), case V107 of {'Idris.Prelude.Types.Left', E67} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V109) -> begin (V110 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V93))(V106))), case V110 of {'Idris.Prelude.Types.Left', E69} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V112) -> case V112 of {'Idris.Prelude.Types.Just', E71} -> (fun (V113) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V90, V95, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V109}, {'Idris.TTImp.TTImp.Implicit', V90, 1}, V113}}} end(E71)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E72} -> (fun (V114) -> fun (V115) -> begin (V116 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V91)), V115))), case V116 of {'Idris.Prelude.Types.Left', E73} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V118) -> begin (V119 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V93))(V115))), case V119 of {'Idris.Prelude.Types.Left', E75} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V121) -> case V121 of {'Idris.Prelude.Types.Just', E77} -> (fun (V122) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V90, V95, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V90, 1}}, {'Idris.Prelude.Types.Just', V118}, {'Idris.TTImp.TTImp.Implicit', V90, 1}, V122}}} end(E77)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E72)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E58, E59, E60, E61)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E54, E55, E56, E57)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V8 of {'Idris.Core.TT.Bind', E158, E159, E160, E161} -> (fun (V123, V124, V125, V126) -> case V125 of {'Idris.Core.TT.Pi', E186, E187, E188, E189} -> (fun (V127, V128, V129, V130) -> case V129 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V131) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V7}} end end()); _ -> case V8 of {'Idris.Core.TT.Bind', E190, E191, E192, E193} -> (fun (V132, V133, V134, V135) -> case V134 of {'Idris.Core.TT.Pi', E194, E195, E196, E197} -> (fun (V136, V137, V138, V139) -> case V138 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V140) -> begin (V141 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V133)), V140))), case V141 of {'Idris.Prelude.Types.Left', E198} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V143) -> begin (V144 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V135))(V140))), case V144 of {'Idris.Prelude.Types.Left', E200} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V146) -> case V146 of {'Idris.Prelude.Types.Just', E202} -> (fun (V147) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V132, V137, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V143}, {'Idris.TTImp.TTImp.Implicit', V132, 1}, V147}}} end(E202)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V148) -> begin (V149 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V133)), V148))), case V149 of {'Idris.Prelude.Types.Left', E203} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V151) -> begin (V152 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V135))(V148))), case V152 of {'Idris.Prelude.Types.Left', E205} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V154) -> case V154 of {'Idris.Prelude.Types.Just', E207} -> (fun (V155) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V132, V137, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V151}, {'Idris.TTImp.TTImp.Implicit', V132, 1}, V155}}} end(E207)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E208} -> (fun (V156) -> fun (V157) -> begin (V158 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V133)), V157))), case V158 of {'Idris.Prelude.Types.Left', E209} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V160) -> begin (V161 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V135))(V157))), case V161 of {'Idris.Prelude.Types.Left', E211} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V163) -> case V163 of {'Idris.Prelude.Types.Just', E213} -> (fun (V164) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V132, V137, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V132, 1}}, {'Idris.Prelude.Types.Just', V160}, {'Idris.TTImp.TTImp.Implicit', V132, 1}, V164}}} end(E213)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E208)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E194, E195, E196, E197)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E190, E191, E192, E193)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E186, E187, E188, E189)); _ -> case V8 of {'Idris.Core.TT.Bind', E162, E163, E164, E165} -> (fun (V165, V166, V167, V168) -> case V167 of {'Idris.Core.TT.Pi', E166, E167, E168, E169} -> (fun (V169, V170, V171, V172) -> case V171 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V173) -> begin (V174 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V166)), V173))), case V174 of {'Idris.Prelude.Types.Left', E170} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V176) -> begin (V177 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V168))(V173))), case V177 of {'Idris.Prelude.Types.Left', E172} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V179) -> case V179 of {'Idris.Prelude.Types.Just', E174} -> (fun (V180) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V165, V170, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V176}, {'Idris.TTImp.TTImp.Implicit', V165, 1}, V180}}} end(E174)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V181) -> begin (V182 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V166)), V181))), case V182 of {'Idris.Prelude.Types.Left', E175} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V184) -> begin (V185 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V168))(V181))), case V185 of {'Idris.Prelude.Types.Left', E177} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V187) -> case V187 of {'Idris.Prelude.Types.Just', E179} -> (fun (V188) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V165, V170, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V184}, {'Idris.TTImp.TTImp.Implicit', V165, 1}, V188}}} end(E179)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E180} -> (fun (V189) -> fun (V190) -> begin (V191 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V166)), V190))), case V191 of {'Idris.Prelude.Types.Left', E181} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V193) -> begin (V194 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V168))(V190))), case V194 of {'Idris.Prelude.Types.Left', E183} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V196) -> case V196 of {'Idris.Prelude.Types.Just', E185} -> (fun (V197) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V165, V170, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V165, 1}}, {'Idris.Prelude.Types.Just', V193}, {'Idris.TTImp.TTImp.Implicit', V165, 1}, V197}}} end(E185)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E180)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E166, E167, E168, E169)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E162, E163, E164, E165)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E158, E159, E160, E161)); _ -> case V8 of {'Idris.Core.TT.Bind', E134, E135, E136, E137} -> (fun (V198, V199, V200, V201) -> case V200 of {'Idris.Core.TT.Pi', E138, E139, E140, E141} -> (fun (V202, V203, V204, V205) -> case V204 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V206) -> begin (V207 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V199)), V206))), case V207 of {'Idris.Prelude.Types.Left', E142} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V209) -> begin (V210 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V201))(V206))), case V210 of {'Idris.Prelude.Types.Left', E144} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V212) -> case V212 of {'Idris.Prelude.Types.Just', E146} -> (fun (V213) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V198, V203, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V209}, {'Idris.TTImp.TTImp.Implicit', V198, 1}, V213}}} end(E146)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V214) -> begin (V215 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V199)), V214))), case V215 of {'Idris.Prelude.Types.Left', E147} -> (fun (V216) -> {'Idris.Prelude.Types.Left', V216} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V217) -> begin (V218 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V201))(V214))), case V218 of {'Idris.Prelude.Types.Left', E149} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V220) -> case V220 of {'Idris.Prelude.Types.Just', E151} -> (fun (V221) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V198, V203, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V217}, {'Idris.TTImp.TTImp.Implicit', V198, 1}, V221}}} end(E151)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E152} -> (fun (V222) -> fun (V223) -> begin (V224 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V199)), V223))), case V224 of {'Idris.Prelude.Types.Left', E153} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V226) -> begin (V227 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V201))(V223))), case V227 of {'Idris.Prelude.Types.Left', E155} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V229) -> case V229 of {'Idris.Prelude.Types.Just', E157} -> (fun (V230) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V198, V203, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V198, 1}}, {'Idris.Prelude.Types.Just', V226}, {'Idris.TTImp.TTImp.Implicit', V198, 1}, V230}}} end(E157)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E138, E139, E140, E141)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E134, E135, E136, E137)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end()); {'Idris.Core.TT.DefImplicit', E214} -> (fun (V231) -> case V8 of {'Idris.Core.TT.Bind', E239, E240, E241, E242} -> (fun (V232, V233, V234, V235) -> case V234 of {'Idris.Core.TT.Pi', E267, E268, E269, E270} -> (fun (V236, V237, V238, V239) -> case V238 of {'Idris.Core.TT.DefImplicit', E295} -> (fun (V240) -> fun (V241) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V7}} end end(E295)); _ -> case V8 of {'Idris.Core.TT.Bind', E271, E272, E273, E274} -> (fun (V242, V243, V244, V245) -> case V244 of {'Idris.Core.TT.Pi', E275, E276, E277, E278} -> (fun (V246, V247, V248, V249) -> case V248 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V250) -> begin (V251 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V243)), V250))), case V251 of {'Idris.Prelude.Types.Left', E279} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V253) -> begin (V254 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V245))(V250))), case V254 of {'Idris.Prelude.Types.Left', E281} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V256) -> case V256 of {'Idris.Prelude.Types.Just', E283} -> (fun (V257) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V242, V247, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V253}, {'Idris.TTImp.TTImp.Implicit', V242, 1}, V257}}} end(E283)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V258) -> begin (V259 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V243)), V258))), case V259 of {'Idris.Prelude.Types.Left', E284} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E284)); {'Idris.Prelude.Types.Right', E285} -> (fun (V261) -> begin (V262 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V245))(V258))), case V262 of {'Idris.Prelude.Types.Left', E286} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V264) -> case V264 of {'Idris.Prelude.Types.Just', E288} -> (fun (V265) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V242, V247, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V261}, {'Idris.TTImp.TTImp.Implicit', V242, 1}, V265}}} end(E288)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E289} -> (fun (V266) -> fun (V267) -> begin (V268 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V243)), V267))), case V268 of {'Idris.Prelude.Types.Left', E290} -> (fun (V269) -> {'Idris.Prelude.Types.Left', V269} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V270) -> begin (V271 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V245))(V267))), case V271 of {'Idris.Prelude.Types.Left', E292} -> (fun (V272) -> {'Idris.Prelude.Types.Left', V272} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V273) -> case V273 of {'Idris.Prelude.Types.Just', E294} -> (fun (V274) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V242, V247, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V242, 1}}, {'Idris.Prelude.Types.Just', V270}, {'Idris.TTImp.TTImp.Implicit', V242, 1}, V274}}} end(E294)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E289)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E275, E276, E277, E278)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E271, E272, E273, E274)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E267, E268, E269, E270)); _ -> case V8 of {'Idris.Core.TT.Bind', E243, E244, E245, E246} -> (fun (V275, V276, V277, V278) -> case V277 of {'Idris.Core.TT.Pi', E247, E248, E249, E250} -> (fun (V279, V280, V281, V282) -> case V281 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V283) -> begin (V284 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V276)), V283))), case V284 of {'Idris.Prelude.Types.Left', E251} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V286) -> begin (V287 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V278))(V283))), case V287 of {'Idris.Prelude.Types.Left', E253} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V289) -> case V289 of {'Idris.Prelude.Types.Just', E255} -> (fun (V290) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V275, V280, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V286}, {'Idris.TTImp.TTImp.Implicit', V275, 1}, V290}}} end(E255)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V291) -> begin (V292 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V276)), V291))), case V292 of {'Idris.Prelude.Types.Left', E256} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V294) -> begin (V295 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V278))(V291))), case V295 of {'Idris.Prelude.Types.Left', E258} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V297) -> case V297 of {'Idris.Prelude.Types.Just', E260} -> (fun (V298) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V275, V280, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V294}, {'Idris.TTImp.TTImp.Implicit', V275, 1}, V298}}} end(E260)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E261} -> (fun (V299) -> fun (V300) -> begin (V301 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V276)), V300))), case V301 of {'Idris.Prelude.Types.Left', E262} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E262)); {'Idris.Prelude.Types.Right', E263} -> (fun (V303) -> begin (V304 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V278))(V300))), case V304 of {'Idris.Prelude.Types.Left', E264} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E264)); {'Idris.Prelude.Types.Right', E265} -> (fun (V306) -> case V306 of {'Idris.Prelude.Types.Just', E266} -> (fun (V307) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V275, V280, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V275, 1}}, {'Idris.Prelude.Types.Just', V303}, {'Idris.TTImp.TTImp.Implicit', V275, 1}, V307}}} end(E266)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E261)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E247, E248, E249, E250)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E243, E244, E245, E246)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E239, E240, E241, E242)); _ -> case V8 of {'Idris.Core.TT.Bind', E215, E216, E217, E218} -> (fun (V308, V309, V310, V311) -> case V310 of {'Idris.Core.TT.Pi', E219, E220, E221, E222} -> (fun (V312, V313, V314, V315) -> case V314 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V316) -> begin (V317 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V309)), V316))), case V317 of {'Idris.Prelude.Types.Left', E223} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V319) -> begin (V320 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V311))(V316))), case V320 of {'Idris.Prelude.Types.Left', E225} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V322) -> case V322 of {'Idris.Prelude.Types.Just', E227} -> (fun (V323) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V308, V313, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V319}, {'Idris.TTImp.TTImp.Implicit', V308, 1}, V323}}} end(E227)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V324) -> begin (V325 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V309)), V324))), case V325 of {'Idris.Prelude.Types.Left', E228} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V327) -> begin (V328 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V311))(V324))), case V328 of {'Idris.Prelude.Types.Left', E230} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V330) -> case V330 of {'Idris.Prelude.Types.Just', E232} -> (fun (V331) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V308, V313, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V327}, {'Idris.TTImp.TTImp.Implicit', V308, 1}, V331}}} end(E232)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E233} -> (fun (V332) -> fun (V333) -> begin (V334 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V309)), V333))), case V334 of {'Idris.Prelude.Types.Left', E234} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V336) -> begin (V337 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V311))(V333))), case V337 of {'Idris.Prelude.Types.Left', E236} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V339) -> case V339 of {'Idris.Prelude.Types.Just', E238} -> (fun (V340) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V308, V313, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V308, 1}}, {'Idris.Prelude.Types.Just', V336}, {'Idris.TTImp.TTImp.Implicit', V308, 1}, V340}}} end(E238)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E233)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E219, E220, E221, E222)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E215, E216, E217, E218)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E214)); _ -> case V8 of {'Idris.Core.TT.Bind', E30, E31, E32, E33} -> (fun (V341, V342, V343, V344) -> case V343 of {'Idris.Core.TT.Pi', E34, E35, E36, E37} -> (fun (V345, V346, V347, V348) -> case V347 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V349) -> begin (V350 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V342)), V349))), case V350 of {'Idris.Prelude.Types.Left', E38} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V352) -> begin (V353 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V344))(V349))), case V353 of {'Idris.Prelude.Types.Left', E40} -> (fun (V354) -> {'Idris.Prelude.Types.Left', V354} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V355) -> case V355 of {'Idris.Prelude.Types.Just', E42} -> (fun (V356) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V341, V346, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V352}, {'Idris.TTImp.TTImp.Implicit', V341, 1}, V356}}} end(E42)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V357) -> begin (V358 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V342)), V357))), case V358 of {'Idris.Prelude.Types.Left', E43} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V360) -> begin (V361 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V344))(V357))), case V361 of {'Idris.Prelude.Types.Left', E45} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V363) -> case V363 of {'Idris.Prelude.Types.Just', E47} -> (fun (V364) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V341, V346, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V360}, {'Idris.TTImp.TTImp.Implicit', V341, 1}, V364}}} end(E47)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E48} -> (fun (V365) -> fun (V366) -> begin (V367 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V342)), V366))), case V367 of {'Idris.Prelude.Types.Left', E49} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V369) -> begin (V370 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V344))(V366))), case V370 of {'Idris.Prelude.Types.Left', E51} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V372) -> case V372 of {'Idris.Prelude.Types.Just', E53} -> (fun (V373) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V341, V346, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V341, 1}}, {'Idris.Prelude.Types.Just', V369}, {'Idris.TTImp.TTImp.Implicit', V341, 1}, V373}}} end(E53)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E34, E35, E36, E37)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E30, E31, E32, E33)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end end(E24, E25, E26, E27, E28, E29)); _ -> case V8 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V374, V375, V376, V377) -> case V376 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V378, V379, V380, V381) -> case V380 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V382) -> begin (V383 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V375)), V382))), case V383 of {'Idris.Prelude.Types.Left', E8} -> (fun (V384) -> {'Idris.Prelude.Types.Left', V384} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V385) -> begin (V386 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V377))(V382))), case V386 of {'Idris.Prelude.Types.Left', E10} -> (fun (V387) -> {'Idris.Prelude.Types.Left', V387} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V388) -> case V388 of {'Idris.Prelude.Types.Just', E12} -> (fun (V389) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V374, V379, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V385}, {'Idris.TTImp.TTImp.Implicit', V374, 1}, V389}}} end(E12)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V390) -> begin (V391 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V375)), V390))), case V391 of {'Idris.Prelude.Types.Left', E13} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V393) -> begin (V394 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V377))(V390))), case V394 of {'Idris.Prelude.Types.Left', E15} -> (fun (V395) -> {'Idris.Prelude.Types.Left', V395} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V396) -> case V396 of {'Idris.Prelude.Types.Just', E17} -> (fun (V397) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V374, V379, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V393}, {'Idris.TTImp.TTImp.Implicit', V374, 1}, V397}}} end(E17)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E18} -> (fun (V398) -> fun (V399) -> begin (V400 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V375)), V399))), case V400 of {'Idris.Prelude.Types.Left', E19} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V402) -> begin (V403 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V7, V377))(V399))), case V403 of {'Idris.Prelude.Types.Left', E21} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V405) -> case V405 of {'Idris.Prelude.Types.Just', E23} -> (fun (V406) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.TTImp.TTImp.ILam', V374, V379, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V374, 1}}, {'Idris.Prelude.Types.Just', V402}, {'Idris.TTImp.TTImp.Implicit', V374, 1}, V406}}} end(E23)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E4, E5, E6, E7)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end(E0, E1, E2, E3)); _ -> ('case--insertImpLam,bindLamTm-10513'('erased', V1, V2, V3, V4, V5, 'erased', V8, V7, ('Idris.Idris2.Core.TT':'un--getFn'('erased', V8)))) end end.
'nested--14021-10089--in--un--bindLamNF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.TTImp.TTImp.ILam', E33, E34, E35, E36, E37, E38} -> (fun (V8, V9, V10, V11, V12, V13) -> case V10 of {'Idris.Core.TT.Implicit'} -> (fun () -> case V7 of {'Idris.Core.Value.NBind', E105, E106, E107, E108} -> (fun (V14, V15, V16, V17) -> case V16 of {'Idris.Core.TT.Pi', E142, E143, E144, E145} -> (fun (V18, V19, V20, V21) -> case V20 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V22) -> {'Idris.Prelude.Types.Right', V6} end end()); _ -> case V7 of {'Idris.Core.Value.NBind', E146, E147, E148, E149} -> (fun (V23, V24, V25, V26) -> case V25 of {'Idris.Core.TT.Pi', E150, E151, E152, E153} -> (fun (V27, V28, V29, V30) -> case V29 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V31) -> begin (V60 = begin (V59 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> V38 end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), begin (V46 = (V43(V44))), (V45(V46)) end end end end end end end}, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), ((V50(V52))(V51)) end end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V54(V55))), (V56(V55)) end end end end}, fun (V57) -> fun (V58) -> V58 end end}, V5))(V31))), {'Idris.Prelude.Types.Right', V59} end), case V60 of {'Idris.Prelude.Types.Left', E154} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V62) -> begin (V63 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V24)), V31))), case V63 of {'Idris.Prelude.Types.Left', E156} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V65) -> begin (V66 = (((V26(V62))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V23, {'Idris.Core.TT.Bound'}, V65}))))(V31))), case V66 of {'Idris.Prelude.Types.Left', E158} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V68) -> begin (V69 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V68))(V31))), case V69 of {'Idris.Prelude.Types.Left', E160} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V23, V28, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V65}, {'Idris.TTImp.TTImp.Implicit', V23, 1}, V71}} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V72) -> begin (V101 = begin (V100 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V75, V76, V77)) end end end end end, fun (V78) -> fun (V79) -> fun (V80) -> V79 end end end, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> begin (V86 = (V83(V85))), begin (V87 = (V84(V85))), (V86(V87)) end end end end end end end}, fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> begin (V93 = (V90(V92))), ((V91(V93))(V92)) end end end end end end, fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V95(V96))), (V97(V96)) end end end end}, fun (V98) -> fun (V99) -> V99 end end}, V5))(V72))), {'Idris.Prelude.Types.Right', V100} end), case V101 of {'Idris.Prelude.Types.Left', E162} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V103) -> begin (V104 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V24)), V72))), case V104 of {'Idris.Prelude.Types.Left', E164} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V106) -> begin (V107 = (((V26(V103))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V23, {'Idris.Core.TT.Bound'}, V106}))))(V72))), case V107 of {'Idris.Prelude.Types.Left', E166} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V109) -> begin (V110 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V109))(V72))), case V110 of {'Idris.Prelude.Types.Left', E168} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V23, V28, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V106}, {'Idris.TTImp.TTImp.Implicit', V23, 1}, V112}} end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E170} -> (fun (V113) -> fun (V114) -> begin (V143 = begin (V142 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V117, V118, V119)) end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> V121 end end end, fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> begin (V128 = (V125(V127))), begin (V129 = (V126(V127))), (V128(V129)) end end end end end end end}, fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> begin (V135 = (V132(V134))), ((V133(V135))(V134)) end end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> begin (V139 = (V137(V138))), (V139(V138)) end end end end}, fun (V140) -> fun (V141) -> V141 end end}, V5))(V114))), {'Idris.Prelude.Types.Right', V142} end), case V143 of {'Idris.Prelude.Types.Left', E171} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V145) -> begin (V146 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V24)), V114))), case V146 of {'Idris.Prelude.Types.Left', E173} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V148) -> begin (V149 = (((V26(V145))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V23, {'Idris.Core.TT.Bound'}, V148}))))(V114))), case V149 of {'Idris.Prelude.Types.Left', E175} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V151) -> begin (V152 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V151))(V114))), case V152 of {'Idris.Prelude.Types.Left', E177} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V23, V28, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V23, 1}}, {'Idris.Prelude.Types.Just', V148}, {'Idris.TTImp.TTImp.Implicit', V23, 1}, V154}} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E170)); _ -> fun (V155) -> {'Idris.Prelude.Types.Right', V6} end end end(E150, E151, E152, E153)); _ -> fun (V156) -> {'Idris.Prelude.Types.Right', V6} end end end(E146, E147, E148, E149)); _ -> fun (V157) -> {'Idris.Prelude.Types.Right', V6} end end end end(E142, E143, E144, E145)); _ -> case V7 of {'Idris.Core.Value.NBind', E109, E110, E111, E112} -> (fun (V158, V159, V160, V161) -> case V160 of {'Idris.Core.TT.Pi', E113, E114, E115, E116} -> (fun (V162, V163, V164, V165) -> case V164 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V166) -> begin (V195 = begin (V194 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V169, V170, V171)) end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> V173 end end end, fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> begin (V180 = (V177(V179))), begin (V181 = (V178(V179))), (V180(V181)) end end end end end end end}, fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> begin (V187 = (V184(V186))), ((V185(V187))(V186)) end end end end end end, fun (V188) -> fun (V189) -> fun (V190) -> begin (V191 = (V189(V190))), (V191(V190)) end end end end}, fun (V192) -> fun (V193) -> V193 end end}, V5))(V166))), {'Idris.Prelude.Types.Right', V194} end), case V195 of {'Idris.Prelude.Types.Left', E117} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V197) -> begin (V198 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V159)), V166))), case V198 of {'Idris.Prelude.Types.Left', E119} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V200) -> begin (V201 = (((V161(V197))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V158, {'Idris.Core.TT.Bound'}, V200}))))(V166))), case V201 of {'Idris.Prelude.Types.Left', E121} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V203) -> begin (V204 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V203))(V166))), case V204 of {'Idris.Prelude.Types.Left', E123} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V206) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V158, V163, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V200}, {'Idris.TTImp.TTImp.Implicit', V158, 1}, V206}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V207) -> begin (V236 = begin (V235 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V210, V211, V212)) end end end end end, fun (V213) -> fun (V214) -> fun (V215) -> V214 end end end, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> begin (V221 = (V218(V220))), begin (V222 = (V219(V220))), (V221(V222)) end end end end end end end}, fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> begin (V228 = (V225(V227))), ((V226(V228))(V227)) end end end end end end, fun (V229) -> fun (V230) -> fun (V231) -> begin (V232 = (V230(V231))), (V232(V231)) end end end end}, fun (V233) -> fun (V234) -> V234 end end}, V5))(V207))), {'Idris.Prelude.Types.Right', V235} end), case V236 of {'Idris.Prelude.Types.Left', E125} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V238) -> begin (V239 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V159)), V207))), case V239 of {'Idris.Prelude.Types.Left', E127} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V241) -> begin (V242 = (((V161(V238))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V158, {'Idris.Core.TT.Bound'}, V241}))))(V207))), case V242 of {'Idris.Prelude.Types.Left', E129} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V244) -> begin (V245 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V244))(V207))), case V245 of {'Idris.Prelude.Types.Left', E131} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V247) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V158, V163, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V241}, {'Idris.TTImp.TTImp.Implicit', V158, 1}, V247}} end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E133} -> (fun (V248) -> fun (V249) -> begin (V278 = begin (V277 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> fun (V254) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V252, V253, V254)) end end end end end, fun (V255) -> fun (V256) -> fun (V257) -> V256 end end end, fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> begin (V263 = (V260(V262))), begin (V264 = (V261(V262))), (V263(V264)) end end end end end end end}, fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> begin (V270 = (V267(V269))), ((V268(V270))(V269)) end end end end end end, fun (V271) -> fun (V272) -> fun (V273) -> begin (V274 = (V272(V273))), (V274(V273)) end end end end}, fun (V275) -> fun (V276) -> V276 end end}, V5))(V249))), {'Idris.Prelude.Types.Right', V277} end), case V278 of {'Idris.Prelude.Types.Left', E134} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V280) -> begin (V281 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V159)), V249))), case V281 of {'Idris.Prelude.Types.Left', E136} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V283) -> begin (V284 = (((V161(V280))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V158, {'Idris.Core.TT.Bound'}, V283}))))(V249))), case V284 of {'Idris.Prelude.Types.Left', E138} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V286) -> begin (V287 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V286))(V249))), case V287 of {'Idris.Prelude.Types.Left', E140} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V158, V163, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V158, 1}}, {'Idris.Prelude.Types.Just', V283}, {'Idris.TTImp.TTImp.Implicit', V158, 1}, V289}} end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E133)); _ -> fun (V290) -> {'Idris.Prelude.Types.Right', V6} end end end(E113, E114, E115, E116)); _ -> fun (V291) -> {'Idris.Prelude.Types.Right', V6} end end end(E109, E110, E111, E112)); _ -> fun (V292) -> {'Idris.Prelude.Types.Right', V6} end end end end(E105, E106, E107, E108)); _ -> case V7 of {'Idris.Core.Value.NBind', E72, E73, E74, E75} -> (fun (V293, V294, V295, V296) -> case V295 of {'Idris.Core.TT.Pi', E76, E77, E78, E79} -> (fun (V297, V298, V299, V300) -> case V299 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V301) -> begin (V330 = begin (V329 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> fun (V306) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V304, V305, V306)) end end end end end, fun (V307) -> fun (V308) -> fun (V309) -> V308 end end end, fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> fun (V314) -> begin (V315 = (V312(V314))), begin (V316 = (V313(V314))), (V315(V316)) end end end end end end end}, fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> begin (V322 = (V319(V321))), ((V320(V322))(V321)) end end end end end end, fun (V323) -> fun (V324) -> fun (V325) -> begin (V326 = (V324(V325))), (V326(V325)) end end end end}, fun (V327) -> fun (V328) -> V328 end end}, V5))(V301))), {'Idris.Prelude.Types.Right', V329} end), case V330 of {'Idris.Prelude.Types.Left', E80} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V332) -> begin (V333 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V294)), V301))), case V333 of {'Idris.Prelude.Types.Left', E82} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V335) -> begin (V336 = (((V296(V332))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V293, {'Idris.Core.TT.Bound'}, V335}))))(V301))), case V336 of {'Idris.Prelude.Types.Left', E84} -> (fun (V337) -> {'Idris.Prelude.Types.Left', V337} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V338) -> begin (V339 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V338))(V301))), case V339 of {'Idris.Prelude.Types.Left', E86} -> (fun (V340) -> {'Idris.Prelude.Types.Left', V340} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V341) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V293, V298, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V335}, {'Idris.TTImp.TTImp.Implicit', V293, 1}, V341}} end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V342) -> begin (V371 = begin (V370 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V345, V346, V347)) end end end end end, fun (V348) -> fun (V349) -> fun (V350) -> V349 end end end, fun (V351) -> fun (V352) -> fun (V353) -> fun (V354) -> fun (V355) -> begin (V356 = (V353(V355))), begin (V357 = (V354(V355))), (V356(V357)) end end end end end end end}, fun (V358) -> fun (V359) -> fun (V360) -> fun (V361) -> fun (V362) -> begin (V363 = (V360(V362))), ((V361(V363))(V362)) end end end end end end, fun (V364) -> fun (V365) -> fun (V366) -> begin (V367 = (V365(V366))), (V367(V366)) end end end end}, fun (V368) -> fun (V369) -> V369 end end}, V5))(V342))), {'Idris.Prelude.Types.Right', V370} end), case V371 of {'Idris.Prelude.Types.Left', E88} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V373) -> begin (V374 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V294)), V342))), case V374 of {'Idris.Prelude.Types.Left', E90} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V376) -> begin (V377 = (((V296(V373))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V293, {'Idris.Core.TT.Bound'}, V376}))))(V342))), case V377 of {'Idris.Prelude.Types.Left', E92} -> (fun (V378) -> {'Idris.Prelude.Types.Left', V378} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V379) -> begin (V380 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V379))(V342))), case V380 of {'Idris.Prelude.Types.Left', E94} -> (fun (V381) -> {'Idris.Prelude.Types.Left', V381} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V382) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V293, V298, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V376}, {'Idris.TTImp.TTImp.Implicit', V293, 1}, V382}} end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E96} -> (fun (V383) -> fun (V384) -> begin (V413 = begin (V412 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V387, V388, V389)) end end end end end, fun (V390) -> fun (V391) -> fun (V392) -> V391 end end end, fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> begin (V398 = (V395(V397))), begin (V399 = (V396(V397))), (V398(V399)) end end end end end end end}, fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> begin (V405 = (V402(V404))), ((V403(V405))(V404)) end end end end end end, fun (V406) -> fun (V407) -> fun (V408) -> begin (V409 = (V407(V408))), (V409(V408)) end end end end}, fun (V410) -> fun (V411) -> V411 end end}, V5))(V384))), {'Idris.Prelude.Types.Right', V412} end), case V413 of {'Idris.Prelude.Types.Left', E97} -> (fun (V414) -> {'Idris.Prelude.Types.Left', V414} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V415) -> begin (V416 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V294)), V384))), case V416 of {'Idris.Prelude.Types.Left', E99} -> (fun (V417) -> {'Idris.Prelude.Types.Left', V417} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V418) -> begin (V419 = (((V296(V415))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V293, {'Idris.Core.TT.Bound'}, V418}))))(V384))), case V419 of {'Idris.Prelude.Types.Left', E101} -> (fun (V420) -> {'Idris.Prelude.Types.Left', V420} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V421) -> begin (V422 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V421))(V384))), case V422 of {'Idris.Prelude.Types.Left', E103} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V424) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V293, V298, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V293, 1}}, {'Idris.Prelude.Types.Just', V418}, {'Idris.TTImp.TTImp.Implicit', V293, 1}, V424}} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E96)); _ -> fun (V425) -> {'Idris.Prelude.Types.Right', V6} end end end(E76, E77, E78, E79)); _ -> fun (V426) -> {'Idris.Prelude.Types.Right', V6} end end end(E72, E73, E74, E75)); _ -> fun (V427) -> {'Idris.Prelude.Types.Right', V6} end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V7 of {'Idris.Core.Value.NBind', E212, E213, E214, E215} -> (fun (V428, V429, V430, V431) -> case V430 of {'Idris.Core.TT.Pi', E249, E250, E251, E252} -> (fun (V432, V433, V434, V435) -> case V434 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V436) -> {'Idris.Prelude.Types.Right', V6} end end()); _ -> case V7 of {'Idris.Core.Value.NBind', E253, E254, E255, E256} -> (fun (V437, V438, V439, V440) -> case V439 of {'Idris.Core.TT.Pi', E257, E258, E259, E260} -> (fun (V441, V442, V443, V444) -> case V443 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V445) -> begin (V474 = begin (V473 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> fun (V450) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V448, V449, V450)) end end end end end, fun (V451) -> fun (V452) -> fun (V453) -> V452 end end end, fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> fun (V458) -> begin (V459 = (V456(V458))), begin (V460 = (V457(V458))), (V459(V460)) end end end end end end end}, fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> begin (V466 = (V463(V465))), ((V464(V466))(V465)) end end end end end end, fun (V467) -> fun (V468) -> fun (V469) -> begin (V470 = (V468(V469))), (V470(V469)) end end end end}, fun (V471) -> fun (V472) -> V472 end end}, V5))(V445))), {'Idris.Prelude.Types.Right', V473} end), case V474 of {'Idris.Prelude.Types.Left', E261} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V476) -> begin (V477 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V438)), V445))), case V477 of {'Idris.Prelude.Types.Left', E263} -> (fun (V478) -> {'Idris.Prelude.Types.Left', V478} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V479) -> begin (V480 = (((V440(V476))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V437, {'Idris.Core.TT.Bound'}, V479}))))(V445))), case V480 of {'Idris.Prelude.Types.Left', E265} -> (fun (V481) -> {'Idris.Prelude.Types.Left', V481} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V482) -> begin (V483 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V482))(V445))), case V483 of {'Idris.Prelude.Types.Left', E267} -> (fun (V484) -> {'Idris.Prelude.Types.Left', V484} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V485) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V437, V442, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V479}, {'Idris.TTImp.TTImp.Implicit', V437, 1}, V485}} end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V486) -> begin (V515 = begin (V514 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V489, V490, V491)) end end end end end, fun (V492) -> fun (V493) -> fun (V494) -> V493 end end end, fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> fun (V499) -> begin (V500 = (V497(V499))), begin (V501 = (V498(V499))), (V500(V501)) end end end end end end end}, fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> fun (V506) -> begin (V507 = (V504(V506))), ((V505(V507))(V506)) end end end end end end, fun (V508) -> fun (V509) -> fun (V510) -> begin (V511 = (V509(V510))), (V511(V510)) end end end end}, fun (V512) -> fun (V513) -> V513 end end}, V5))(V486))), {'Idris.Prelude.Types.Right', V514} end), case V515 of {'Idris.Prelude.Types.Left', E269} -> (fun (V516) -> {'Idris.Prelude.Types.Left', V516} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V517) -> begin (V518 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V438)), V486))), case V518 of {'Idris.Prelude.Types.Left', E271} -> (fun (V519) -> {'Idris.Prelude.Types.Left', V519} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V520) -> begin (V521 = (((V440(V517))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V437, {'Idris.Core.TT.Bound'}, V520}))))(V486))), case V521 of {'Idris.Prelude.Types.Left', E273} -> (fun (V522) -> {'Idris.Prelude.Types.Left', V522} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V523) -> begin (V524 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V523))(V486))), case V524 of {'Idris.Prelude.Types.Left', E275} -> (fun (V525) -> {'Idris.Prelude.Types.Left', V525} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V526) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V437, V442, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V520}, {'Idris.TTImp.TTImp.Implicit', V437, 1}, V526}} end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E277} -> (fun (V527) -> fun (V528) -> begin (V557 = begin (V556 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V529) -> fun (V530) -> fun (V531) -> fun (V532) -> fun (V533) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V531, V532, V533)) end end end end end, fun (V534) -> fun (V535) -> fun (V536) -> V535 end end end, fun (V537) -> fun (V538) -> fun (V539) -> fun (V540) -> fun (V541) -> begin (V542 = (V539(V541))), begin (V543 = (V540(V541))), (V542(V543)) end end end end end end end}, fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> begin (V549 = (V546(V548))), ((V547(V549))(V548)) end end end end end end, fun (V550) -> fun (V551) -> fun (V552) -> begin (V553 = (V551(V552))), (V553(V552)) end end end end}, fun (V554) -> fun (V555) -> V555 end end}, V5))(V528))), {'Idris.Prelude.Types.Right', V556} end), case V557 of {'Idris.Prelude.Types.Left', E278} -> (fun (V558) -> {'Idris.Prelude.Types.Left', V558} end(E278)); {'Idris.Prelude.Types.Right', E279} -> (fun (V559) -> begin (V560 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V438)), V528))), case V560 of {'Idris.Prelude.Types.Left', E280} -> (fun (V561) -> {'Idris.Prelude.Types.Left', V561} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V562) -> begin (V563 = (((V440(V559))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V437, {'Idris.Core.TT.Bound'}, V562}))))(V528))), case V563 of {'Idris.Prelude.Types.Left', E282} -> (fun (V564) -> {'Idris.Prelude.Types.Left', V564} end(E282)); {'Idris.Prelude.Types.Right', E283} -> (fun (V565) -> begin (V566 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V565))(V528))), case V566 of {'Idris.Prelude.Types.Left', E284} -> (fun (V567) -> {'Idris.Prelude.Types.Left', V567} end(E284)); {'Idris.Prelude.Types.Right', E285} -> (fun (V568) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V437, V442, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V437, 1}}, {'Idris.Prelude.Types.Just', V562}, {'Idris.TTImp.TTImp.Implicit', V437, 1}, V568}} end(E285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E277)); _ -> fun (V569) -> {'Idris.Prelude.Types.Right', V6} end end end(E257, E258, E259, E260)); _ -> fun (V570) -> {'Idris.Prelude.Types.Right', V6} end end end(E253, E254, E255, E256)); _ -> fun (V571) -> {'Idris.Prelude.Types.Right', V6} end end end end(E249, E250, E251, E252)); _ -> case V7 of {'Idris.Core.Value.NBind', E216, E217, E218, E219} -> (fun (V572, V573, V574, V575) -> case V574 of {'Idris.Core.TT.Pi', E220, E221, E222, E223} -> (fun (V576, V577, V578, V579) -> case V578 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V580) -> begin (V609 = begin (V608 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V581) -> fun (V582) -> fun (V583) -> fun (V584) -> fun (V585) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V583, V584, V585)) end end end end end, fun (V586) -> fun (V587) -> fun (V588) -> V587 end end end, fun (V589) -> fun (V590) -> fun (V591) -> fun (V592) -> fun (V593) -> begin (V594 = (V591(V593))), begin (V595 = (V592(V593))), (V594(V595)) end end end end end end end}, fun (V596) -> fun (V597) -> fun (V598) -> fun (V599) -> fun (V600) -> begin (V601 = (V598(V600))), ((V599(V601))(V600)) end end end end end end, fun (V602) -> fun (V603) -> fun (V604) -> begin (V605 = (V603(V604))), (V605(V604)) end end end end}, fun (V606) -> fun (V607) -> V607 end end}, V5))(V580))), {'Idris.Prelude.Types.Right', V608} end), case V609 of {'Idris.Prelude.Types.Left', E224} -> (fun (V610) -> {'Idris.Prelude.Types.Left', V610} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V611) -> begin (V612 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V573)), V580))), case V612 of {'Idris.Prelude.Types.Left', E226} -> (fun (V613) -> {'Idris.Prelude.Types.Left', V613} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V614) -> begin (V615 = (((V575(V611))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V572, {'Idris.Core.TT.Bound'}, V614}))))(V580))), case V615 of {'Idris.Prelude.Types.Left', E228} -> (fun (V616) -> {'Idris.Prelude.Types.Left', V616} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V617) -> begin (V618 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V617))(V580))), case V618 of {'Idris.Prelude.Types.Left', E230} -> (fun (V619) -> {'Idris.Prelude.Types.Left', V619} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V620) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V572, V577, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V614}, {'Idris.TTImp.TTImp.Implicit', V572, 1}, V620}} end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V621) -> begin (V650 = begin (V649 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V624, V625, V626)) end end end end end, fun (V627) -> fun (V628) -> fun (V629) -> V628 end end end, fun (V630) -> fun (V631) -> fun (V632) -> fun (V633) -> fun (V634) -> begin (V635 = (V632(V634))), begin (V636 = (V633(V634))), (V635(V636)) end end end end end end end}, fun (V637) -> fun (V638) -> fun (V639) -> fun (V640) -> fun (V641) -> begin (V642 = (V639(V641))), ((V640(V642))(V641)) end end end end end end, fun (V643) -> fun (V644) -> fun (V645) -> begin (V646 = (V644(V645))), (V646(V645)) end end end end}, fun (V647) -> fun (V648) -> V648 end end}, V5))(V621))), {'Idris.Prelude.Types.Right', V649} end), case V650 of {'Idris.Prelude.Types.Left', E232} -> (fun (V651) -> {'Idris.Prelude.Types.Left', V651} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V652) -> begin (V653 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V573)), V621))), case V653 of {'Idris.Prelude.Types.Left', E234} -> (fun (V654) -> {'Idris.Prelude.Types.Left', V654} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V655) -> begin (V656 = (((V575(V652))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V572, {'Idris.Core.TT.Bound'}, V655}))))(V621))), case V656 of {'Idris.Prelude.Types.Left', E236} -> (fun (V657) -> {'Idris.Prelude.Types.Left', V657} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V658) -> begin (V659 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V658))(V621))), case V659 of {'Idris.Prelude.Types.Left', E238} -> (fun (V660) -> {'Idris.Prelude.Types.Left', V660} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V661) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V572, V577, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V655}, {'Idris.TTImp.TTImp.Implicit', V572, 1}, V661}} end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E240} -> (fun (V662) -> fun (V663) -> begin (V692 = begin (V691 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V664) -> fun (V665) -> fun (V666) -> fun (V667) -> fun (V668) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V666, V667, V668)) end end end end end, fun (V669) -> fun (V670) -> fun (V671) -> V670 end end end, fun (V672) -> fun (V673) -> fun (V674) -> fun (V675) -> fun (V676) -> begin (V677 = (V674(V676))), begin (V678 = (V675(V676))), (V677(V678)) end end end end end end end}, fun (V679) -> fun (V680) -> fun (V681) -> fun (V682) -> fun (V683) -> begin (V684 = (V681(V683))), ((V682(V684))(V683)) end end end end end end, fun (V685) -> fun (V686) -> fun (V687) -> begin (V688 = (V686(V687))), (V688(V687)) end end end end}, fun (V689) -> fun (V690) -> V690 end end}, V5))(V663))), {'Idris.Prelude.Types.Right', V691} end), case V692 of {'Idris.Prelude.Types.Left', E241} -> (fun (V693) -> {'Idris.Prelude.Types.Left', V693} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V694) -> begin (V695 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V573)), V663))), case V695 of {'Idris.Prelude.Types.Left', E243} -> (fun (V696) -> {'Idris.Prelude.Types.Left', V696} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V697) -> begin (V698 = (((V575(V694))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V572, {'Idris.Core.TT.Bound'}, V697}))))(V663))), case V698 of {'Idris.Prelude.Types.Left', E245} -> (fun (V699) -> {'Idris.Prelude.Types.Left', V699} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V700) -> begin (V701 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V700))(V663))), case V701 of {'Idris.Prelude.Types.Left', E247} -> (fun (V702) -> {'Idris.Prelude.Types.Left', V702} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V703) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V572, V577, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V572, 1}}, {'Idris.Prelude.Types.Just', V697}, {'Idris.TTImp.TTImp.Implicit', V572, 1}, V703}} end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E240)); _ -> fun (V704) -> {'Idris.Prelude.Types.Right', V6} end end end(E220, E221, E222, E223)); _ -> fun (V705) -> {'Idris.Prelude.Types.Right', V6} end end end(E216, E217, E218, E219)); _ -> fun (V706) -> {'Idris.Prelude.Types.Right', V6} end end end end(E212, E213, E214, E215)); _ -> case V7 of {'Idris.Core.Value.NBind', E179, E180, E181, E182} -> (fun (V707, V708, V709, V710) -> case V709 of {'Idris.Core.TT.Pi', E183, E184, E185, E186} -> (fun (V711, V712, V713, V714) -> case V713 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V715) -> begin (V744 = begin (V743 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V716) -> fun (V717) -> fun (V718) -> fun (V719) -> fun (V720) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V718, V719, V720)) end end end end end, fun (V721) -> fun (V722) -> fun (V723) -> V722 end end end, fun (V724) -> fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> begin (V729 = (V726(V728))), begin (V730 = (V727(V728))), (V729(V730)) end end end end end end end}, fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> begin (V736 = (V733(V735))), ((V734(V736))(V735)) end end end end end end, fun (V737) -> fun (V738) -> fun (V739) -> begin (V740 = (V738(V739))), (V740(V739)) end end end end}, fun (V741) -> fun (V742) -> V742 end end}, V5))(V715))), {'Idris.Prelude.Types.Right', V743} end), case V744 of {'Idris.Prelude.Types.Left', E187} -> (fun (V745) -> {'Idris.Prelude.Types.Left', V745} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V746) -> begin (V747 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V708)), V715))), case V747 of {'Idris.Prelude.Types.Left', E189} -> (fun (V748) -> {'Idris.Prelude.Types.Left', V748} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V749) -> begin (V750 = (((V710(V746))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V707, {'Idris.Core.TT.Bound'}, V749}))))(V715))), case V750 of {'Idris.Prelude.Types.Left', E191} -> (fun (V751) -> {'Idris.Prelude.Types.Left', V751} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V752) -> begin (V753 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V752))(V715))), case V753 of {'Idris.Prelude.Types.Left', E193} -> (fun (V754) -> {'Idris.Prelude.Types.Left', V754} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V755) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V707, V712, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V749}, {'Idris.TTImp.TTImp.Implicit', V707, 1}, V755}} end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V756) -> begin (V785 = begin (V784 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V757) -> fun (V758) -> fun (V759) -> fun (V760) -> fun (V761) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V759, V760, V761)) end end end end end, fun (V762) -> fun (V763) -> fun (V764) -> V763 end end end, fun (V765) -> fun (V766) -> fun (V767) -> fun (V768) -> fun (V769) -> begin (V770 = (V767(V769))), begin (V771 = (V768(V769))), (V770(V771)) end end end end end end end}, fun (V772) -> fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> begin (V777 = (V774(V776))), ((V775(V777))(V776)) end end end end end end, fun (V778) -> fun (V779) -> fun (V780) -> begin (V781 = (V779(V780))), (V781(V780)) end end end end}, fun (V782) -> fun (V783) -> V783 end end}, V5))(V756))), {'Idris.Prelude.Types.Right', V784} end), case V785 of {'Idris.Prelude.Types.Left', E195} -> (fun (V786) -> {'Idris.Prelude.Types.Left', V786} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V787) -> begin (V788 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V708)), V756))), case V788 of {'Idris.Prelude.Types.Left', E197} -> (fun (V789) -> {'Idris.Prelude.Types.Left', V789} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V790) -> begin (V791 = (((V710(V787))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V707, {'Idris.Core.TT.Bound'}, V790}))))(V756))), case V791 of {'Idris.Prelude.Types.Left', E199} -> (fun (V792) -> {'Idris.Prelude.Types.Left', V792} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V793) -> begin (V794 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V793))(V756))), case V794 of {'Idris.Prelude.Types.Left', E201} -> (fun (V795) -> {'Idris.Prelude.Types.Left', V795} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V796) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V707, V712, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V790}, {'Idris.TTImp.TTImp.Implicit', V707, 1}, V796}} end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E203} -> (fun (V797) -> fun (V798) -> begin (V827 = begin (V826 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V799) -> fun (V800) -> fun (V801) -> fun (V802) -> fun (V803) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V801, V802, V803)) end end end end end, fun (V804) -> fun (V805) -> fun (V806) -> V805 end end end, fun (V807) -> fun (V808) -> fun (V809) -> fun (V810) -> fun (V811) -> begin (V812 = (V809(V811))), begin (V813 = (V810(V811))), (V812(V813)) end end end end end end end}, fun (V814) -> fun (V815) -> fun (V816) -> fun (V817) -> fun (V818) -> begin (V819 = (V816(V818))), ((V817(V819))(V818)) end end end end end end, fun (V820) -> fun (V821) -> fun (V822) -> begin (V823 = (V821(V822))), (V823(V822)) end end end end}, fun (V824) -> fun (V825) -> V825 end end}, V5))(V798))), {'Idris.Prelude.Types.Right', V826} end), case V827 of {'Idris.Prelude.Types.Left', E204} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V829) -> begin (V830 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V708)), V798))), case V830 of {'Idris.Prelude.Types.Left', E206} -> (fun (V831) -> {'Idris.Prelude.Types.Left', V831} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V832) -> begin (V833 = (((V710(V829))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V707, {'Idris.Core.TT.Bound'}, V832}))))(V798))), case V833 of {'Idris.Prelude.Types.Left', E208} -> (fun (V834) -> {'Idris.Prelude.Types.Left', V834} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V835) -> begin (V836 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V835))(V798))), case V836 of {'Idris.Prelude.Types.Left', E210} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V838) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V707, V712, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V707, 1}}, {'Idris.Prelude.Types.Just', V832}, {'Idris.TTImp.TTImp.Implicit', V707, 1}, V838}} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E203)); _ -> fun (V839) -> {'Idris.Prelude.Types.Right', V6} end end end(E183, E184, E185, E186)); _ -> fun (V840) -> {'Idris.Prelude.Types.Right', V6} end end end(E179, E180, E181, E182)); _ -> fun (V841) -> {'Idris.Prelude.Types.Right', V6} end end end end()); _ -> case V7 of {'Idris.Core.Value.NBind', E39, E40, E41, E42} -> (fun (V842, V843, V844, V845) -> case V844 of {'Idris.Core.TT.Pi', E43, E44, E45, E46} -> (fun (V846, V847, V848, V849) -> case V848 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V850) -> begin (V879 = begin (V878 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V851) -> fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V853, V854, V855)) end end end end end, fun (V856) -> fun (V857) -> fun (V858) -> V857 end end end, fun (V859) -> fun (V860) -> fun (V861) -> fun (V862) -> fun (V863) -> begin (V864 = (V861(V863))), begin (V865 = (V862(V863))), (V864(V865)) end end end end end end end}, fun (V866) -> fun (V867) -> fun (V868) -> fun (V869) -> fun (V870) -> begin (V871 = (V868(V870))), ((V869(V871))(V870)) end end end end end end, fun (V872) -> fun (V873) -> fun (V874) -> begin (V875 = (V873(V874))), (V875(V874)) end end end end}, fun (V876) -> fun (V877) -> V877 end end}, V5))(V850))), {'Idris.Prelude.Types.Right', V878} end), case V879 of {'Idris.Prelude.Types.Left', E47} -> (fun (V880) -> {'Idris.Prelude.Types.Left', V880} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V881) -> begin (V882 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V843)), V850))), case V882 of {'Idris.Prelude.Types.Left', E49} -> (fun (V883) -> {'Idris.Prelude.Types.Left', V883} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V884) -> begin (V885 = (((V845(V881))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V842, {'Idris.Core.TT.Bound'}, V884}))))(V850))), case V885 of {'Idris.Prelude.Types.Left', E51} -> (fun (V886) -> {'Idris.Prelude.Types.Left', V886} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V887) -> begin (V888 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V887))(V850))), case V888 of {'Idris.Prelude.Types.Left', E53} -> (fun (V889) -> {'Idris.Prelude.Types.Left', V889} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V890) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V842, V847, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V884}, {'Idris.TTImp.TTImp.Implicit', V842, 1}, V890}} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V891) -> begin (V920 = begin (V919 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V892) -> fun (V893) -> fun (V894) -> fun (V895) -> fun (V896) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V894, V895, V896)) end end end end end, fun (V897) -> fun (V898) -> fun (V899) -> V898 end end end, fun (V900) -> fun (V901) -> fun (V902) -> fun (V903) -> fun (V904) -> begin (V905 = (V902(V904))), begin (V906 = (V903(V904))), (V905(V906)) end end end end end end end}, fun (V907) -> fun (V908) -> fun (V909) -> fun (V910) -> fun (V911) -> begin (V912 = (V909(V911))), ((V910(V912))(V911)) end end end end end end, fun (V913) -> fun (V914) -> fun (V915) -> begin (V916 = (V914(V915))), (V916(V915)) end end end end}, fun (V917) -> fun (V918) -> V918 end end}, V5))(V891))), {'Idris.Prelude.Types.Right', V919} end), case V920 of {'Idris.Prelude.Types.Left', E55} -> (fun (V921) -> {'Idris.Prelude.Types.Left', V921} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V922) -> begin (V923 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V843)), V891))), case V923 of {'Idris.Prelude.Types.Left', E57} -> (fun (V924) -> {'Idris.Prelude.Types.Left', V924} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V925) -> begin (V926 = (((V845(V922))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V842, {'Idris.Core.TT.Bound'}, V925}))))(V891))), case V926 of {'Idris.Prelude.Types.Left', E59} -> (fun (V927) -> {'Idris.Prelude.Types.Left', V927} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V928) -> begin (V929 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V928))(V891))), case V929 of {'Idris.Prelude.Types.Left', E61} -> (fun (V930) -> {'Idris.Prelude.Types.Left', V930} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V931) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V842, V847, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V925}, {'Idris.TTImp.TTImp.Implicit', V842, 1}, V931}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E63} -> (fun (V932) -> fun (V933) -> begin (V962 = begin (V961 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V934) -> fun (V935) -> fun (V936) -> fun (V937) -> fun (V938) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V936, V937, V938)) end end end end end, fun (V939) -> fun (V940) -> fun (V941) -> V940 end end end, fun (V942) -> fun (V943) -> fun (V944) -> fun (V945) -> fun (V946) -> begin (V947 = (V944(V946))), begin (V948 = (V945(V946))), (V947(V948)) end end end end end end end}, fun (V949) -> fun (V950) -> fun (V951) -> fun (V952) -> fun (V953) -> begin (V954 = (V951(V953))), ((V952(V954))(V953)) end end end end end end, fun (V955) -> fun (V956) -> fun (V957) -> begin (V958 = (V956(V957))), (V958(V957)) end end end end}, fun (V959) -> fun (V960) -> V960 end end}, V5))(V933))), {'Idris.Prelude.Types.Right', V961} end), case V962 of {'Idris.Prelude.Types.Left', E64} -> (fun (V963) -> {'Idris.Prelude.Types.Left', V963} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V964) -> begin (V965 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V843)), V933))), case V965 of {'Idris.Prelude.Types.Left', E66} -> (fun (V966) -> {'Idris.Prelude.Types.Left', V966} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V967) -> begin (V968 = (((V845(V964))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V842, {'Idris.Core.TT.Bound'}, V967}))))(V933))), case V968 of {'Idris.Prelude.Types.Left', E68} -> (fun (V969) -> {'Idris.Prelude.Types.Left', V969} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V970) -> begin (V971 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V970))(V933))), case V971 of {'Idris.Prelude.Types.Left', E70} -> (fun (V972) -> {'Idris.Prelude.Types.Left', V972} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V973) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V842, V847, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V842, 1}}, {'Idris.Prelude.Types.Just', V967}, {'Idris.TTImp.TTImp.Implicit', V842, 1}, V973}} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63)); _ -> fun (V974) -> {'Idris.Prelude.Types.Right', V6} end end end(E43, E44, E45, E46)); _ -> fun (V975) -> {'Idris.Prelude.Types.Right', V6} end end end(E39, E40, E41, E42)); _ -> fun (V976) -> {'Idris.Prelude.Types.Right', V6} end end end end(E33, E34, E35, E36, E37, E38)); _ -> case V7 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V977, V978, V979, V980) -> case V979 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V981, V982, V983, V984) -> case V983 of {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V985) -> begin (V1014 = begin (V1013 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V986) -> fun (V987) -> fun (V988) -> fun (V989) -> fun (V990) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V988, V989, V990)) end end end end end, fun (V991) -> fun (V992) -> fun (V993) -> V992 end end end, fun (V994) -> fun (V995) -> fun (V996) -> fun (V997) -> fun (V998) -> begin (V999 = (V996(V998))), begin (V1000 = (V997(V998))), (V999(V1000)) end end end end end end end}, fun (V1001) -> fun (V1002) -> fun (V1003) -> fun (V1004) -> fun (V1005) -> begin (V1006 = (V1003(V1005))), ((V1004(V1006))(V1005)) end end end end end end, fun (V1007) -> fun (V1008) -> fun (V1009) -> begin (V1010 = (V1008(V1009))), (V1010(V1009)) end end end end}, fun (V1011) -> fun (V1012) -> V1012 end end}, V5))(V985))), {'Idris.Prelude.Types.Right', V1013} end), case V1014 of {'Idris.Prelude.Types.Left', E8} -> (fun (V1015) -> {'Idris.Prelude.Types.Left', V1015} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V1016) -> begin (V1017 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V978)), V985))), case V1017 of {'Idris.Prelude.Types.Left', E10} -> (fun (V1018) -> {'Idris.Prelude.Types.Left', V1018} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V1019) -> begin (V1020 = (((V980(V1016))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V977, {'Idris.Core.TT.Bound'}, V1019}))))(V985))), case V1020 of {'Idris.Prelude.Types.Left', E12} -> (fun (V1021) -> {'Idris.Prelude.Types.Left', V1021} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V1022) -> begin (V1023 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V1022))(V985))), case V1023 of {'Idris.Prelude.Types.Left', E14} -> (fun (V1024) -> {'Idris.Prelude.Types.Left', V1024} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V1025) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V977, V982, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V1019}, {'Idris.TTImp.TTImp.Implicit', V977, 1}, V1025}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V1026) -> begin (V1055 = begin (V1054 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V1027) -> fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V1029, V1030, V1031)) end end end end end, fun (V1032) -> fun (V1033) -> fun (V1034) -> V1033 end end end, fun (V1035) -> fun (V1036) -> fun (V1037) -> fun (V1038) -> fun (V1039) -> begin (V1040 = (V1037(V1039))), begin (V1041 = (V1038(V1039))), (V1040(V1041)) end end end end end end end}, fun (V1042) -> fun (V1043) -> fun (V1044) -> fun (V1045) -> fun (V1046) -> begin (V1047 = (V1044(V1046))), ((V1045(V1047))(V1046)) end end end end end end, fun (V1048) -> fun (V1049) -> fun (V1050) -> begin (V1051 = (V1049(V1050))), (V1051(V1050)) end end end end}, fun (V1052) -> fun (V1053) -> V1053 end end}, V5))(V1026))), {'Idris.Prelude.Types.Right', V1054} end), case V1055 of {'Idris.Prelude.Types.Left', E16} -> (fun (V1056) -> {'Idris.Prelude.Types.Left', V1056} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V1057) -> begin (V1058 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V978)), V1026))), case V1058 of {'Idris.Prelude.Types.Left', E18} -> (fun (V1059) -> {'Idris.Prelude.Types.Left', V1059} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V1060) -> begin (V1061 = (((V980(V1057))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V977, {'Idris.Core.TT.Bound'}, V1060}))))(V1026))), case V1061 of {'Idris.Prelude.Types.Left', E20} -> (fun (V1062) -> {'Idris.Prelude.Types.Left', V1062} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V1063) -> begin (V1064 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V1063))(V1026))), case V1064 of {'Idris.Prelude.Types.Left', E22} -> (fun (V1065) -> {'Idris.Prelude.Types.Left', V1065} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V1066) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V977, V982, {'Idris.Core.TT.AutoImplicit'}, {'Idris.Prelude.Types.Just', V1060}, {'Idris.TTImp.TTImp.Implicit', V977, 1}, V1066}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.TT.DefImplicit', E24} -> (fun (V1067) -> fun (V1068) -> begin (V1097 = begin (V1096 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V1069) -> fun (V1070) -> fun (V1071) -> fun (V1072) -> fun (V1073) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V1071, V1072, V1073)) end end end end end, fun (V1074) -> fun (V1075) -> fun (V1076) -> V1075 end end end, fun (V1077) -> fun (V1078) -> fun (V1079) -> fun (V1080) -> fun (V1081) -> begin (V1082 = (V1079(V1081))), begin (V1083 = (V1080(V1081))), (V1082(V1083)) end end end end end end end}, fun (V1084) -> fun (V1085) -> fun (V1086) -> fun (V1087) -> fun (V1088) -> begin (V1089 = (V1086(V1088))), ((V1087(V1089))(V1088)) end end end end end end, fun (V1090) -> fun (V1091) -> fun (V1092) -> begin (V1093 = (V1091(V1092))), (V1093(V1092)) end end end end}, fun (V1094) -> fun (V1095) -> V1095 end end}, V5))(V1068))), {'Idris.Prelude.Types.Right', V1096} end), case V1097 of {'Idris.Prelude.Types.Left', E25} -> (fun (V1098) -> {'Idris.Prelude.Types.Left', V1098} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V1099) -> begin (V1100 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V5, V4, ('Idris.Idris2.Core.Name':'un--nameRoot'(V978)), V1068))), case V1100 of {'Idris.Prelude.Types.Left', E27} -> (fun (V1101) -> {'Idris.Prelude.Types.Left', V1101} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V1102) -> begin (V1103 = (((V980(V1099))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--defaultOpts'()), V3, {'Idris.Core.TT.Ref', V977, {'Idris.Core.TT.Bound'}, V1102}))))(V1068))), case V1103 of {'Idris.Prelude.Types.Left', E29} -> (fun (V1104) -> {'Idris.Prelude.Types.Left', V1104} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V1105) -> begin (V1106 = (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V1105))(V1068))), case V1106 of {'Idris.Prelude.Types.Left', E31} -> (fun (V1107) -> {'Idris.Prelude.Types.Left', V1107} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V1108) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V977, V982, {'Idris.Core.TT.DefImplicit', {'Idris.TTImp.TTImp.Implicit', V977, 1}}, {'Idris.Prelude.Types.Just', V1102}, {'Idris.TTImp.TTImp.Implicit', V977, 1}, V1108}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24)); _ -> fun (V1109) -> {'Idris.Prelude.Types.Right', V6} end end end(E4, E5, E6, E7)); _ -> fun (V1110) -> {'Idris.Prelude.Types.Right', V6} end end end(E0, E1, E2, E3)); _ -> fun (V1111) -> {'Idris.Prelude.Types.Right', V6} end end end.
'nested--14021-10090--in--un--bindLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E0} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V11) -> begin (V12 = (('nested--14021-10088--in--un--bindLamTm'('erased', V1, V2, V3, V4, V5, 'erased', V6, V11))(V8))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> case V14 of {'Idris.Prelude.Types.Just', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Right', V15} end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getNF'('erased', V5, V7))(V8))), case V16 of {'Idris.Prelude.Types.Left', E5} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V18) -> (('nested--14021-10089--in--un--bindLamNF'('erased', V1, V2, V3, V4, V5, V6, V18))(V8)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--insertImpLam'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> fun (V7) -> ('nested--14021-10090--in--un--bindLam'('erased', V6, V4, V3, V2, V1, V4, V6, V7)) end end(E0)); _ -> fun (V8) -> {'Idris.Prelude.Types.Right', V4} end end.
'un--checkTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V11, V12) -> ('Idris.Idris2.TTImp.Elab.App':'un--checkApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, {'Idris.TTImp.TTImp.IVar', V11, V12}, [], [], V10)) end(E0, E1)); {'Idris.TTImp.TTImp.IPi', E2, E3, E4, E5, E6, E7} -> (fun (V13, V14, V15, V16, V17, V18) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V19) -> begin (V21 = case V15 of {'Idris.Core.TT.Explicit'} -> (fun () -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V1, V3, <<"arg"/utf8>>, V19)) end()); {'Idris.Core.TT.Implicit'} -> (fun () -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V1, V3, <<"impArg"/utf8>>, V19)) end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V1, V3, <<"conArg"/utf8>>, V19)) end()); {'Idris.Core.TT.DefImplicit', E8} -> (fun (V20) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V1, V3, <<"defArg"/utf8>>, V19)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.TTImp.Elab.Binders':'un--checkPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V14, V15, V23, V17, V18, V10))(V19)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Prelude.Types.Just', E11} -> (fun (V24) -> case V24 of {'Idris.Core.Name.UN', E12} -> (fun (V25) -> case V25 of <<"_"/utf8>> -> ('un--checkTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, {'Idris.TTImp.TTImp.IPi', V13, V14, V15, {'Idris.Prelude.Types.Nothing'}, V17, V18}, V10)); _ -> ('Idris.Idris2.TTImp.Elab.Binders':'un--checkPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V14, V15, V24, V17, V18, V10)) end end(E12)); _ -> ('Idris.Idris2.TTImp.Elab.Binders':'un--checkPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V13, V14, V15, V24, V17, V18, V10)) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4, E5, E6, E7)); {'Idris.TTImp.TTImp.ILam', E13, E14, E15, E16, E17, E18} -> (fun (V26, V27, V28, V29, V30, V31) -> case V29 of {'Idris.Prelude.Types.Just', E19} -> (fun (V32) -> ('Idris.Idris2.TTImp.Elab.Binders':'un--checkLambda'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V26, V27, V28, V32, V30, V31, V10)) end(E19)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V33) -> begin (V34 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V1, V3, <<"_"/utf8>>, V33))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> (('Idris.Idris2.TTImp.Elab.Binders':'un--checkLambda'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V26, V27, V28, V36, V30, V31, V10))(V33)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13, E14, E15, E16, E17, E18)); {'Idris.TTImp.TTImp.ILet', E22, E23, E24, E25, E26, E27} -> (fun (V37, V38, V39, V40, V41, V42) -> ('Idris.Idris2.TTImp.Elab.Binders':'un--checkLet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V37, V38, V39, V40, V41, V42, V10)) end(E22, E23, E24, E25, E26, E27)); {'Idris.TTImp.TTImp.ICase', E28, E29, E30, E31} -> (fun (V43, V44, V45, V46) -> fun (V47) -> ('Idris.Idris2.TTImp.Elab.Case':'un--checkCase'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V43, V44, V45, V46, V10, V47)) end end(E28, E29, E30, E31)); {'Idris.TTImp.TTImp.ILocal', E32, E33, E34} -> (fun (V48, V49, V50) -> fun (V51) -> ('Idris.Idris2.TTImp.Elab.Local':'un--checkLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V48, V49, V50, V10, V51)) end end(E32, E33, E34)); {'Idris.TTImp.TTImp.ICaseLocal', E35, E36, E37, E38, E39} -> (fun (V52, V53, V54, V55, V56) -> fun (V57) -> ('Idris.Idris2.TTImp.Elab.Local':'un--checkCaseLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V52, V53, V54, V55, V56, V10, V57)) end end(E35, E36, E37, E38, E39)); {'Idris.TTImp.TTImp.IUpdate', E40, E41, E42} -> (fun (V58, V59, V60) -> fun (V61) -> ('Idris.Idris2.TTImp.Elab.Record':'un--checkUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V58, V59, V60, V10, V61)) end end(E40, E41, E42)); {'Idris.TTImp.TTImp.IApp', E43, E44, E45} -> (fun (V62, V63, V64) -> ('Idris.Idris2.TTImp.Elab.App':'un--checkApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V62, V63, [V64 | []], [], V10)) end(E43, E44, E45)); {'Idris.TTImp.TTImp.IWithApp', E46, E47, E48} -> (fun (V65, V66, V67) -> fun (V68) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V65, <<"with application not implemented yet"/utf8>>}, V68)) end end(E46, E47, E48)); {'Idris.TTImp.TTImp.IImplicitApp', E49, E50, E51, E52} -> (fun (V69, V70, V71, V72) -> ('Idris.Idris2.TTImp.Elab.App':'un--checkApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V69, V70, [], [{'Idris.Builtin.MkPair', V71, V72} | []], V10)) end(E49, E50, E51, E52)); {'Idris.TTImp.TTImp.ISearch', E53, E54} -> (fun (V73, V74) -> case V10 of {'Idris.Prelude.Types.Just', E55} -> (fun (V75) -> fun (V76) -> begin (V105 = begin (V104 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V79, V80, V81)) end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> V83 end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V87(V89))), begin (V91 = (V88(V89))), (V90(V91)) end end end end end end end}, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V94(V96))), ((V95(V97))(V96)) end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> begin (V101 = (V99(V100))), (V101(V100)) end end end end}, fun (V102) -> fun (V103) -> V103 end end}, V4))(V76))), {'Idris.Prelude.Types.Right', V104} end), case V105 of {'Idris.Prelude.Types.Left', E56} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V107) -> begin (V108 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"search"/utf8>>, V76))), case V108 of {'Idris.Prelude.Types.Left', E58} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V110) -> begin (V111 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V75))(V76))), case V111 of {'Idris.Prelude.Types.Left', E60} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V113) -> begin (V127 = ('Idris.Idris2.TTImp.Elab.Check':'un--searchVar'(V0, V1, V3, V73, V5, V74, {'Idris.Core.Name.Resolved', case V107 of {'Idris.TTImp.Elab.Check.MkEState', E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> (fun (V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126) -> V115 end(E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V8, V110, V113, V76))), case V127 of {'Idris.Prelude.Types.Left', E75} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V129) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V129, V75}} end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V130) -> begin (V159 = begin (V158 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V133, V134, V135)) end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> V137 end end end, fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> begin (V144 = (V141(V143))), begin (V145 = (V142(V143))), (V144(V145)) end end end end end end end}, fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> begin (V151 = (V148(V150))), ((V149(V151))(V150)) end end end end end end, fun (V152) -> fun (V153) -> fun (V154) -> begin (V155 = (V153(V154))), (V155(V154)) end end end end}, fun (V156) -> fun (V157) -> V157 end end}, V4))(V130))), {'Idris.Prelude.Types.Right', V158} end), case V159 of {'Idris.Prelude.Types.Left', E77} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V161) -> begin (V162 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"searchTy"/utf8>>, V130))), case V162 of {'Idris.Prelude.Types.Left', E79} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V164) -> begin (V169 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V73, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V165) -> fun (V166) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V165, V166)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V167) -> fun (V168) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V167, V168)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), V8, V164, {'Idris.Core.TT.TType', V73}, V130))), case V169 of {'Idris.Prelude.Types.Left', E81} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V171) -> begin (V172 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"search"/utf8>>, V130))), case V172 of {'Idris.Prelude.Types.Left', E83} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V174) -> begin (V188 = ('Idris.Idris2.TTImp.Elab.Check':'un--searchVar'(V0, V1, V3, V73, V5, V74, {'Idris.Core.Name.Resolved', case V161 of {'Idris.TTImp.Elab.Check.MkEState', E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97} -> (fun (V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187) -> V176 end(E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, V8, V174, V171, V130))), case V188 of {'Idris.Prelude.Types.Left', E98} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V190) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V190, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V171))}} end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E53, E54)); {'Idris.TTImp.TTImp.IAlternative', E100, E101, E102} -> (fun (V191, V192, V193) -> ('Idris.Idris2.TTImp.Elab.Ambiguity':'un--checkAlternative'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V191, V192, V193, V10)) end(E100, E101, E102)); {'Idris.TTImp.TTImp.IRewrite', E103, E104, E105} -> (fun (V194, V195, V196) -> ('Idris.Idris2.TTImp.Elab.Rewrite':'un--checkRewrite'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V194, V195, V196, V10)) end(E103, E104, E105)); {'Idris.TTImp.TTImp.ICoerced', E106, E107} -> (fun (V197, V198) -> ('un--checkTerm'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V198, V10)) end(E106, E107)); {'Idris.TTImp.TTImp.IBindHere', E108, E109, E110} -> (fun (V199, V200, V201) -> fun (V202) -> ('Idris.Idris2.TTImp.Elab.ImplicitBind':'un--checkBindHere'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V199, V200, V201, V10, V202)) end end(E108, E109, E110)); {'Idris.TTImp.TTImp.IBindVar', E111, E112} -> (fun (V203, V204) -> ('Idris.Idris2.TTImp.Elab.ImplicitBind':'un--checkBindVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V203, V204, V10)) end(E111, E112)); {'Idris.TTImp.TTImp.IAs', E113, E114, E115, E116} -> (fun (V205, V206, V207, V208) -> ('Idris.Idris2.TTImp.Elab.As':'un--checkAs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V205, V206, V207, V208, V10)) end(E113, E114, E115, E116)); {'Idris.TTImp.TTImp.IMustUnify', E117, E118, E119} -> (fun (V209, V210, V211) -> ('Idris.Idris2.TTImp.Elab.Dot':'un--checkDot'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V209, V210, V211, V10)) end(E117, E118, E119)); {'Idris.TTImp.TTImp.IDelayed', E120, E121, E122} -> (fun (V212, V213, V214) -> fun (V215) -> ('Idris.Idris2.TTImp.Elab.Lazy':'un--checkDelayed'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V212, V213, V214, V10, V215)) end end(E120, E121, E122)); {'Idris.TTImp.TTImp.IDelay', E123, E124} -> (fun (V216, V217) -> fun (V218) -> ('Idris.Idris2.TTImp.Elab.Lazy':'un--checkDelay'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V216, V217, V10, V218)) end end(E123, E124)); {'Idris.TTImp.TTImp.IForce', E125, E126} -> (fun (V219, V220) -> fun (V221) -> ('Idris.Idris2.TTImp.Elab.Lazy':'un--checkForce'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V219, V220, V10, V221)) end end(E125, E126)); {'Idris.TTImp.TTImp.IQuote', E127, E128} -> (fun (V222, V223) -> fun (V224) -> ('Idris.Idris2.TTImp.Elab.Quote':'un--checkQuote'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V222, V223, V10, V224)) end end(E127, E128)); {'Idris.TTImp.TTImp.IQuoteName', E129, E130} -> (fun (V225, V226) -> fun (V227) -> ('Idris.Idris2.TTImp.Elab.Quote':'un--checkQuoteName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V225, V226, V10, V227)) end end(E129, E130)); {'Idris.TTImp.TTImp.IQuoteDecl', E131, E132} -> (fun (V228, V229) -> fun (V230) -> ('Idris.Idris2.TTImp.Elab.Quote':'un--checkQuoteDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V228, V229, V10, V230)) end end(E131, E132)); {'Idris.TTImp.TTImp.IUnquote', E133, E134} -> (fun (V231, V232) -> fun (V233) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V231, <<"Can\x{27}t escape outside a quoted term"/utf8>>}, V233)) end end(E133, E134)); {'Idris.TTImp.TTImp.IRunElab', E135, E136} -> (fun (V234, V235) -> fun (V236) -> ('Idris.Idris2.TTImp.Elab.RunElab':'un--checkRunElab'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V234, V235, V10, V236)) end end(E135, E136)); {'Idris.TTImp.TTImp.IPrimVal', E137, E138} -> (fun (V237, V238) -> ('case--checkTerm-11448'(V1, V238, V237, V0, V10, V8, V7, V6, V5, V4, V3, V2, ('Idris.Idris2.TTImp.Elab.Prim':'un--checkPrim'('erased', V237, V238)))) end(E137, E138)); {'Idris.TTImp.TTImp.IType', E139} -> (fun (V239) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V239, {'Idris.Core.TT.TType', V239}, ('Idris.Idris2.Core.Normalise':'un--gType'('erased', V239)), V10)) end(E139)); {'Idris.TTImp.TTImp.IHole', E140, E141} -> (fun (V240, V241) -> ('Idris.Idris2.TTImp.Elab.Hole':'un--checkHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V240, V241, V10)) end(E140, E141)); {'Idris.TTImp.TTImp.IUnifyLog', E142, E143, E144} -> (fun (V242, V243, V244) -> fun (V245) -> ('Idris.Idris2.Core.Context':'un--withLogLevel'('erased', V1, V243, ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V244, V10)), V245)) end end(E142, E143, E144)); {'Idris.TTImp.TTImp.Implicit', E145, E146} -> (fun (V246, V247) -> case V10 of {'Idris.Prelude.Types.Just', E147} -> (fun (V248) -> fun (V249) -> begin (V250 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"_"/utf8>>, V249))), case V250 of {'Idris.Prelude.Types.Left', E148} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V252) -> begin (V253 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V248))(V249))), case V253 of {'Idris.Prelude.Types.Left', E150} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V255) -> begin (V256 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V246, V5, V8, V252, V255, V249))), case V256 of {'Idris.Prelude.Types.Left', E152} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V258) -> begin (V327 = case ('Idris.Idris2.Prelude.Basics':'un--&&'(V247, fun () -> case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E158, E159, E160, E161, E162, E163} -> (fun (V259, V260, V261, V262, V263, V264) -> V262 end(E158, E159, E160, E161, E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) of 0 -> begin (V293 = begin (V292 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V267, V268, V269)) end end end end end, fun (V270) -> fun (V271) -> fun (V272) -> V271 end end end, fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> begin (V278 = (V275(V277))), begin (V279 = (V276(V277))), (V278(V279)) end end end end end end end}, fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> begin (V285 = (V282(V284))), ((V283(V285))(V284)) end end end end end end, fun (V286) -> fun (V287) -> fun (V288) -> begin (V289 = (V287(V288))), (V289(V288)) end end end end}, fun (V290) -> fun (V291) -> V291 end end}, V4))(V249))), {'Idris.Prelude.Types.Right', V292} end), case V293 of {'Idris.Prelude.Types.Left', E154} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V295) -> begin (V296 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V248))(V249))), case V296 of {'Idris.Prelude.Types.Left', E156} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V298) -> begin (V326 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V301, V302, V303)) end end end end end, fun (V304) -> fun (V305) -> fun (V306) -> V305 end end end, fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> begin (V312 = (V309(V311))), begin (V313 = (V310(V311))), (V312(V313)) end end end end end end end}, fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> begin (V319 = (V316(V318))), ((V317(V319))(V318)) end end end end end end, fun (V320) -> fun (V321) -> fun (V322) -> begin (V323 = (V321(V322))), (V323(V322)) end end end end}, fun (V324) -> fun (V325) -> V325 end end}, V4, ('Idris.Idris2.TTImp.Elab.Check':'un--addBindIfUnsolved'(V0, V252, V5, {'Idris.Core.TT.Explicit'}, V8, V258, V298, V295))))(V249))), {'Idris.Prelude.Types.Right', V326} end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V327 of {'Idris.Prelude.Types.Left', E164} -> (fun (V328) -> {'Idris.Prelude.Types.Left', V328} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V329) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V258, V248}} end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E147)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V330) -> begin (V331 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"implicit_type"/utf8>>, V330))), case V331 of {'Idris.Prelude.Types.Left', E166} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V333) -> begin (V338 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V246, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V334) -> fun (V335) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V334, V335)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V336) -> fun (V337) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V336, V337)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), V8, V333, {'Idris.Core.TT.TType', V246}, V330))), case V338 of {'Idris.Prelude.Types.Left', E168} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V340) -> begin (V341 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"_"/utf8>>, V330))), case V341 of {'Idris.Prelude.Types.Left', E170} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V343) -> begin (V344 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V246, V5, V8, V343, V340, V330))), case V344 of {'Idris.Prelude.Types.Left', E172} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V346) -> begin (V412 = case ('Idris.Idris2.Prelude.Basics':'un--&&'(V247, fun () -> case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E176, E177, E178, E179, E180, E181} -> (fun (V347, V348, V349, V350, V351, V352) -> V350 end(E176, E177, E178, E179, E180, E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) of 0 -> begin (V381 = begin (V380 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V355, V356, V357)) end end end end end, fun (V358) -> fun (V359) -> fun (V360) -> V359 end end end, fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> begin (V366 = (V363(V365))), begin (V367 = (V364(V365))), (V366(V367)) end end end end end end end}, fun (V368) -> fun (V369) -> fun (V370) -> fun (V371) -> fun (V372) -> begin (V373 = (V370(V372))), ((V371(V373))(V372)) end end end end end end, fun (V374) -> fun (V375) -> fun (V376) -> begin (V377 = (V375(V376))), (V377(V376)) end end end end}, fun (V378) -> fun (V379) -> V379 end end}, V4))(V330))), {'Idris.Prelude.Types.Right', V380} end), case V381 of {'Idris.Prelude.Types.Left', E174} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V383) -> begin (V411 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V386, V387, V388)) end end end end end, fun (V389) -> fun (V390) -> fun (V391) -> V390 end end end, fun (V392) -> fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> begin (V397 = (V394(V396))), begin (V398 = (V395(V396))), (V397(V398)) end end end end end end end}, fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> begin (V404 = (V401(V403))), ((V402(V404))(V403)) end end end end end end, fun (V405) -> fun (V406) -> fun (V407) -> begin (V408 = (V406(V407))), (V408(V407)) end end end end}, fun (V409) -> fun (V410) -> V410 end end}, V4, ('Idris.Idris2.TTImp.Elab.Check':'un--addBindIfUnsolved'(V0, V343, V5, {'Idris.Core.TT.Explicit'}, V8, V346, V340, V383))))(V330))), {'Idris.Prelude.Types.Right', V411} end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V412 of {'Idris.Prelude.Types.Left', E182} -> (fun (V413) -> {'Idris.Prelude.Types.Left', V413} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V414) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V346, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V340))}} end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E145, E146)); {'Idris.TTImp.TTImp.IWithUnambigNames', E184, E185, E186} -> (fun (V415, V416, V417) -> fun (V418) -> begin (V447 = begin (V446 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V421, V422, V423)) end end end end end, fun (V424) -> fun (V425) -> fun (V426) -> V425 end end end, fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> begin (V432 = (V429(V431))), begin (V433 = (V430(V431))), (V432(V433)) end end end end end end end}, fun (V434) -> fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> begin (V439 = (V436(V438))), ((V437(V439))(V438)) end end end end end end, fun (V440) -> fun (V441) -> fun (V442) -> begin (V443 = (V441(V442))), (V443(V442)) end end end end}, fun (V444) -> fun (V445) -> V445 end end}, V4))(V418))), {'Idris.Prelude.Types.Right', V446} end), case V447 of {'Idris.Prelude.Types.Left', E187} -> (fun (V448) -> {'Idris.Prelude.Types.Left', V448} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V449) -> begin (V450 = (('nested--14900-11658--in--un--resolveNames'(V0, V417, V416, V415, V10, V8, V7, V6, V5, V4, V3, V2, V1, V415, V416))(V418))), case V450 of {'Idris.Prelude.Types.Left', E189} -> (fun (V451) -> {'Idris.Prelude.Types.Left', V451} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V452) -> begin (V507 = begin (V506 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V455, V456, V457)) end end end end end, fun (V458) -> fun (V459) -> fun (V460) -> V459 end end end, fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> begin (V466 = (V463(V465))), begin (V467 = (V464(V465))), (V466(V467)) end end end end end end end}, fun (V468) -> fun (V469) -> fun (V470) -> fun (V471) -> fun (V472) -> begin (V473 = (V470(V472))), ((V471(V473))(V472)) end end end end end end, fun (V474) -> fun (V475) -> fun (V476) -> begin (V477 = (V475(V476))), (V477(V476)) end end end end}, fun (V478) -> fun (V479) -> V479 end end}, V4, case V449 of {'Idris.TTImp.Elab.Check.MkEState', E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203} -> (fun (V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492) -> {'Idris.TTImp.Elab.Check.MkEState', V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, ('Idris.Idris2.Data.StringMap':'un--mergeLeft'('erased', V452, case V449 of {'Idris.TTImp.Elab.Check.MkEState', E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216} -> (fun (V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505) -> V505 end(E204, E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V418))), {'Idris.Prelude.Types.Right', V506} end), case V507 of {'Idris.Prelude.Types.Left', E217} -> (fun (V508) -> {'Idris.Prelude.Types.Left', V508} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V509) -> begin (V510 = (('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V417, V10))(V418))), case V510 of {'Idris.Prelude.Types.Left', E219} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V512) -> begin (V541 = begin (V540 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V513) -> fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V515, V516, V517)) end end end end end, fun (V518) -> fun (V519) -> fun (V520) -> V519 end end end, fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> begin (V526 = (V523(V525))), begin (V527 = (V524(V525))), (V526(V527)) end end end end end end end}, fun (V528) -> fun (V529) -> fun (V530) -> fun (V531) -> fun (V532) -> begin (V533 = (V530(V532))), ((V531(V533))(V532)) end end end end end end, fun (V534) -> fun (V535) -> fun (V536) -> begin (V537 = (V535(V536))), (V537(V536)) end end end end}, fun (V538) -> fun (V539) -> V539 end end}, V4))(V418))), {'Idris.Prelude.Types.Right', V540} end), case V541 of {'Idris.Prelude.Types.Left', E221} -> (fun (V542) -> {'Idris.Prelude.Types.Left', V542} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V543) -> begin (V598 = begin (V597 = (('Idris.Idris2.Erlang.Data.IORef':'un--writeIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V546, V547, V548)) end end end end end, fun (V549) -> fun (V550) -> fun (V551) -> V550 end end end, fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> begin (V557 = (V554(V556))), begin (V558 = (V555(V556))), (V557(V558)) end end end end end end end}, fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> begin (V564 = (V561(V563))), ((V562(V564))(V563)) end end end end end end, fun (V565) -> fun (V566) -> fun (V567) -> begin (V568 = (V566(V567))), (V568(V567)) end end end end}, fun (V569) -> fun (V570) -> V570 end end}, V4, case V543 of {'Idris.TTImp.Elab.Check.MkEState', E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235} -> (fun (V571, V572, V573, V574, V575, V576, V577, V578, V579, V580, V581, V582, V583) -> {'Idris.TTImp.Elab.Check.MkEState', V571, V572, V573, V574, V575, V576, V577, V578, V579, V580, V581, V582, case V449 of {'Idris.TTImp.Elab.Check.MkEState', E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248} -> (fun (V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596) -> V596 end(E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V418))), {'Idris.Prelude.Types.Right', V597} end), case V598 of {'Idris.Prelude.Types.Left', E249} -> (fun (V599) -> {'Idris.Prelude.Types.Left', V599} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V600) -> {'Idris.Prelude.Types.Right', V512} end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
