-module('Idris.Idris2.TTImp.Elab.RunElab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--checkRunElab-4923'/19,
  'case--case block in elabScript-4675'/18,
  'case--elabScript-4639'/15,
  'case--elabScript,elabCon-4464'/18,
  'case--elabScript,elabCon-4326'/18,
  'case--elabScript,elabCon-4050'/14,
  'case--elabScript,elabCon-3865'/19,
  'case--elabScript,elabCon-3702'/21,
  'case--elabScript,elabCon-3302'/20,
  'nested--11785-4225--in--un--unelabType'/16,
  'nested--11761-3168--in--un--scriptRet'/17,
  'nested--11785-3824--in--un--quotePi'/18,
  'nested--13518-4824--in--un--mkExpected'/13,
  'nested--11761-3167--in--un--failWith'/16,
  'nested--11761-3169--in--un--elabCon'/16,
  'un--elabScript'/9,
  'un--checkRunElab'/13
]).
'case--checkRunElab-4923'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V19, V20) -> fun (V21) -> begin (V50 = begin (V49 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V24, V25, V26)) end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> V28 end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), begin (V36 = (V33(V34))), (V35(V36)) end end end end end end end}, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V39(V41))), ((V40(V42))(V41)) end end end end end end, fun (V43) -> fun (V44) -> fun (V45) -> begin (V46 = (V44(V45))), (V46(V45)) end end end end}, fun (V47) -> fun (V48) -> V48 end end}, V11))(V21))), {'Idris.Prelude.Types.Right', V49} end), case V50 of {'Idris.Prelude.Types.Left', E2} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V52) -> begin (V56 = begin (V53 = (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V11, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V52, V4, V19))(V21))), case V53 of {'Idris.Prelude.Types.Left', E4} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V55) -> (('un--elabScript'(V0, V11, V10, V9, V3, V5, V4, V55, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, V12))}))(V21)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E6} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V58) -> begin (V87 = begin (V86 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V61, V62, V63)) end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> V65 end end end, fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V69(V71))), begin (V73 = (V70(V71))), (V72(V73)) end end end end end end end}, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> begin (V79 = (V76(V78))), ((V77(V79))(V78)) end end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> begin (V83 = (V81(V82))), (V83(V82)) end end end end}, fun (V84) -> fun (V85) -> V85 end end}, V11))(V21))), {'Idris.Prelude.Types.Right', V86} end), case V87 of {'Idris.Prelude.Types.Left', E8} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V89) -> begin (V90 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V89, V21))), case V90 of {'Idris.Prelude.Types.Left', E10} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V92) -> begin (V93 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V11, V0, V92, V4, V58, V21))), case V93 of {'Idris.Prelude.Types.Left', E12} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V95, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V4, V12))}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in elabScript-4675'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of 0 -> ('nested--11761-3169--in--un--elabCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V1)); 1 -> fun (V18) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V18)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript-4639'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V15, V16) -> case V16 of {'Idris.Core.Name.UN', E2} -> (fun (V17) -> begin (V18 = {'Idris.Core.Name.NS', V15, {'Idris.Core.Name.UN', V17}}), ('case--case block in elabScript-4675'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17, V15, V18, ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq__Namespace'(V15, ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'()))))) end end(E2)); _ -> fun (V19) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V19)) end end end(E0, E1)); _ -> fun (V20) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V20)) end end.
'case--elabScript,elabCon-4464'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> case V18 of {'Idris.Core.Context.TCon', E1, E2, E3, E4, E5, E6, E7, E8} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26) -> fun (V27) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V34, V35, V36, V37, V38, V39)) end end end end end end, V28, V29, V30, V31, V32, V33)) end end end end end end, V25, V27)) end end(E1, E2, E3, E4, E5, E6, E7, E8)); _ -> fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a type"/utf8>>))}, V40)) end end end(E0)); _ -> fun (V41) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a type"/utf8>>))}, V41)) end end.
'case--elabScript,elabCon-4326'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> case V18 of {'Idris.Core.Env.MkIsDefined', E1, E2} -> (fun (V19, V20) -> begin (V28 = ('Idris.Idris2.Core.Env':'un--getBinder'('erased', 'erased', {'Idris.Core.TT.dn--un--__mkWeaken', fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken__Term'('erased', 'erased', V23)) end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken__Term'('erased', 'erased', V26, V27)) end end end end}, V0, V19, 'erased', V7))), begin (V29 = ('Idris.Idris2.Core.TT':'un--binderType'('erased', V28))), fun (V30) -> begin (V31 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V29, V30))), case V31 of {'Idris.Prelude.Types.Left', E3} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V33) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V34, V35, V36, V37, V38, V39)) end end end end end end, V33, V30)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1, E2)); _ -> fun (V40) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a local variable"/utf8>>))}, V40)) end end end(E0)); _ -> fun (V41) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V16)), <<" is not a local variable"/utf8>>))}, V41)) end end.
'case--elabScript,elabCon-4050'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V14) -> fun (V15) -> begin (V16 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V18, V15))), case V19 of {'Idris.Prelude.Types.Left', E3} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V21) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V22, V23, V24, V25, V26, V27)) end end end end end end, {'Idris.Prelude.Types.Just', V21}, V15)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V34) -> begin (V41 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V35, V36, V37, V38, V39, V40)) end end end end end end, V0, V9, V13, 1, V7, {'Idris.Prelude.Types.Nothing'}))(V34))), case V41 of {'Idris.Prelude.Types.Left', E5} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V43) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V13, V7, V43))(V34)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript,elabCon-3865'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> case V18 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V23, V24, V25, V26) -> fun (V27) -> begin (V28 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, <<"x"/utf8>>, V27))), case V28 of {'Idris.Prelude.Types.Left', E8} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V30) -> begin (V31 = (((V22(V16))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, {'Idris.Core.TT.Ref', V19, {'Idris.Core.TT.Bound'}, V30}))))(V27))), case V31 of {'Idris.Prelude.Types.Left', E10} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V33, V27))), case V34 of {'Idris.Prelude.Types.Left', E12} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V36) -> begin (V37 = ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V30, V20, V36))), begin (V38 = (('nested--11785-3824--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V25))(V27))), case V38 of {'Idris.Prelude.Types.Left', E14} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V40) -> begin (V41 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V26, V27))), case V41 of {'Idris.Prelude.Types.Left', E16} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V43) -> begin (V44 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V23, V24, V40, V43}, V7}), begin (V48 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--nf'(V12, [V20 | V0], V16, V44, V37))(V27))), case V45 of {'Idris.Prelude.Types.Left', E18} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V47) -> (('un--elabScript'([V20 | V0], V12, V11, V10, V9, ('Idris.Idris2.TTImp.TTImp':'dn--un--weaken_Weaken__NestedNames'('erased', 'erased', V8)), V44, V47, {'Idris.Prelude.Types.Nothing'}))(V27)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V48 of {'Idris.Prelude.Types.Left', E20} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V50) -> begin (V51 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, [V20 | V0], V17, V44, V50, V27))), case V51 of {'Idris.Prelude.Types.Left', E22} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V53) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V17, V7, {'Idris.Core.TT.Bind', V19, V20, {'Idris.Core.TT.Lam', V23, V24, V40, V43}, V53}))(V27)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V54)) end end end(E0, E1, E2, E3)); _ -> fun (V55) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V55)) end end.
'case--elabScript,elabCon-3702'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V21, V22) -> fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V15, V23))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V26, V7, V21))(V23)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabScript,elabCon-3302'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V20, V21, V22, V23) -> case V22 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V24, V25, V26, V27) -> fun (V28) -> begin (V29 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V17, V7, V18, V28))), case V29 of {'Idris.Prelude.Types.Left', E8} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V31) -> begin (V32 = (((V23(V17))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, V31))))(V28))), case V32 of {'Idris.Prelude.Types.Left', E10} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V34) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V34, V6))(V28)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> fun (V35) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V17, V35)) end end end(E0, E1, E2, E3)); _ -> fun (V36) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V17, V36)) end end.
'nested--11785-4225--in--un--unelabType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'([], V12, {'Idris.Core.Env.Nil'}, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V16, V23}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> begin (V45 = begin (V44 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> V23 end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), begin (V31 = (V28(V29))), (V30(V31)) end end end end end end end}, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), ((V35(V37))(V36)) end end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V39(V40))), (V41(V40)) end end end end}, fun (V42) -> fun (V43) -> V43 end end}, V12))(V16))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E0} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V47) -> begin (V48 = (((((((V14(V0))(V9))(V47))(1))(V7))(V15))(V16))), case V48 of {'Idris.Prelude.Types.Left', E2} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V50) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V47, V7, V50))(V16)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--11785-3824--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.TT.Explicit'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Explicit'}} end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Implicit'}} end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.AutoImplicit'}} end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Can\x{27}t add default lambda"/utf8>>}, V22)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13518-4824--in--un--mkExpected'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Just', E0} -> (fun (V13) -> fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Right', V17} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V18) -> begin (V19 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V11, V9, <<"scriptTy"/utf8>>, V18))), case V19 of {'Idris.Prelude.Types.Left', E3} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V21) -> ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V11, V9, V3, ('Idris.Idris2.Algebra.Semiring':'un--erased'('erased', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V22) -> fun (V23) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring__ZeroOneOmega'(V22, V23)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring__ZeroOneOmega'()), fun (V24) -> fun (V25) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring__ZeroOneOmega'(V24, V25)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring__ZeroOneOmega'())})), V4, V21, {'Idris.Core.TT.TType', V3}, V18)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> begin (V44 = begin (V43 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, V12))(V15))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E0} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V46, V15))), case V47 of {'Idris.Prelude.Types.Left', E2} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V49) -> begin (V50 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V49, V7, {'Idris.Core.Value.NDCon', V5, V4, V3, V2, V1}, V15))), case V50 of {'Idris.Prelude.Types.Left', E4} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V52) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.BadRunElab', V0, V9, V7, V52}, V15)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--11761-3169--in--un--elabCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V14 of <<"Pure"/utf8>> -> case V15 of [E0 | E1] -> (fun (V16, V17) -> case V17 of [E2 | E3] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V20))), case V21 of {'Idris.Prelude.Types.Left', E4} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V23) -> (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V23, V18))(V20)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V24) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V24)) end end end(E2, E3)); _ -> fun (V25) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V25)) end end end(E0, E1)); _ -> fun (V26) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V26)) end end; <<"Bind"/utf8>> -> case V15 of [E6 | E7] -> (fun (V27, V28) -> case V28 of [E8 | E9] -> (fun (V29, V30) -> case V30 of [E10 | E11] -> (fun (V31, V32) -> case V32 of [E12 | E13] -> (fun (V33, V34) -> case V34 of [] -> fun (V35) -> begin (V39 = begin (V36 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V31))(V35))), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V38, V6))(V35)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V39 of {'Idris.Prelude.Types.Left', E16} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V41) -> begin (V42 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V33))(V35))), case V42 of {'Idris.Prelude.Types.Left', E18} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V44) -> case V44 of {'Idris.Core.Value.NBind', E20, E21, E22, E23} -> (fun (V45, V46, V47, V48) -> case V47 of {'Idris.Core.TT.Lam', E24, E25, E26, E27} -> (fun (V49, V50, V51, V52) -> begin (V53 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V13, V7, V41, V35))), case V53 of {'Idris.Prelude.Types.Left', E28} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V55) -> begin (V56 = (((V48(V13))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, V55))))(V35))), case V56 of {'Idris.Prelude.Types.Left', E30} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V58) -> (('un--elabScript'(V0, V12, V11, V10, V9, V8, V7, V58, V6))(V35)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26, E27)); _ -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V35)) end end(E20, E21, E22, E23)); _ -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V35)) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V59) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V59)) end end end(E12, E13)); _ -> fun (V60) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V60)) end end end(E10, E11)); _ -> fun (V61) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V61)) end end end(E8, E9)); _ -> fun (V62) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V62)) end end end(E6, E7)); _ -> fun (V63) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V63)) end end; <<"Fail"/utf8>> -> case V15 of [E32 | E33] -> (fun (V64, V65) -> case V65 of [E34 | E35] -> (fun (V66, V67) -> case V67 of [] -> fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V66))(V68))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V72 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V71))(V68))), case V72 of {'Idris.Prelude.Types.Left', E38} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V74) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Error during reflection: "/utf8>>, V74))}, V68)) end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V75) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V75)) end end end(E34, E35)); _ -> fun (V76) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V76)) end end end(E32, E33)); _ -> fun (V77) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V77)) end end; <<"LogMsg"/utf8>> -> case V15 of [E40 | E41] -> (fun (V78, V79) -> case V79 of [E42 | E43] -> (fun (V80, V81) -> case V81 of [E44 | E45] -> (fun (V82, V83) -> case V83 of [] -> fun (V84) -> begin (V85 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V78))(V84))), case V85 of {'Idris.Prelude.Types.Left', E46} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V87) -> begin (V88 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V80))(V84))), case V88 of {'Idris.Prelude.Types.Left', E48} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V90) -> begin (V101 = begin (V91 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V87))(V84))), case V91 of {'Idris.Prelude.Types.Left', E50} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V93) -> begin (V94 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V12, V0, V13, V90))(V84))), case V94 of {'Idris.Prelude.Types.Left', E52} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V96) -> ('Idris.Idris2.Core.Context.Log':'un--logC'(V12, V93, V96, fun (V97) -> begin (V98 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V82))(V97))), case V98 of {'Idris.Prelude.Types.Left', E54} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V100) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V100))(V97)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V84)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V101 of {'Idris.Prelude.Types.Left', E56} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V103) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V104, V105, V106, V107, V108, V109, V110)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V84)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V111) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V111)) end end end(E44, E45)); _ -> fun (V112) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V112)) end end end(E42, E43)); _ -> fun (V113) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V113)) end end end(E40, E41)); _ -> fun (V114) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V114)) end end; <<"LogTerm"/utf8>> -> case V15 of [E58 | E59] -> (fun (V115, V116) -> case V116 of [E60 | E61] -> (fun (V117, V118) -> case V118 of [E62 | E63] -> (fun (V119, V120) -> case V120 of [E64 | E65] -> (fun (V121, V122) -> case V122 of [] -> fun (V123) -> begin (V124 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V115))(V123))), case V124 of {'Idris.Prelude.Types.Left', E66} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V126) -> begin (V127 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V117))(V123))), case V127 of {'Idris.Prelude.Types.Left', E68} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V129) -> begin (V149 = begin (V130 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V126))(V123))), case V130 of {'Idris.Prelude.Types.Left', E70} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V132) -> begin (V133 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V12, V0, V13, V129))(V123))), case V133 of {'Idris.Prelude.Types.Left', E72} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V135) -> ('Idris.Idris2.Core.Context.Log':'un--logC'(V12, V132, V135, fun (V136) -> begin (V137 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V119))(V136))), case V137 of {'Idris.Prelude.Types.Left', E74} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V139) -> begin (V140 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V121))(V136))), case V140 of {'Idris.Prelude.Types.Left', E76} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V142) -> begin (V143 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V139))(V136))), case V143 of {'Idris.Prelude.Types.Left', E78} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V145) -> begin (V146 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__RawImp'(V12, V0, V13, V142))(V136))), case V146 of {'Idris.Prelude.Types.Left', E80} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V148) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.Strings':'un--++'(V145, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V148))))))} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V123)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V149 of {'Idris.Prelude.Types.Left', E82} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V151) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V152, V153, V154, V155, V156, V157, V158)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V123)) end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V159) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V159)) end end end(E64, E65)); _ -> fun (V160) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V160)) end end end(E62, E63)); _ -> fun (V161) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V161)) end end end(E60, E61)); _ -> fun (V162) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V162)) end end end(E58, E59)); _ -> fun (V163) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V163)) end end; <<"Check"/utf8>> -> case V15 of [E84 | E85] -> (fun (V164, V165) -> case V165 of [E86 | E87] -> (fun (V166, V167) -> case V167 of [] -> fun (V168) -> begin (V169 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V164))(V168))), case V169 of {'Idris.Prelude.Types.Left', E88} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V171) -> begin (V172 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V166))(V168))), case V172 of {'Idris.Prelude.Types.Left', E90} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V174) -> begin (V175 = (('Idris.Idris2.Core.Context':'un--resolveName'(V12, {'Idris.Core.Name.UN', <<"[elaborator script]"/utf8>>}))(V168))), case V175 of {'Idris.Prelude.Types.Left', E92} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V177) -> begin (V178 = ('Idris.Idris2.Core.Core':'un--newRef'('erased', 'erased', {'Idris.TTImp.Elab.Check.EST'}, ('Idris.Idris2.TTImp.Elab.Check':'un--initEState'(V0, V177, V7)), V168))), case V178 of {'Idris.Prelude.Types.Left', E94} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V180) -> begin (V184 = begin (V181 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__RawImp'(V12, V0, V13, V174))(V168))), case V181 of {'Idris.Prelude.Types.Left', E96} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V183) -> ('Idris.Idris2.TTImp.Elab.Delayed':'un--runDelays'('erased', V0, V12, V11, V10, V180, 0, ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V12, V11, V10, V180, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), ('Idris.Idris2.TTImp.Elab.Check':'un--initElabInfo'({'Idris.TTImp.Elab.Check.InExpr'})), V8, V7, V183, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--glueBack'(V12, V0, V13, V7, V171))})), V168)) end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V184 of {'Idris.Prelude.Types.Left', E98} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V186) -> case V186 of {'Idris.Builtin.MkPair', E100, E101} -> (fun (V187, V188) -> begin (V189 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V168))), case V189 of {'Idris.Prelude.Types.Left', E102} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V191) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V191, V7, V187))(V168)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100, E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V192) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V192)) end end end(E86, E87)); _ -> fun (V193) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V193)) end end end(E84, E85)); _ -> fun (V194) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V194)) end end; <<"Quote"/utf8>> -> case V15 of [E104 | E105] -> (fun (V195, V196) -> case V196 of [E106 | E107] -> (fun (V197, V198) -> case V198 of [] -> fun (V199) -> begin (V200 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V197))(V199))), case V200 of {'Idris.Prelude.Types.Left', E108} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V202) -> begin (V231 = begin (V230 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V205, V206, V207)) end end end end end, fun (V208) -> fun (V209) -> fun (V210) -> V209 end end end, fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> begin (V216 = (V213(V215))), begin (V217 = (V214(V215))), (V216(V217)) end end end end end end end}, fun (V218) -> fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> begin (V223 = (V220(V222))), ((V221(V223))(V222)) end end end end end end, fun (V224) -> fun (V225) -> fun (V226) -> begin (V227 = (V225(V226))), (V227(V226)) end end end end}, fun (V228) -> fun (V229) -> V229 end end}, V12))(V199))), {'Idris.Prelude.Types.Right', V230} end), case V231 of {'Idris.Prelude.Types.Left', E110} -> (fun (V232) -> {'Idris.Prelude.Types.Left', V232} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V233) -> begin (V234 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V233, V199))), case V234 of {'Idris.Prelude.Types.Left', E112} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V236) -> begin (V237 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V236, V7, V202, V199))), case V237 of {'Idris.Prelude.Types.Left', E114} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V239) -> begin (V240 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V239, V199))), case V240 of {'Idris.Prelude.Types.Left', E116} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V242) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V243, V244, V245, V246, V247, V248)) end end end end end end, V242, V199)) end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V249) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V249)) end end end(E106, E107)); _ -> fun (V250) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V250)) end end end(E104, E105)); _ -> fun (V251) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V251)) end end; <<"Lambda"/utf8>> -> case V15 of [E118 | E119] -> (fun (V252, V253) -> case V253 of [E120 | E121] -> (fun (V254, V255) -> case V255 of [E122 | E123] -> (fun (V256, V257) -> case V257 of [] -> fun (V258) -> begin (V259 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V258))), case V259 of {'Idris.Prelude.Types.Left', E124} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V261) -> begin (V262 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V256))(V258))), case V262 of {'Idris.Prelude.Types.Left', E126} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V264) -> case V264 of {'Idris.Core.Value.NBind', E128, E129, E130, E131} -> (fun (V265, V266, V267, V268) -> case V267 of {'Idris.Core.TT.Lam', E132, E133, E134, E135} -> (fun (V269, V270, V271, V272) -> begin (V273 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, <<"x"/utf8>>, V258))), case V273 of {'Idris.Prelude.Types.Left', E136} -> (fun (V274) -> {'Idris.Prelude.Types.Left', V274} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V275) -> begin (V276 = (((V268(V13))(('Idris.Idris2.Core.Normalise':'un--toClosure'('erased', ('Idris.Idris2.Core.Value':'un--withAll'()), V7, {'Idris.Core.TT.Ref', V265, {'Idris.Core.TT.Bound'}, V275}))))(V258))), case V276 of {'Idris.Prelude.Types.Left', E138} -> (fun (V277) -> {'Idris.Prelude.Types.Left', V277} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V278) -> begin (V279 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V261, V7, V278, V258))), case V279 of {'Idris.Prelude.Types.Left', E140} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V281) -> begin (V282 = ('Idris.Idris2.Core.TT':'un--refToLocal'('erased', V275, V266, V281))), begin (V283 = (('nested--11785-3824--in--un--quotePi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V254, V252, V256, V13, V271))(V258))), case V283 of {'Idris.Prelude.Types.Left', E142} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V285) -> begin (V286 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, V0, V261, V7, V272, V258))), case V286 of {'Idris.Prelude.Types.Left', E144} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V288) -> begin (V289 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V269, V270, V285, V288}, V7}), begin (V293 = begin (V290 = (('Idris.Idris2.Core.Normalise':'un--nf'(V12, [V266 | V0], V13, V289, V282))(V258))), case V290 of {'Idris.Prelude.Types.Left', E146} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V292) -> (('un--elabScript'([V266 | V0], V12, V11, V10, V9, ('Idris.Idris2.TTImp.TTImp':'dn--un--weaken_Weaken__NestedNames'('erased', 'erased', V8)), V289, V292, {'Idris.Prelude.Types.Nothing'}))(V258)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V293 of {'Idris.Prelude.Types.Left', E148} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V295) -> begin (V296 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V12, [V266 | V0], V261, V289, V295, V258))), case V296 of {'Idris.Prelude.Types.Left', E150} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V298) -> (('Idris.Idris2.Core.Normalise':'un--nf'(V12, V0, V261, V7, {'Idris.Core.TT.Bind', V265, V266, {'Idris.Core.TT.Lam', V269, V270, V285, V288}, V298}))(V258)) end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132, E133, E134, E135)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V258)) end end(E128, E129, E130, E131)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"Not a lambda"/utf8>>}, V258)) end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V299) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V299)) end end end(E122, E123)); _ -> fun (V300) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V300)) end end end(E120, E121)); _ -> fun (V301) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V301)) end end end(E118, E119)); _ -> fun (V302) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V302)) end end; <<"Goal"/utf8>> -> case V15 of [] -> case V6 of {'Idris.Prelude.Types.Just', E152} -> (fun (V303) -> fun (V304) -> begin (V305 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V303))(V304))), case V305 of {'Idris.Prelude.Types.Left', E153} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V307) -> begin (V308 = ('Idris.Idris2.TTImp.Unelab':'un--unelabUniqueBinders'(V0, V12, V7, V307, V304))), case V308 of {'Idris.Prelude.Types.Left', E155} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V310) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V311) -> fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V317, V318, V319, V320, V321, V322)) end end end end end end, V311, V312, V313, V314, V315, V316)) end end end end end end, {'Idris.Prelude.Types.Just', V310}, V304)) end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V323) -> begin (V330 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V324, V325, V326, V327, V328, V329)) end end end end end end, V0, V9, V13, 1, V7, {'Idris.Prelude.Types.Nothing'}))(V323))), case V330 of {'Idris.Prelude.Types.Left', E157} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V332) -> (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V12, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V13, V7, V332))(V323)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> fun (V333) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V333)) end end; <<"LocalVars"/utf8>> -> case V15 of [] -> fun (V334) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V341, V342, V343, V344, V345, V346)) end end end end end end, V335, V336, V337, V338, V339, V340)) end end end end end end, V0, V334)) end; _ -> fun (V347) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V347)) end end; <<"GenSym"/utf8>> -> case V15 of [E159 | E160] -> (fun (V348, V349) -> case V349 of [] -> fun (V350) -> begin (V351 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V348))(V350))), case V351 of {'Idris.Prelude.Types.Left', E161} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V353) -> begin (V357 = begin (V354 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V12, V0, V13, V353))(V350))), case V354 of {'Idris.Prelude.Types.Left', E163} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V356) -> ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V12, V10, V356, V350)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V357 of {'Idris.Prelude.Types.Left', E165} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V359) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V360) -> fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V360, V361, V362, V363, V364, V365)) end end end end end end, V359, V350)) end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V366) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V366)) end end end(E159, E160)); _ -> fun (V367) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V367)) end end; <<"InCurrentNS"/utf8>> -> case V15 of [E167 | E168] -> (fun (V368, V369) -> case V369 of [] -> fun (V370) -> begin (V371 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V368))(V370))), case V371 of {'Idris.Prelude.Types.Left', E169} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V373) -> begin (V377 = begin (V374 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V373))(V370))), case V374 of {'Idris.Prelude.Types.Left', E171} -> (fun (V375) -> {'Idris.Prelude.Types.Left', V375} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V376) -> (('Idris.Idris2.Core.Context':'un--inCurrentNS'(V12, V376))(V370)) end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V377 of {'Idris.Prelude.Types.Left', E173} -> (fun (V378) -> {'Idris.Prelude.Types.Left', V378} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V379) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V380, V381, V382, V383, V384, V385)) end end end end end end, V379, V370)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V386) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V386)) end end end(E167, E168)); _ -> fun (V387) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V387)) end end; <<"GetType"/utf8>> -> case V15 of [E175 | E176] -> (fun (V388, V389) -> case V389 of [] -> fun (V390) -> begin (V391 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V388))(V390))), case V391 of {'Idris.Prelude.Types.Left', E177} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V393) -> begin (V423 = begin (V394 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V393))(V390))), case V394 of {'Idris.Prelude.Types.Left', E179} -> (fun (V395) -> {'Idris.Prelude.Types.Left', V395} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V396) -> ('Idris.Idris2.Core.Context':'un--lookupTyName'(V396, case V13 of {'Idris.Core.Context.MkDefs', E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206} -> (fun (V397, V398, V399, V400, V401, V402, V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418, V419, V420, V421, V422) -> V397 end(E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V390)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V423 of {'Idris.Prelude.Types.Left', E207} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V425) -> begin (V427 = (('Idris.Idris2.Core.Core':'un--traverse'('erased', 'erased', fun (V426) -> ('nested--11785-4225--in--un--unelabType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V388, V13, V426)) end, V425))(V390))), case V427 of {'Idris.Prelude.Types.Left', E209} -> (fun (V428) -> {'Idris.Prelude.Types.Left', V428} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V429) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V430) -> fun (V431) -> fun (V432) -> fun (V433) -> fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> fun (V441) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V442) -> fun (V443) -> fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V442, V443, V444, V445, V446, V447)) end end end end end end, fun (V448) -> fun (V449) -> fun (V450) -> fun (V451) -> fun (V452) -> fun (V453) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect__RawImp'(V448, V449, V450, V451, V452, V453)) end end end end end end}, V436, V437, V438, V439, V440, V441)) end end end end end end, V430, V431, V432, V433, V434, V435)) end end end end end end, V429, V390)) end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V454) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V454)) end end end(E175, E176)); _ -> fun (V455) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V455)) end end; <<"GetLocalType"/utf8>> -> case V15 of [E211 | E212] -> (fun (V456, V457) -> case V457 of [] -> fun (V458) -> begin (V459 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V456))(V458))), case V459 of {'Idris.Prelude.Types.Left', E213} -> (fun (V460) -> {'Idris.Prelude.Types.Left', V460} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V461) -> begin (V462 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V461))(V458))), case V462 of {'Idris.Prelude.Types.Left', E215} -> (fun (V463) -> {'Idris.Prelude.Types.Left', V463} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V464) -> (('case--elabScript,elabCon-4326'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V456, V13, V461, V464, ('Idris.Idris2.Core.Env':'un--defined'(V0, V464, V7))))(V458)) end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V465) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V465)) end end end(E211, E212)); _ -> fun (V466) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V466)) end end; <<"GetCons"/utf8>> -> case V15 of [E217 | E218] -> (fun (V467, V468) -> case V468 of [] -> fun (V469) -> begin (V470 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V467))(V469))), case V470 of {'Idris.Prelude.Types.Left', E219} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V472) -> begin (V473 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V12, V0, V13, V472))(V469))), case V473 of {'Idris.Prelude.Types.Left', E221} -> (fun (V474) -> {'Idris.Prelude.Types.Left', V474} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V475) -> begin (V502 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V475, case V13 of {'Idris.Core.Context.MkDefs', E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248} -> (fun (V476, V477, V478, V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501) -> V476 end(E223, E224, E225, E226, E227, E228, E229, E230, E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V469))), case V502 of {'Idris.Prelude.Types.Left', E249} -> (fun (V503) -> {'Idris.Prelude.Types.Left', V503} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V504) -> case V504 of {'Idris.Prelude.Types.Just', E251} -> (fun (V505) -> case V505 of {'Idris.Core.Context.TCon', E252, E253, E254, E255, E256, E257, E258, E259} -> (fun (V506, V507, V508, V509, V510, V511, V512, V513) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> fun (V518) -> fun (V519) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V520) -> fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V520, V521, V522, V523, V524, V525)) end end end end end end, V514, V515, V516, V517, V518, V519)) end end end end end end, V512, V469)) end(E252, E253, E254, E255, E256, E257, E258, E259)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V475)), <<" is not a type"/utf8>>))}, V469)) end end(E251)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V475)), <<" is not a type"/utf8>>))}, V469)) end end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V526) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V526)) end end end(E217, E218)); _ -> fun (V527) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V527)) end end; <<"Declare"/utf8>> -> case V15 of [E260 | E261] -> (fun (V528, V529) -> case V529 of [] -> fun (V530) -> begin (V531 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V12, V0, V13, V528))(V530))), case V531 of {'Idris.Prelude.Types.Left', E262} -> (fun (V532) -> {'Idris.Prelude.Types.Left', V532} end(E262)); {'Idris.Prelude.Types.Right', E263} -> (fun (V533) -> begin (V538 = (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V534) -> fun (V535) -> fun (V536) -> fun (V537) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reify_Reify__ImpDecl'(V534, V535, V536, V537)) end end end end, V12, V0, V13, V533))(V530))), case V538 of {'Idris.Prelude.Types.Left', E264} -> (fun (V539) -> {'Idris.Prelude.Types.Left', V539} end(E264)); {'Idris.Prelude.Types.Right', E265} -> (fun (V540) -> begin (V542 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V541) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'([], V12, V11, V10, [], [], {'Idris.Core.Env.Nil'}, V541)) end, V540))(V530))), case V542 of {'Idris.Prelude.Types.Left', E266} -> (fun (V543) -> {'Idris.Prelude.Types.Left', V543} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V544) -> ('nested--11761-3168--in--un--scriptRet'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> fun (V551) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|Unit,MkUnit|)'(V545, V546, V547, V548, V549, V550, V551)) end end end end end end end, {'Idris.Builtin.MkUnit'}, V530)) end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V552) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V552)) end end end(E260, E261)); _ -> fun (V553) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V553)) end end; _ -> fun (V554) -> ('nested--11761-3167--in--un--failWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, 'erased', V13, V554)) end end.
'un--elabScript'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Core.Value.NDCon', E6, E7, E8, E9, E10} -> (fun (V9, V10, V11, V12, V13) -> fun (V14) -> begin (V43 = begin (V42 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> V21 end end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), begin (V29 = (V26(V27))), (V28(V29)) end end end end end end end}, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V32(V34))), ((V33(V35))(V34)) end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> begin (V39 = (V37(V38))), (V39(V38)) end end end end}, fun (V40) -> fun (V41) -> V41 end end}, V1))(V14))), {'Idris.Prelude.Types.Right', V42} end), case V43 of {'Idris.Prelude.Types.Left', E11} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V45) -> begin (V50 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(V46, V47)) end end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__Name'(V48, V49)) end end}, V10, V14))), case V50 of {'Idris.Prelude.Types.Left', E13} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V52) -> case V52 of {'Idris.Core.Name.NS', E15, E16} -> (fun (V53, V54) -> case V54 of {'Idris.Core.Name.UN', E17} -> (fun (V55) -> begin (V56 = {'Idris.Core.Name.NS', V53, {'Idris.Core.Name.UN', V55}}), (('case--case block in elabScript-4675'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, V45, V55, V53, V56, ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq__Namespace'(V53, ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'())))))(V14)) end end(E17)); _ -> ('nested--11761-3167--in--un--failWith'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, 'erased', V45, V14)) end end(E15, E16)); _ -> ('nested--11761-3167--in--un--failWith'(V0, V13, V12, V11, V10, V9, V8, V6, V5, V4, V3, V2, V1, 'erased', V45, V14)) end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9, E10)); _ -> fun (V57) -> begin (V86 = begin (V85 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V60, V61, V62)) end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> V64 end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> begin (V71 = (V68(V70))), begin (V72 = (V69(V70))), (V71(V72)) end end end end end end end}, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> begin (V78 = (V75(V77))), ((V76(V78))(V77)) end end end end end end, fun (V79) -> fun (V80) -> fun (V81) -> begin (V82 = (V80(V81))), (V82(V81)) end end end end}, fun (V83) -> fun (V84) -> V84 end end}, V1))(V57))), {'Idris.Prelude.Types.Right', V85} end), case V86 of {'Idris.Prelude.Types.Left', E0} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V88) -> begin (V89 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V88, V57))), case V89 of {'Idris.Prelude.Types.Left', E2} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V91) -> begin (V92 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V1, V0, V91, V6, V7, V57))), case V92 of {'Idris.Prelude.Types.Left', E4} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V94) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.BadRunElab', V0, V4, V6, V94}, V57)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--checkRunElab'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V13 = (('nested--13518-4824--in--un--mkExpected'(V0, V11, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E0} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V15) -> begin (V44 = begin (V43 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, V1))(V12))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E2} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V46) -> begin (V47 = case ('Idris.Idris2.Prelude.Basics':'un--not'(('Idris.Idris2.Core.Context':'un--isExtension'({'Idris.Core.Options.ElabReflection'}, V46)))) of 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V9, <<"%language ElabReflection not enabled"/utf8>>}, V12)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V47 of {'Idris.Prelude.Types.Left', E4} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V49) -> begin (V50 = {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'()), {'Idris.Core.Name.UN', <<"Elab"/utf8>>}}), begin (V51 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V9, V46, V50, [V15 | []], V12))), case V51 of {'Idris.Prelude.Types.Left', E6} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V53) -> begin (V54 = ('Idris.Idris2.TTImp.Elab.Delayed':'un--runDelays'('erased', V0, V1, V2, V3, V4, 0, ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V10, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V53))})), V12))), case V54 of {'Idris.Prelude.Types.Left', E8} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V56) -> case V56 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V57, V58) -> begin (V87 = begin (V86 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V61, V62, V63)) end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> V65 end end end, fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V69(V71))), begin (V73 = (V70(V71))), (V72(V73)) end end end end end end end}, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> begin (V79 = (V76(V78))), ((V77(V79))(V78)) end end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> begin (V83 = (V81(V82))), (V83(V82)) end end end end}, fun (V84) -> fun (V85) -> V85 end end}, V1))(V12))), {'Idris.Prelude.Types.Right', V86} end), case V87 of {'Idris.Prelude.Types.Left', E12} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V89) -> begin (V93 = begin (V90 = (('Idris.Idris2.Core.Normalise':'un--nfOpts'(V1, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V89, V8, V57))(V12))), case V90 of {'Idris.Prelude.Types.Left', E14} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V92) -> (('un--elabScript'(V0, V1, V2, V3, V9, V7, V8, V92, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V15))}))(V12)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E16} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V95) -> begin (V124 = begin (V123 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V98, V99, V100)) end end end end end, fun (V101) -> fun (V102) -> fun (V103) -> V102 end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> begin (V109 = (V106(V108))), begin (V110 = (V107(V108))), (V109(V110)) end end end end end end end}, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> begin (V116 = (V113(V115))), ((V114(V116))(V115)) end end end end end end, fun (V117) -> fun (V118) -> fun (V119) -> begin (V120 = (V118(V119))), (V120(V119)) end end end end}, fun (V121) -> fun (V122) -> V122 end end}, V1))(V12))), {'Idris.Prelude.Types.Right', V123} end), case V124 of {'Idris.Prelude.Types.Left', E18} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V126) -> begin (V127 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V126, V12))), case V127 of {'Idris.Prelude.Types.Left', E20} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V129) -> begin (V130 = ('Idris.Idris2.Core.Normalise':'dn--un--quote_Quote__NF'(V1, V0, V129, V8, V95, V12))), case V130 of {'Idris.Prelude.Types.Left', E22} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V132, ('Idris.Idris2.Core.Normalise':'un--gnf'(V0, V8, V15))}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
