-module('Idris.Idris2.TTImp.Reflect').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--reify-16181'/11,
  'case--reify-15822'/11,
  'case--reify-15584'/11,
  'case--reify-15371'/11,
  'case--reify-15065'/11,
  'case--reify-14788'/11,
  'case--reify-14615'/11,
  'case--reify-14089'/11,
  'case--reify-13884'/11,
  'case--reify-13654'/11,
  'case--reify-10949'/11,
  'case--reify-10588'/11,
  'case--reify-10391'/11,
  'case--reify-10121'/11,
  'dn--un--reify_Reify__UseSide'/4,
  'dn--un--reify_Reify__RawImp'/4,
  'dn--un--reify_Reify__ImpTy'/4,
  'dn--un--reify_Reify__ImpRecord'/4,
  'dn--un--reify_Reify__ImpDecl'/4,
  'dn--un--reify_Reify__ImpData'/4,
  'dn--un--reify_Reify__ImpClause'/4,
  'dn--un--reify_Reify__IFieldUpdate'/4,
  'dn--un--reify_Reify__IField'/4,
  'dn--un--reify_Reify__FnOpt'/4,
  'dn--un--reify_Reify__DotReason'/4,
  'dn--un--reify_Reify__DataOpt'/4,
  'dn--un--reify_Reify__BindMode'/4,
  'dn--un--reify_Reify__AltType'/4,
  'dn--un--reflect_Reflect__UseSide'/6,
  'dn--un--reflect_Reflect__RawImp'/6,
  'dn--un--reflect_Reflect__ImpTy'/6,
  'dn--un--reflect_Reflect__ImpRecord'/6,
  'dn--un--reflect_Reflect__ImpDecl'/6,
  'dn--un--reflect_Reflect__ImpData'/6,
  'dn--un--reflect_Reflect__ImpClause'/6,
  'dn--un--reflect_Reflect__IFieldUpdate'/6,
  'dn--un--reflect_Reflect__IField'/6,
  'dn--un--reflect_Reflect__FnOpt'/6,
  'dn--un--reflect_Reflect__DotReason'/6,
  'dn--un--reflect_Reflect__DataOpt'/6,
  'dn--un--reflect_Reflect__BindMode'/6,
  'dn--un--reflect_Reflect__AltType'/6,
  'dn--un--__Impl_Reify_UseSide'/4,
  'dn--un--__Impl_Reify_RawImp'/4,
  'dn--un--__Impl_Reify_ImpTy'/4,
  'dn--un--__Impl_Reify_ImpRecord'/4,
  'dn--un--__Impl_Reify_ImpDecl'/4,
  'dn--un--__Impl_Reify_ImpData'/4,
  'dn--un--__Impl_Reify_ImpClause'/4,
  'dn--un--__Impl_Reify_IFieldUpdate'/4,
  'dn--un--__Impl_Reify_IField'/4,
  'dn--un--__Impl_Reify_FnOpt'/4,
  'dn--un--__Impl_Reify_DotReason'/4,
  'dn--un--__Impl_Reify_DataOpt'/4,
  'dn--un--__Impl_Reify_BindMode'/4,
  'dn--un--__Impl_Reify_AltType'/4,
  'dn--un--__Impl_Reflect_UseSide'/6,
  'dn--un--__Impl_Reflect_RawImp'/6,
  'dn--un--__Impl_Reflect_ImpTy'/6,
  'dn--un--__Impl_Reflect_ImpRecord'/6,
  'dn--un--__Impl_Reflect_ImpDecl'/6,
  'dn--un--__Impl_Reflect_ImpData'/6,
  'dn--un--__Impl_Reflect_ImpClause'/6,
  'dn--un--__Impl_Reflect_IFieldUpdate'/6,
  'dn--un--__Impl_Reflect_IField'/6,
  'dn--un--__Impl_Reflect_FnOpt'/6,
  'dn--un--__Impl_Reflect_DotReason'/6,
  'dn--un--__Impl_Reflect_DataOpt'/6,
  'dn--un--__Impl_Reflect_BindMode'/6,
  'dn--un--__Impl_Reflect_AltType'/6
]).
'case--reify-16181'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"IClaim"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V42 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Visibility'(V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V42 of {'Idris.Prelude.Types.Left', E25} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V44) -> begin (V52 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V45 of {'Idris.Prelude.Types.Left', E27} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V47) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--reify_Reify__FnOpt'(V48, V49, V50, V51)) end end end end, V8, V0, V7, V47))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('dn--un--reify_Reify__ImpTy'(V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E33} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V32, V38, V44, V54, V60}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V61)) end end end(E13, E14)); _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V62)) end end end(E11, E12)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V63)) end end end(E9, E10)); _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V64)) end end end(E7, E8)); _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V65)) end end end(E5, E6)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V66)) end end; <<"IData"/utf8>> -> case V12 of [E35 | E36] -> (fun (V67, V68) -> case V68 of [E37 | E38] -> (fun (V69, V70) -> case V70 of [E39 | E40] -> (fun (V71, V72) -> case V72 of [] -> fun (V73) -> begin (V77 = begin (V74 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V67))(V73))), case V74 of {'Idris.Prelude.Types.Left', E41} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V76) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V76))(V73)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V77 of {'Idris.Prelude.Types.Left', E43} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V79) -> begin (V83 = begin (V80 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V69))(V73))), case V80 of {'Idris.Prelude.Types.Left', E45} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V82) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Visibility'(V8, V0, V7, V82))(V73)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V83 of {'Idris.Prelude.Types.Left', E47} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V85) -> begin (V89 = begin (V86 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V71))(V73))), case V86 of {'Idris.Prelude.Types.Left', E49} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V88) -> (('dn--un--reify_Reify__ImpData'(V8, V0, V7, V88))(V73)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E51} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V79, V85, V91}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V92) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V92)) end end end(E39, E40)); _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V93)) end end end(E37, E38)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V94)) end end end(E35, E36)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V95)) end end; <<"IDef"/utf8>> -> case V12 of [E53 | E54] -> (fun (V96, V97) -> case V97 of [E55 | E56] -> (fun (V98, V99) -> case V99 of [E57 | E58] -> (fun (V100, V101) -> case V101 of [] -> fun (V102) -> begin (V106 = begin (V103 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V96))(V102))), case V103 of {'Idris.Prelude.Types.Left', E59} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V105) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V105))(V102)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V106 of {'Idris.Prelude.Types.Left', E61} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V108) -> begin (V112 = begin (V109 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V98))(V102))), case V109 of {'Idris.Prelude.Types.Left', E63} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V111) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V111))(V102)) end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V112 of {'Idris.Prelude.Types.Left', E65} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V114) -> begin (V122 = begin (V115 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V100))(V102))), case V115 of {'Idris.Prelude.Types.Left', E67} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V117) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> ('dn--un--reify_Reify__ImpClause'(V118, V119, V120, V121)) end end end end, V8, V0, V7, V117))(V102)) end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V122 of {'Idris.Prelude.Types.Left', E69} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V124) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V108, V114, V124}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V125) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V125)) end end end(E57, E58)); _ -> fun (V126) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V126)) end end end(E55, E56)); _ -> fun (V127) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V127)) end end end(E53, E54)); _ -> fun (V128) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V128)) end end; <<"IParameters"/utf8>> -> case V12 of [E71 | E72] -> (fun (V129, V130) -> case V130 of [E73 | E74] -> (fun (V131, V132) -> case V132 of [E75 | E76] -> (fun (V133, V134) -> case V134 of [] -> fun (V135) -> begin (V139 = begin (V136 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V129))(V135))), case V136 of {'Idris.Prelude.Types.Left', E77} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V138) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V138))(V135)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V139 of {'Idris.Prelude.Types.Left', E79} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V141) -> begin (V157 = begin (V142 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V131))(V135))), case V142 of {'Idris.Prelude.Types.Left', E81} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V144) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V149) -> fun (V150) -> fun (V151) -> fun (V152) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V149, V150, V151, V152)) end end end end, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('dn--un--reify_Reify__RawImp'(V153, V154, V155, V156)) end end end end}, V145, V146, V147, V148)) end end end end, V8, V0, V7, V144))(V135)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V157 of {'Idris.Prelude.Types.Left', E83} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V159) -> begin (V167 = begin (V160 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V133))(V135))), case V160 of {'Idris.Prelude.Types.Left', E85} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V162) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('dn--un--reify_Reify__ImpDecl'(V163, V164, V165, V166)) end end end end, V8, V0, V7, V162))(V135)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V167 of {'Idris.Prelude.Types.Left', E87} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V169) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V141, V159, V169}} end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V170) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V170)) end end end(E75, E76)); _ -> fun (V171) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V171)) end end end(E73, E74)); _ -> fun (V172) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V172)) end end end(E71, E72)); _ -> fun (V173) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V173)) end end; <<"IRecord"/utf8>> -> case V12 of [E89 | E90] -> (fun (V174, V175) -> case V175 of [E91 | E92] -> (fun (V176, V177) -> case V177 of [E93 | E94] -> (fun (V178, V179) -> case V179 of [] -> fun (V180) -> begin (V184 = begin (V181 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V174))(V180))), case V181 of {'Idris.Prelude.Types.Left', E95} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V183) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V183))(V180)) end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V184 of {'Idris.Prelude.Types.Left', E97} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V186) -> begin (V190 = begin (V187 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V176))(V180))), case V187 of {'Idris.Prelude.Types.Left', E99} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V189) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Visibility'(V8, V0, V7, V189))(V180)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V190 of {'Idris.Prelude.Types.Left', E101} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V192) -> begin (V196 = begin (V193 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V178))(V180))), case V193 of {'Idris.Prelude.Types.Left', E103} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V195) -> (('dn--un--reify_Reify__ImpRecord'(V8, V0, V7, V195))(V180)) end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V196 of {'Idris.Prelude.Types.Left', E105} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V198) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V186, {'Idris.Prelude.Types.Nothing'}, V192, V198}} end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V199) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V199)) end end end(E93, E94)); _ -> fun (V200) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V200)) end end end(E91, E92)); _ -> fun (V201) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V201)) end end end(E89, E90)); _ -> fun (V202) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V202)) end end; <<"INamespace"/utf8>> -> case V12 of [E107 | E108] -> (fun (V203, V204) -> case V204 of [E109 | E110] -> (fun (V205, V206) -> case V206 of [E111 | E112] -> (fun (V207, V208) -> case V208 of [] -> fun (V209) -> begin (V213 = begin (V210 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V203))(V209))), case V210 of {'Idris.Prelude.Types.Left', E113} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V212) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V212))(V209)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V213 of {'Idris.Prelude.Types.Left', E115} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V215) -> begin (V219 = begin (V216 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V205))(V209))), case V216 of {'Idris.Prelude.Types.Left', E117} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V218) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Namespace'(V8, V0, V7, V218))(V209)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V219 of {'Idris.Prelude.Types.Left', E119} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V221) -> begin (V229 = begin (V222 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V207))(V209))), case V222 of {'Idris.Prelude.Types.Left', E121} -> (fun (V223) -> {'Idris.Prelude.Types.Left', V223} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V224) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('dn--un--reify_Reify__ImpDecl'(V225, V226, V227, V228)) end end end end, V8, V0, V7, V224))(V209)) end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E123} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V231) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V215, V221, V231}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V232) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V232)) end end end(E111, E112)); _ -> fun (V233) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V233)) end end end(E109, E110)); _ -> fun (V234) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V234)) end end end(E107, E108)); _ -> fun (V235) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V235)) end end; <<"ITransform"/utf8>> -> case V12 of [E125 | E126] -> (fun (V236, V237) -> case V237 of [E127 | E128] -> (fun (V238, V239) -> case V239 of [E129 | E130] -> (fun (V240, V241) -> case V241 of [E131 | E132] -> (fun (V242, V243) -> case V243 of [] -> fun (V244) -> begin (V248 = begin (V245 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V236))(V244))), case V245 of {'Idris.Prelude.Types.Left', E133} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V247) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V247))(V244)) end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V248 of {'Idris.Prelude.Types.Left', E135} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V250) -> begin (V254 = begin (V251 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V238))(V244))), case V251 of {'Idris.Prelude.Types.Left', E137} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V253) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V253))(V244)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E139} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V256) -> begin (V260 = begin (V257 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V240))(V244))), case V257 of {'Idris.Prelude.Types.Left', E141} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V259) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V259))(V244)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V260 of {'Idris.Prelude.Types.Left', E143} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V262) -> begin (V266 = begin (V263 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V242))(V244))), case V263 of {'Idris.Prelude.Types.Left', E145} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V265) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V265))(V244)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V266 of {'Idris.Prelude.Types.Left', E147} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V268) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V250, V256, V262, V268}} end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V269) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V269)) end end end(E131, E132)); _ -> fun (V270) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V270)) end end end(E129, E130)); _ -> fun (V271) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V271)) end end end(E127, E128)); _ -> fun (V272) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V272)) end end end(E125, E126)); _ -> fun (V273) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V273)) end end; <<"ILog"/utf8>> -> case V12 of [E149 | E150] -> (fun (V274, V275) -> case V275 of [] -> fun (V276) -> begin (V292 = begin (V277 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V274))(V276))), case V277 of {'Idris.Prelude.Types.Left', E151} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V279) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V284, V285, V286, V287)) end end end end, V280, V281, V282, V283)) end end end end, fun (V288) -> fun (V289) -> fun (V290) -> fun (V291) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V288, V289, V290, V291)) end end end end}, V8, V0, V7, V279))(V276)) end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V292 of {'Idris.Prelude.Types.Left', E153} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V294) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V294}} end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V295) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V295)) end end end(E149, E150)); _ -> fun (V296) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V296)) end end; _ -> fun (V297) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V297)) end end end(E4)); _ -> fun (V298) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V298)) end end end(E2, E3)); _ -> fun (V299) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V299)) end end end(E0, E1)); _ -> fun (V300) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Decl"/utf8>>, V300)) end end.
'case--reify-15822'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"PatClause"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [] -> fun (V22) -> begin (V26 = begin (V23 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V22))), case V23 of {'Idris.Prelude.Types.Left', E11} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V25) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V25))(V22)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E13} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V28) -> begin (V32 = begin (V29 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V22))), case V29 of {'Idris.Prelude.Types.Left', E15} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V31) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V31))(V22)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V32 of {'Idris.Prelude.Types.Left', E17} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V34) -> begin (V38 = begin (V35 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V22))), case V35 of {'Idris.Prelude.Types.Left', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V37) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V37))(V22)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V38 of {'Idris.Prelude.Types.Left', E21} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V28, V34, V40}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V41)) end end end(E9, E10)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V42)) end end end(E7, E8)); _ -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V43)) end end end(E5, E6)); _ -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V44)) end end; <<"WithClause"/utf8>> -> case V12 of [E23 | E24] -> (fun (V45, V46) -> case V46 of [E25 | E26] -> (fun (V47, V48) -> case V48 of [E27 | E28] -> (fun (V49, V50) -> case V50 of [E29 | E30] -> (fun (V51, V52) -> case V52 of [] -> fun (V53) -> begin (V57 = begin (V54 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V45))(V53))), case V54 of {'Idris.Prelude.Types.Left', E31} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V56) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V56))(V53)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V57 of {'Idris.Prelude.Types.Left', E33} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V59) -> begin (V63 = begin (V60 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V47))(V53))), case V60 of {'Idris.Prelude.Types.Left', E35} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V62) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V62))(V53)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V63 of {'Idris.Prelude.Types.Left', E37} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V65) -> begin (V69 = begin (V66 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V49))(V53))), case V66 of {'Idris.Prelude.Types.Left', E39} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V68) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V68))(V53)) end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V69 of {'Idris.Prelude.Types.Left', E41} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V71) -> begin (V79 = begin (V72 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V51))(V53))), case V72 of {'Idris.Prelude.Types.Left', E43} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V74) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ('dn--un--reify_Reify__ImpClause'(V75, V76, V77, V78)) end end end end, V8, V0, V7, V74))(V53)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V79 of {'Idris.Prelude.Types.Left', E45} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V59, V65, V71, [], V81}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V82) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V82)) end end end(E29, E30)); _ -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V83)) end end end(E27, E28)); _ -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V84)) end end end(E25, E26)); _ -> fun (V85) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V85)) end end end(E23, E24)); _ -> fun (V86) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V86)) end end; <<"ImpossibleClause"/utf8>> -> case V12 of [E47 | E48] -> (fun (V87, V88) -> case V88 of [E49 | E50] -> (fun (V89, V90) -> case V90 of [] -> fun (V91) -> begin (V95 = begin (V92 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V87))(V91))), case V92 of {'Idris.Prelude.Types.Left', E51} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V94) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V94))(V91)) end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V95 of {'Idris.Prelude.Types.Left', E53} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V97) -> begin (V101 = begin (V98 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V89))(V91))), case V98 of {'Idris.Prelude.Types.Left', E55} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V100) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V100))(V91)) end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V101 of {'Idris.Prelude.Types.Left', E57} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V103) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V97, V103}} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V104) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V104)) end end end(E49, E50)); _ -> fun (V105) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V105)) end end end(E47, E48)); _ -> fun (V106) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V106)) end end; _ -> fun (V107) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V107)) end end end(E4)); _ -> fun (V108) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V108)) end end end(E2, E3)); _ -> fun (V109) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V109)) end end end(E0, E1)); _ -> fun (V110) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Clause"/utf8>>, V110)) end end.
'case--reify-15584'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkRecord"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V74 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V46, V47, V48, V49)) end end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V54, V55, V56, V57)) end end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(PiInfo $t)'('erased', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('dn--un--reify_Reify__RawImp'(V66, V67, V68, V69)) end end end end, V62, V63, V64, V65)) end end end end, fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> ('dn--un--reify_Reify__RawImp'(V70, V71, V72, V73)) end end end end}, V58, V59, V60, V61)) end end end end}, V50, V51, V52, V53)) end end end end}, V42, V43, V44, V45)) end end end end, V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V74 of {'Idris.Prelude.Types.Left', E25} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V76) -> begin (V80 = begin (V77 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V77 of {'Idris.Prelude.Types.Left', E27} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V79) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V79))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V80 of {'Idris.Prelude.Types.Left', E29} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V82) -> begin (V90 = begin (V83 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V83 of {'Idris.Prelude.Types.Left', E31} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V85) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('dn--un--reify_Reify__IField'(V86, V87, V88, V89)) end end end end, V8, V0, V7, V85))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E33} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V32, V38, V76, V82, V92}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V93)) end end end(E13, E14)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V94)) end end end(E11, E12)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V95)) end end end(E9, E10)); _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V96)) end end end(E7, E8)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V97)) end end end(E5, E6)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V98)) end end; _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V99)) end end end(E4)); _ -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V100)) end end end(E2, E3)); _ -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V101)) end end end(E0, E1)); _ -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Record"/utf8>>, V102)) end end.
'case--reify-15371'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkIField"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V46 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(PiInfo $t)'('erased', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('dn--un--reify_Reify__RawImp'(V42, V43, V44, V45)) end end end end, V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V46 of {'Idris.Prelude.Types.Left', E25} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V48) -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V49 of {'Idris.Prelude.Types.Left', E27} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V51) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V51))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E33} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V32, V38, V48, V54, V60}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V61)) end end end(E13, E14)); _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V62)) end end end(E11, E12)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V63)) end end end(E9, E10)); _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V64)) end end end(E7, E8)); _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V65)) end end end(E5, E6)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V66)) end end; _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V67)) end end end(E4)); _ -> fun (V68) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V68)) end end end(E2, E3)); _ -> fun (V69) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V69)) end end end(E0, E1)); _ -> fun (V70) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IField"/utf8>>, V70)) end end.
'case--reify-15065'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkData"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [E11 | E12] -> (fun (V22, V23) -> case V23 of [E13 | E14] -> (fun (V24, V25) -> case V25 of [] -> fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V26))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V29))(V26)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V36 = begin (V33 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V26))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V35))(V26)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V36 of {'Idris.Prelude.Types.Left', E21} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V38) -> begin (V42 = begin (V39 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V26))), case V39 of {'Idris.Prelude.Types.Left', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V41) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V41))(V26)) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V42 of {'Idris.Prelude.Types.Left', E25} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V44) -> begin (V52 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V22))(V26))), case V45 of {'Idris.Prelude.Types.Left', E27} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V47) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--reify_Reify__DataOpt'(V48, V49, V50, V51)) end end end end, V8, V0, V7, V47))(V26)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V62 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V24))(V26))), case V55 of {'Idris.Prelude.Types.Left', E31} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V57) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reify_Reify__ImpTy'(V58, V59, V60, V61)) end end end end, V8, V0, V7, V57))(V26)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E33} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V32, V38, V44, V54, V64}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V65)) end end end(E13, E14)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V66)) end end end(E11, E12)); _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V67)) end end end(E9, E10)); _ -> fun (V68) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V68)) end end end(E7, E8)); _ -> fun (V69) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V69)) end end end(E5, E6)); _ -> fun (V70) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V70)) end end; <<"MkLater"/utf8>> -> case V12 of [E35 | E36] -> (fun (V71, V72) -> case V72 of [E37 | E38] -> (fun (V73, V74) -> case V74 of [E39 | E40] -> (fun (V75, V76) -> case V76 of [] -> fun (V77) -> begin (V81 = begin (V78 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V71))(V77))), case V78 of {'Idris.Prelude.Types.Left', E41} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V80) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V80))(V77)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V81 of {'Idris.Prelude.Types.Left', E43} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V83) -> begin (V87 = begin (V84 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V73))(V77))), case V84 of {'Idris.Prelude.Types.Left', E45} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V86) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V86))(V77)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V87 of {'Idris.Prelude.Types.Left', E47} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V89) -> begin (V93 = begin (V90 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V75))(V77))), case V90 of {'Idris.Prelude.Types.Left', E49} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V92) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V92))(V77)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E51} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V83, V89, V95}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V96)) end end end(E39, E40)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V97)) end end end(E37, E38)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V98)) end end end(E35, E36)); _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V99)) end end; _ -> fun (V100) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V100)) end end end(E4)); _ -> fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V101)) end end end(E2, E3)); _ -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V102)) end end end(E0, E1)); _ -> fun (V103) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"Data"/utf8>>, V103)) end end.
'case--reify-14788'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"SearchBy"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [] -> fun (V18) -> begin (V26 = begin (V19 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V18))), case V19 of {'Idris.Prelude.Types.Left', E7} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V21) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V22, V23, V24, V25)) end end end end, V8, V0, V7, V21))(V18)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E9} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V28}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V29)) end end end(E5, E6)); _ -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V30)) end end; <<"NoHints"/utf8>> -> fun (V31) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}} end; <<"UniqueSearch"/utf8>> -> fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}} end; <<"External"/utf8>> -> fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}} end; <<"NoNewtype"/utf8>> -> fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}} end; _ -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V35)) end end end(E4)); _ -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V36)) end end end(E2, E3)); _ -> fun (V37) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V37)) end end end(E0, E1)); _ -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DataOpt"/utf8>>, V38)) end end.
'case--reify-14615'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"MkTy"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [E9 | E10] -> (fun (V20, V21) -> case V21 of [] -> fun (V22) -> begin (V26 = begin (V23 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V22))), case V23 of {'Idris.Prelude.Types.Left', E11} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V25) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V25))(V22)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V26 of {'Idris.Prelude.Types.Left', E13} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V28) -> begin (V32 = begin (V29 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V22))), case V29 of {'Idris.Prelude.Types.Left', E15} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V31) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V31))(V22)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V32 of {'Idris.Prelude.Types.Left', E17} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V34) -> begin (V38 = begin (V35 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V20))(V22))), case V35 of {'Idris.Prelude.Types.Left', E19} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V37) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V37))(V22)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V38 of {'Idris.Prelude.Types.Left', E21} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V28, V34, V40}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V41)) end end end(E9, E10)); _ -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V42)) end end end(E7, E8)); _ -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V43)) end end end(E5, E6)); _ -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V44)) end end; _ -> fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V45)) end end end(E4)); _ -> fun (V46) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V46)) end end end(E2, E3)); _ -> fun (V47) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V47)) end end end(E0, E1)); _ -> fun (V48) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"ITy"/utf8>>, V48)) end end.
'case--reify-14089'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"Inline"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}} end; <<"TCInline"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}} end; <<"Hint"/utf8>> -> case V12 of [E5 | E6] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V24 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V20))), case V21 of {'Idris.Prelude.Types.Left', E7} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Bool'(V8, V0, V7, V23))(V20)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V26}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V27)) end end end(E5, E6)); _ -> fun (V28) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V28)) end end; <<"GlobalHint"/utf8>> -> case V12 of [E11 | E12] -> (fun (V29, V30) -> case V30 of [] -> fun (V31) -> begin (V35 = begin (V32 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V29))(V31))), case V32 of {'Idris.Prelude.Types.Left', E13} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V34) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Bool'(V8, V0, V7, V34))(V31)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V35 of {'Idris.Prelude.Types.Left', E15} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V37}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V38)) end end end(E11, E12)); _ -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V39)) end end; <<"ExternFn"/utf8>> -> fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}} end; <<"ForeignFn"/utf8>> -> case V12 of [E17 | E18] -> (fun (V41, V42) -> case V42 of [] -> fun (V43) -> begin (V51 = begin (V44 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V41))(V43))), case V44 of {'Idris.Prelude.Types.Left', E19} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V46) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('dn--un--reify_Reify__RawImp'(V47, V48, V49, V50)) end end end end, V8, V0, V7, V46))(V43)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V51 of {'Idris.Prelude.Types.Left', E21} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V53}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V54) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V54)) end end end(E17, E18)); _ -> fun (V55) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V55)) end end; <<"Invertible"/utf8>> -> fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}} end; <<"Totality"/utf8>> -> case V12 of [E23 | E24] -> (fun (V57, V58) -> case V58 of [] -> fun (V59) -> begin (V63 = begin (V60 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V57))(V59))), case V60 of {'Idris.Prelude.Types.Left', E25} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V62) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__TotalReq'(V8, V0, V7, V62))(V59)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V63 of {'Idris.Prelude.Types.Left', E27} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', V65}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V66)) end end end(E23, E24)); _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V67)) end end; <<"Macro"/utf8>> -> fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}} end; <<"SpecArgs"/utf8>> -> case V12 of [E29 | E30] -> (fun (V69, V70) -> case V70 of [] -> fun (V71) -> begin (V79 = begin (V72 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V69))(V71))), case V72 of {'Idris.Prelude.Types.Left', E31} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V74) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V75, V76, V77, V78)) end end end end, V8, V0, V7, V74))(V71)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V79 of {'Idris.Prelude.Types.Left', E33} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V81}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V82) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V82)) end end end(E29, E30)); _ -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V83)) end end; _ -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V84)) end end end(E4)); _ -> fun (V85) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V85)) end end end(E2, E3)); _ -> fun (V86) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V86)) end end end(E0, E1)); _ -> fun (V87) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"FnOpt"/utf8>>, V87)) end end.
'case--reify-13884'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"FirstSuccess"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}} end; <<"Unique"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}} end; <<"UniqueDefault"/utf8>> -> case V12 of [E5 | E6] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V24 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V20))), case V21 of {'Idris.Prelude.Types.Left', E7} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V23) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V23))(V20)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V26}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V27)) end end end(E5, E6)); _ -> fun (V28) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V28)) end end; _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V29)) end end end(E4)); _ -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V30)) end end end(E2, E3)); _ -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V31)) end end end(E0, E1)); _ -> fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"AltType"/utf8>>, V32)) end end.
'case--reify-13654'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"ISetField"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V28 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V20))), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V24, V25, V26, V27)) end end end end, V8, V0, V7, V23))(V20)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> begin (V34 = begin (V31 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V20))), case V31 of {'Idris.Prelude.Types.Left', E13} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V33) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V33))(V20)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V34 of {'Idris.Prelude.Types.Left', E15} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V30, V36}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V37) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V37)) end end end(E7, E8)); _ -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V38)) end end end(E5, E6)); _ -> fun (V39) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V39)) end end; <<"ISetFieldApp"/utf8>> -> case V12 of [E17 | E18] -> (fun (V40, V41) -> case V41 of [E19 | E20] -> (fun (V42, V43) -> case V43 of [] -> fun (V44) -> begin (V52 = begin (V45 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V40))(V44))), case V45 of {'Idris.Prelude.Types.Left', E21} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V47) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V48, V49, V50, V51)) end end end end, V8, V0, V7, V47))(V44)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E23} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V42))(V44))), case V55 of {'Idris.Prelude.Types.Left', E25} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V57) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V57))(V44)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E27} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V54, V60}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V61) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V61)) end end end(E19, E20)); _ -> fun (V62) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V62)) end end end(E17, E18)); _ -> fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V63)) end end; _ -> fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V64)) end end end(E4)); _ -> fun (V65) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V65)) end end end(E2, E3)); _ -> fun (V66) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V66)) end end end(E0, E1)); _ -> fun (V67) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"IFieldUpdate"/utf8>>, V67)) end end.
'case--reify-10949'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"IVar"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [E7 | E8] -> (fun (V18, V19) -> case V19 of [] -> fun (V20) -> begin (V24 = begin (V21 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V20))), case V21 of {'Idris.Prelude.Types.Left', E9} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V23) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V23))(V20)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V24 of {'Idris.Prelude.Types.Left', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V26) -> begin (V30 = begin (V27 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V18))(V20))), case V27 of {'Idris.Prelude.Types.Left', E13} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V29) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V29))(V20)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V30 of {'Idris.Prelude.Types.Left', E15} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V26, V32}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V33)) end end end(E7, E8)); _ -> fun (V34) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V34)) end end end(E5, E6)); _ -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V35)) end end; <<"IPi"/utf8>> -> case V12 of [E17 | E18] -> (fun (V36, V37) -> case V37 of [E19 | E20] -> (fun (V38, V39) -> case V39 of [E21 | E22] -> (fun (V40, V41) -> case V41 of [E23 | E24] -> (fun (V42, V43) -> case V43 of [E25 | E26] -> (fun (V44, V45) -> case V45 of [E27 | E28] -> (fun (V46, V47) -> case V47 of [] -> fun (V48) -> begin (V52 = begin (V49 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V36))(V48))), case V49 of {'Idris.Prelude.Types.Left', E29} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V51) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V51))(V48)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V52 of {'Idris.Prelude.Types.Left', E31} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V54) -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V38))(V48))), case V55 of {'Idris.Prelude.Types.Left', E33} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V57) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V57))(V48)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E35} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V60) -> begin (V68 = begin (V61 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V40))(V48))), case V61 of {'Idris.Prelude.Types.Left', E37} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V63) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(PiInfo $t)'('erased', fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('dn--un--reify_Reify__RawImp'(V64, V65, V66, V67)) end end end end, V8, V0, V7, V63))(V48)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E39} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V70) -> begin (V78 = begin (V71 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V42))(V48))), case V71 of {'Idris.Prelude.Types.Left', E41} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V73) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(Maybe $a)'('erased', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V74, V75, V76, V77)) end end end end, V8, V0, V7, V73))(V48)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V78 of {'Idris.Prelude.Types.Left', E43} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V80) -> begin (V84 = begin (V81 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V44))(V48))), case V81 of {'Idris.Prelude.Types.Left', E45} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V83) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V83))(V48)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V84 of {'Idris.Prelude.Types.Left', E47} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V86) -> begin (V90 = begin (V87 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V46))(V48))), case V87 of {'Idris.Prelude.Types.Left', E49} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V89) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V89))(V48)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V90 of {'Idris.Prelude.Types.Left', E51} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V54, V60, V70, V80, V86, V92}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V93)) end end end(E27, E28)); _ -> fun (V94) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V94)) end end end(E25, E26)); _ -> fun (V95) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V95)) end end end(E23, E24)); _ -> fun (V96) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V96)) end end end(E21, E22)); _ -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V97)) end end end(E19, E20)); _ -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V98)) end end end(E17, E18)); _ -> fun (V99) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V99)) end end; <<"ILam"/utf8>> -> case V12 of [E53 | E54] -> (fun (V100, V101) -> case V101 of [E55 | E56] -> (fun (V102, V103) -> case V103 of [E57 | E58] -> (fun (V104, V105) -> case V105 of [E59 | E60] -> (fun (V106, V107) -> case V107 of [E61 | E62] -> (fun (V108, V109) -> case V109 of [E63 | E64] -> (fun (V110, V111) -> case V111 of [] -> fun (V112) -> begin (V116 = begin (V113 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V100))(V112))), case V113 of {'Idris.Prelude.Types.Left', E65} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V115) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V115))(V112)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V116 of {'Idris.Prelude.Types.Left', E67} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V118) -> begin (V122 = begin (V119 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V102))(V112))), case V119 of {'Idris.Prelude.Types.Left', E69} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V121) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V121))(V112)) end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V122 of {'Idris.Prelude.Types.Left', E71} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V124) -> begin (V132 = begin (V125 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V104))(V112))), case V125 of {'Idris.Prelude.Types.Left', E73} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V127) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(PiInfo $t)'('erased', fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reify_Reify__RawImp'(V128, V129, V130, V131)) end end end end, V8, V0, V7, V127))(V112)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E75} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V134) -> begin (V142 = begin (V135 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V106))(V112))), case V135 of {'Idris.Prelude.Types.Left', E77} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V137) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(Maybe $a)'('erased', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V138, V139, V140, V141)) end end end end, V8, V0, V7, V137))(V112)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V142 of {'Idris.Prelude.Types.Left', E79} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V144) -> begin (V148 = begin (V145 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V108))(V112))), case V145 of {'Idris.Prelude.Types.Left', E81} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V147) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V147))(V112)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V148 of {'Idris.Prelude.Types.Left', E83} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V150) -> begin (V154 = begin (V151 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V110))(V112))), case V151 of {'Idris.Prelude.Types.Left', E85} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V153) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V153))(V112)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V154 of {'Idris.Prelude.Types.Left', E87} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V156) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V118, V124, V134, V144, V150, V156}} end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V157) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V157)) end end end(E63, E64)); _ -> fun (V158) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V158)) end end end(E61, E62)); _ -> fun (V159) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V159)) end end end(E59, E60)); _ -> fun (V160) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V160)) end end end(E57, E58)); _ -> fun (V161) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V161)) end end end(E55, E56)); _ -> fun (V162) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V162)) end end end(E53, E54)); _ -> fun (V163) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V163)) end end; <<"ILet"/utf8>> -> case V12 of [E89 | E90] -> (fun (V164, V165) -> case V165 of [E91 | E92] -> (fun (V166, V167) -> case V167 of [E93 | E94] -> (fun (V168, V169) -> case V169 of [E95 | E96] -> (fun (V170, V171) -> case V171 of [E97 | E98] -> (fun (V172, V173) -> case V173 of [E99 | E100] -> (fun (V174, V175) -> case V175 of [] -> fun (V176) -> begin (V180 = begin (V177 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V164))(V176))), case V177 of {'Idris.Prelude.Types.Left', E101} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V179) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V179))(V176)) end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V180 of {'Idris.Prelude.Types.Left', E103} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V182) -> begin (V186 = begin (V183 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V166))(V176))), case V183 of {'Idris.Prelude.Types.Left', E105} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V185) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V185))(V176)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V186 of {'Idris.Prelude.Types.Left', E107} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V188) -> begin (V192 = begin (V189 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V168))(V176))), case V189 of {'Idris.Prelude.Types.Left', E109} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V191) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V191))(V176)) end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V192 of {'Idris.Prelude.Types.Left', E111} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V194) -> begin (V198 = begin (V195 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V170))(V176))), case V195 of {'Idris.Prelude.Types.Left', E113} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V197) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V197))(V176)) end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V198 of {'Idris.Prelude.Types.Left', E115} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V200) -> begin (V204 = begin (V201 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V172))(V176))), case V201 of {'Idris.Prelude.Types.Left', E117} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V203) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V203))(V176)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V204 of {'Idris.Prelude.Types.Left', E119} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V206) -> begin (V210 = begin (V207 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V174))(V176))), case V207 of {'Idris.Prelude.Types.Left', E121} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V209) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V209))(V176)) end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V210 of {'Idris.Prelude.Types.Left', E123} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V212) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V182, V188, V194, V200, V206, V212}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V213) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V213)) end end end(E99, E100)); _ -> fun (V214) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V214)) end end end(E97, E98)); _ -> fun (V215) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V215)) end end end(E95, E96)); _ -> fun (V216) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V216)) end end end(E93, E94)); _ -> fun (V217) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V217)) end end end(E91, E92)); _ -> fun (V218) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V218)) end end end(E89, E90)); _ -> fun (V219) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V219)) end end; <<"ICase"/utf8>> -> case V12 of [E125 | E126] -> (fun (V220, V221) -> case V221 of [E127 | E128] -> (fun (V222, V223) -> case V223 of [E129 | E130] -> (fun (V224, V225) -> case V225 of [E131 | E132] -> (fun (V226, V227) -> case V227 of [] -> fun (V228) -> begin (V232 = begin (V229 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V220))(V228))), case V229 of {'Idris.Prelude.Types.Left', E133} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V231) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V231))(V228)) end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V232 of {'Idris.Prelude.Types.Left', E135} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V234) -> begin (V238 = begin (V235 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V222))(V228))), case V235 of {'Idris.Prelude.Types.Left', E137} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V237) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V237))(V228)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V238 of {'Idris.Prelude.Types.Left', E139} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V240) -> begin (V244 = begin (V241 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V224))(V228))), case V241 of {'Idris.Prelude.Types.Left', E141} -> (fun (V242) -> {'Idris.Prelude.Types.Left', V242} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V243) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V243))(V228)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V244 of {'Idris.Prelude.Types.Left', E143} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V246) -> begin (V254 = begin (V247 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V226))(V228))), case V247 of {'Idris.Prelude.Types.Left', E145} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V249) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> ('dn--un--reify_Reify__ImpClause'(V250, V251, V252, V253)) end end end end, V8, V0, V7, V249))(V228)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V254 of {'Idris.Prelude.Types.Left', E147} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V256) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V234, V240, V246, V256}} end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V257) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V257)) end end end(E131, E132)); _ -> fun (V258) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V258)) end end end(E129, E130)); _ -> fun (V259) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V259)) end end end(E127, E128)); _ -> fun (V260) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V260)) end end end(E125, E126)); _ -> fun (V261) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V261)) end end; <<"ILocal"/utf8>> -> case V12 of [E149 | E150] -> (fun (V262, V263) -> case V263 of [E151 | E152] -> (fun (V264, V265) -> case V265 of [E153 | E154] -> (fun (V266, V267) -> case V267 of [] -> fun (V268) -> begin (V272 = begin (V269 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V262))(V268))), case V269 of {'Idris.Prelude.Types.Left', E155} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V271) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V271))(V268)) end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V272 of {'Idris.Prelude.Types.Left', E157} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V274) -> begin (V282 = begin (V275 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V264))(V268))), case V275 of {'Idris.Prelude.Types.Left', E159} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V277) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> ('dn--un--reify_Reify__ImpDecl'(V278, V279, V280, V281)) end end end end, V8, V0, V7, V277))(V268)) end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V282 of {'Idris.Prelude.Types.Left', E161} -> (fun (V283) -> {'Idris.Prelude.Types.Left', V283} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V284) -> begin (V288 = begin (V285 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V266))(V268))), case V285 of {'Idris.Prelude.Types.Left', E163} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V287) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V287))(V268)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V288 of {'Idris.Prelude.Types.Left', E165} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V290) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V274, V284, V290}} end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V291) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V291)) end end end(E153, E154)); _ -> fun (V292) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V292)) end end end(E151, E152)); _ -> fun (V293) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V293)) end end end(E149, E150)); _ -> fun (V294) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V294)) end end; <<"IUpdate"/utf8>> -> case V12 of [E167 | E168] -> (fun (V295, V296) -> case V296 of [E169 | E170] -> (fun (V297, V298) -> case V298 of [E171 | E172] -> (fun (V299, V300) -> case V300 of [] -> fun (V301) -> begin (V305 = begin (V302 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V295))(V301))), case V302 of {'Idris.Prelude.Types.Left', E173} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V304) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V304))(V301)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V305 of {'Idris.Prelude.Types.Left', E175} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V307) -> begin (V315 = begin (V308 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V297))(V301))), case V308 of {'Idris.Prelude.Types.Left', E177} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V310) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V311) -> fun (V312) -> fun (V313) -> fun (V314) -> ('dn--un--reify_Reify__IFieldUpdate'(V311, V312, V313, V314)) end end end end, V8, V0, V7, V310))(V301)) end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V315 of {'Idris.Prelude.Types.Left', E179} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V317) -> begin (V321 = begin (V318 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V299))(V301))), case V318 of {'Idris.Prelude.Types.Left', E181} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V320) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V320))(V301)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V321 of {'Idris.Prelude.Types.Left', E183} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V323) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V307, V317, V323}} end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V324) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V324)) end end end(E171, E172)); _ -> fun (V325) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V325)) end end end(E169, E170)); _ -> fun (V326) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V326)) end end end(E167, E168)); _ -> fun (V327) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V327)) end end; <<"IApp"/utf8>> -> case V12 of [E185 | E186] -> (fun (V328, V329) -> case V329 of [E187 | E188] -> (fun (V330, V331) -> case V331 of [E189 | E190] -> (fun (V332, V333) -> case V333 of [] -> fun (V334) -> begin (V338 = begin (V335 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V328))(V334))), case V335 of {'Idris.Prelude.Types.Left', E191} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V337) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V337))(V334)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V338 of {'Idris.Prelude.Types.Left', E193} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V340) -> begin (V344 = begin (V341 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V330))(V334))), case V341 of {'Idris.Prelude.Types.Left', E195} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V343) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V343))(V334)) end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V344 of {'Idris.Prelude.Types.Left', E197} -> (fun (V345) -> {'Idris.Prelude.Types.Left', V345} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V346) -> begin (V350 = begin (V347 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V332))(V334))), case V347 of {'Idris.Prelude.Types.Left', E199} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V349) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V349))(V334)) end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V350 of {'Idris.Prelude.Types.Left', E201} -> (fun (V351) -> {'Idris.Prelude.Types.Left', V351} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V352) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V340, V346, V352}} end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V353) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V353)) end end end(E189, E190)); _ -> fun (V354) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V354)) end end end(E187, E188)); _ -> fun (V355) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V355)) end end end(E185, E186)); _ -> fun (V356) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V356)) end end; <<"IImplicitApp"/utf8>> -> case V12 of [E203 | E204] -> (fun (V357, V358) -> case V358 of [E205 | E206] -> (fun (V359, V360) -> case V360 of [E207 | E208] -> (fun (V361, V362) -> case V362 of [E209 | E210] -> (fun (V363, V364) -> case V364 of [] -> fun (V365) -> begin (V369 = begin (V366 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V357))(V365))), case V366 of {'Idris.Prelude.Types.Left', E211} -> (fun (V367) -> {'Idris.Prelude.Types.Left', V367} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V368) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V368))(V365)) end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V369 of {'Idris.Prelude.Types.Left', E213} -> (fun (V370) -> {'Idris.Prelude.Types.Left', V370} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V371) -> begin (V375 = begin (V372 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V359))(V365))), case V372 of {'Idris.Prelude.Types.Left', E215} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V374) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V374))(V365)) end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V375 of {'Idris.Prelude.Types.Left', E217} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V377) -> begin (V385 = begin (V378 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V361))(V365))), case V378 of {'Idris.Prelude.Types.Left', E219} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V380) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(Maybe $a)'('erased', fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V381, V382, V383, V384)) end end end end, V8, V0, V7, V380))(V365)) end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V385 of {'Idris.Prelude.Types.Left', E221} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V387) -> begin (V391 = begin (V388 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V363))(V365))), case V388 of {'Idris.Prelude.Types.Left', E223} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V390) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V390))(V365)) end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V391 of {'Idris.Prelude.Types.Left', E225} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E225)); {'Idris.Prelude.Types.Right', E226} -> (fun (V393) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IImplicitApp', V371, V377, V387, V393}} end(E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V394) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V394)) end end end(E209, E210)); _ -> fun (V395) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V395)) end end end(E207, E208)); _ -> fun (V396) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V396)) end end end(E205, E206)); _ -> fun (V397) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V397)) end end end(E203, E204)); _ -> fun (V398) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V398)) end end; <<"IWithApp"/utf8>> -> case V12 of [E227 | E228] -> (fun (V399, V400) -> case V400 of [E229 | E230] -> (fun (V401, V402) -> case V402 of [E231 | E232] -> (fun (V403, V404) -> case V404 of [] -> fun (V405) -> begin (V409 = begin (V406 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V399))(V405))), case V406 of {'Idris.Prelude.Types.Left', E233} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V408) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V408))(V405)) end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V409 of {'Idris.Prelude.Types.Left', E235} -> (fun (V410) -> {'Idris.Prelude.Types.Left', V410} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V411) -> begin (V415 = begin (V412 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V401))(V405))), case V412 of {'Idris.Prelude.Types.Left', E237} -> (fun (V413) -> {'Idris.Prelude.Types.Left', V413} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V414) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V414))(V405)) end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V415 of {'Idris.Prelude.Types.Left', E239} -> (fun (V416) -> {'Idris.Prelude.Types.Left', V416} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V417) -> begin (V421 = begin (V418 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V403))(V405))), case V418 of {'Idris.Prelude.Types.Left', E241} -> (fun (V419) -> {'Idris.Prelude.Types.Left', V419} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V420) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V420))(V405)) end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V421 of {'Idris.Prelude.Types.Left', E243} -> (fun (V422) -> {'Idris.Prelude.Types.Left', V422} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V423) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V411, V417, V423}} end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V424) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V424)) end end end(E231, E232)); _ -> fun (V425) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V425)) end end end(E229, E230)); _ -> fun (V426) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V426)) end end end(E227, E228)); _ -> fun (V427) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V427)) end end; <<"ISearch"/utf8>> -> case V12 of [E245 | E246] -> (fun (V428, V429) -> case V429 of [E247 | E248] -> (fun (V430, V431) -> case V431 of [] -> fun (V432) -> begin (V436 = begin (V433 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V428))(V432))), case V433 of {'Idris.Prelude.Types.Left', E249} -> (fun (V434) -> {'Idris.Prelude.Types.Left', V434} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V435) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V435))(V432)) end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V436 of {'Idris.Prelude.Types.Left', E251} -> (fun (V437) -> {'Idris.Prelude.Types.Left', V437} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V438) -> begin (V442 = begin (V439 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V430))(V432))), case V439 of {'Idris.Prelude.Types.Left', E253} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V441) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Nat'(V8, V0, V7, V441))(V432)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V442 of {'Idris.Prelude.Types.Left', E255} -> (fun (V443) -> {'Idris.Prelude.Types.Left', V443} end(E255)); {'Idris.Prelude.Types.Right', E256} -> (fun (V444) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V438, V444}} end(E256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V445) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V445)) end end end(E247, E248)); _ -> fun (V446) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V446)) end end end(E245, E246)); _ -> fun (V447) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V447)) end end; <<"IAlternative"/utf8>> -> case V12 of [E257 | E258] -> (fun (V448, V449) -> case V449 of [E259 | E260] -> (fun (V450, V451) -> case V451 of [E261 | E262] -> (fun (V452, V453) -> case V453 of [] -> fun (V454) -> begin (V458 = begin (V455 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V448))(V454))), case V455 of {'Idris.Prelude.Types.Left', E263} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V457) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V457))(V454)) end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V458 of {'Idris.Prelude.Types.Left', E265} -> (fun (V459) -> {'Idris.Prelude.Types.Left', V459} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V460) -> begin (V464 = begin (V461 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V450))(V454))), case V461 of {'Idris.Prelude.Types.Left', E267} -> (fun (V462) -> {'Idris.Prelude.Types.Left', V462} end(E267)); {'Idris.Prelude.Types.Right', E268} -> (fun (V463) -> (('dn--un--reify_Reify__AltType'(V8, V0, V7, V463))(V454)) end(E268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V464 of {'Idris.Prelude.Types.Left', E269} -> (fun (V465) -> {'Idris.Prelude.Types.Left', V465} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V466) -> begin (V474 = begin (V467 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V452))(V454))), case V467 of {'Idris.Prelude.Types.Left', E271} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V469) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> ('dn--un--reify_Reify__RawImp'(V470, V471, V472, V473)) end end end end, V8, V0, V7, V469))(V454)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V474 of {'Idris.Prelude.Types.Left', E273} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V476) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V460, V466, V476}} end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V477) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V477)) end end end(E261, E262)); _ -> fun (V478) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V478)) end end end(E259, E260)); _ -> fun (V479) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V479)) end end end(E257, E258)); _ -> fun (V480) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V480)) end end; <<"IRewrite"/utf8>> -> case V12 of [E275 | E276] -> (fun (V481, V482) -> case V482 of [E277 | E278] -> (fun (V483, V484) -> case V484 of [E279 | E280] -> (fun (V485, V486) -> case V486 of [] -> fun (V487) -> begin (V491 = begin (V488 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V481))(V487))), case V488 of {'Idris.Prelude.Types.Left', E281} -> (fun (V489) -> {'Idris.Prelude.Types.Left', V489} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V490) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V490))(V487)) end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V491 of {'Idris.Prelude.Types.Left', E283} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V493) -> begin (V497 = begin (V494 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V483))(V487))), case V494 of {'Idris.Prelude.Types.Left', E285} -> (fun (V495) -> {'Idris.Prelude.Types.Left', V495} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V496) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V496))(V487)) end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V497 of {'Idris.Prelude.Types.Left', E287} -> (fun (V498) -> {'Idris.Prelude.Types.Left', V498} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V499) -> begin (V503 = begin (V500 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V485))(V487))), case V500 of {'Idris.Prelude.Types.Left', E289} -> (fun (V501) -> {'Idris.Prelude.Types.Left', V501} end(E289)); {'Idris.Prelude.Types.Right', E290} -> (fun (V502) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V502))(V487)) end(E290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V503 of {'Idris.Prelude.Types.Left', E291} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E291)); {'Idris.Prelude.Types.Right', E292} -> (fun (V505) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V493, V499, V505}} end(E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V506) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V506)) end end end(E279, E280)); _ -> fun (V507) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V507)) end end end(E277, E278)); _ -> fun (V508) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V508)) end end end(E275, E276)); _ -> fun (V509) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V509)) end end; <<"IBindHere"/utf8>> -> case V12 of [E293 | E294] -> (fun (V510, V511) -> case V511 of [E295 | E296] -> (fun (V512, V513) -> case V513 of [E297 | E298] -> (fun (V514, V515) -> case V515 of [] -> fun (V516) -> begin (V520 = begin (V517 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V510))(V516))), case V517 of {'Idris.Prelude.Types.Left', E299} -> (fun (V518) -> {'Idris.Prelude.Types.Left', V518} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V519) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V519))(V516)) end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V520 of {'Idris.Prelude.Types.Left', E301} -> (fun (V521) -> {'Idris.Prelude.Types.Left', V521} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V522) -> begin (V526 = begin (V523 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V512))(V516))), case V523 of {'Idris.Prelude.Types.Left', E303} -> (fun (V524) -> {'Idris.Prelude.Types.Left', V524} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V525) -> (('dn--un--reify_Reify__BindMode'(V8, V0, V7, V525))(V516)) end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V526 of {'Idris.Prelude.Types.Left', E305} -> (fun (V527) -> {'Idris.Prelude.Types.Left', V527} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V528) -> begin (V532 = begin (V529 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V514))(V516))), case V529 of {'Idris.Prelude.Types.Left', E307} -> (fun (V530) -> {'Idris.Prelude.Types.Left', V530} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V531) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V531))(V516)) end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V532 of {'Idris.Prelude.Types.Left', E309} -> (fun (V533) -> {'Idris.Prelude.Types.Left', V533} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V534) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V522, V528, V534}} end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V535) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V535)) end end end(E297, E298)); _ -> fun (V536) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V536)) end end end(E295, E296)); _ -> fun (V537) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V537)) end end end(E293, E294)); _ -> fun (V538) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V538)) end end; <<"IBindVar"/utf8>> -> case V12 of [E311 | E312] -> (fun (V539, V540) -> case V540 of [E313 | E314] -> (fun (V541, V542) -> case V542 of [] -> fun (V543) -> begin (V547 = begin (V544 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V539))(V543))), case V544 of {'Idris.Prelude.Types.Left', E315} -> (fun (V545) -> {'Idris.Prelude.Types.Left', V545} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V546) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V546))(V543)) end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V547 of {'Idris.Prelude.Types.Left', E317} -> (fun (V548) -> {'Idris.Prelude.Types.Left', V548} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V549) -> begin (V553 = begin (V550 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V541))(V543))), case V550 of {'Idris.Prelude.Types.Left', E319} -> (fun (V551) -> {'Idris.Prelude.Types.Left', V551} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V552) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V8, V0, V7, V552))(V543)) end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V553 of {'Idris.Prelude.Types.Left', E321} -> (fun (V554) -> {'Idris.Prelude.Types.Left', V554} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V555) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V549, V555}} end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V556) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V556)) end end end(E313, E314)); _ -> fun (V557) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V557)) end end end(E311, E312)); _ -> fun (V558) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V558)) end end; <<"IAs"/utf8>> -> case V12 of [E323 | E324] -> (fun (V559, V560) -> case V560 of [E325 | E326] -> (fun (V561, V562) -> case V562 of [E327 | E328] -> (fun (V563, V564) -> case V564 of [E329 | E330] -> (fun (V565, V566) -> case V566 of [] -> fun (V567) -> begin (V571 = begin (V568 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V559))(V567))), case V568 of {'Idris.Prelude.Types.Left', E331} -> (fun (V569) -> {'Idris.Prelude.Types.Left', V569} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V570) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V570))(V567)) end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V571 of {'Idris.Prelude.Types.Left', E333} -> (fun (V572) -> {'Idris.Prelude.Types.Left', V572} end(E333)); {'Idris.Prelude.Types.Right', E334} -> (fun (V573) -> begin (V577 = begin (V574 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V561))(V567))), case V574 of {'Idris.Prelude.Types.Left', E335} -> (fun (V575) -> {'Idris.Prelude.Types.Left', V575} end(E335)); {'Idris.Prelude.Types.Right', E336} -> (fun (V576) -> (('dn--un--reify_Reify__UseSide'(V8, V0, V7, V576))(V567)) end(E336)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V577 of {'Idris.Prelude.Types.Left', E337} -> (fun (V578) -> {'Idris.Prelude.Types.Left', V578} end(E337)); {'Idris.Prelude.Types.Right', E338} -> (fun (V579) -> begin (V583 = begin (V580 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V563))(V567))), case V580 of {'Idris.Prelude.Types.Left', E339} -> (fun (V581) -> {'Idris.Prelude.Types.Left', V581} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V582) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V582))(V567)) end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V583 of {'Idris.Prelude.Types.Left', E341} -> (fun (V584) -> {'Idris.Prelude.Types.Left', V584} end(E341)); {'Idris.Prelude.Types.Right', E342} -> (fun (V585) -> begin (V589 = begin (V586 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V565))(V567))), case V586 of {'Idris.Prelude.Types.Left', E343} -> (fun (V587) -> {'Idris.Prelude.Types.Left', V587} end(E343)); {'Idris.Prelude.Types.Right', E344} -> (fun (V588) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V588))(V567)) end(E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V589 of {'Idris.Prelude.Types.Left', E345} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E345)); {'Idris.Prelude.Types.Right', E346} -> (fun (V591) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V573, V579, V585, V591}} end(E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V592) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V592)) end end end(E329, E330)); _ -> fun (V593) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V593)) end end end(E327, E328)); _ -> fun (V594) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V594)) end end end(E325, E326)); _ -> fun (V595) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V595)) end end end(E323, E324)); _ -> fun (V596) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V596)) end end; <<"IMustUnify"/utf8>> -> case V12 of [E347 | E348] -> (fun (V597, V598) -> case V598 of [E349 | E350] -> (fun (V599, V600) -> case V600 of [E351 | E352] -> (fun (V601, V602) -> case V602 of [] -> fun (V603) -> begin (V607 = begin (V604 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V597))(V603))), case V604 of {'Idris.Prelude.Types.Left', E353} -> (fun (V605) -> {'Idris.Prelude.Types.Left', V605} end(E353)); {'Idris.Prelude.Types.Right', E354} -> (fun (V606) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V606))(V603)) end(E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V607 of {'Idris.Prelude.Types.Left', E355} -> (fun (V608) -> {'Idris.Prelude.Types.Left', V608} end(E355)); {'Idris.Prelude.Types.Right', E356} -> (fun (V609) -> begin (V613 = begin (V610 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V599))(V603))), case V610 of {'Idris.Prelude.Types.Left', E357} -> (fun (V611) -> {'Idris.Prelude.Types.Left', V611} end(E357)); {'Idris.Prelude.Types.Right', E358} -> (fun (V612) -> (('dn--un--reify_Reify__DotReason'(V8, V0, V7, V612))(V603)) end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V613 of {'Idris.Prelude.Types.Left', E359} -> (fun (V614) -> {'Idris.Prelude.Types.Left', V614} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V615) -> begin (V619 = begin (V616 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V601))(V603))), case V616 of {'Idris.Prelude.Types.Left', E361} -> (fun (V617) -> {'Idris.Prelude.Types.Left', V617} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V618) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V618))(V603)) end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V619 of {'Idris.Prelude.Types.Left', E363} -> (fun (V620) -> {'Idris.Prelude.Types.Left', V620} end(E363)); {'Idris.Prelude.Types.Right', E364} -> (fun (V621) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V609, V615, V621}} end(E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V622) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V622)) end end end(E351, E352)); _ -> fun (V623) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V623)) end end end(E349, E350)); _ -> fun (V624) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V624)) end end end(E347, E348)); _ -> fun (V625) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V625)) end end; <<"IDelayed"/utf8>> -> case V12 of [E365 | E366] -> (fun (V626, V627) -> case V627 of [E367 | E368] -> (fun (V628, V629) -> case V629 of [E369 | E370] -> (fun (V630, V631) -> case V631 of [] -> fun (V632) -> begin (V636 = begin (V633 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V626))(V632))), case V633 of {'Idris.Prelude.Types.Left', E371} -> (fun (V634) -> {'Idris.Prelude.Types.Left', V634} end(E371)); {'Idris.Prelude.Types.Right', E372} -> (fun (V635) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V635))(V632)) end(E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V636 of {'Idris.Prelude.Types.Left', E373} -> (fun (V637) -> {'Idris.Prelude.Types.Left', V637} end(E373)); {'Idris.Prelude.Types.Right', E374} -> (fun (V638) -> begin (V642 = begin (V639 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V628))(V632))), case V639 of {'Idris.Prelude.Types.Left', E375} -> (fun (V640) -> {'Idris.Prelude.Types.Left', V640} end(E375)); {'Idris.Prelude.Types.Right', E376} -> (fun (V641) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__LazyReason'(V8, V0, V7, V641))(V632)) end(E376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V642 of {'Idris.Prelude.Types.Left', E377} -> (fun (V643) -> {'Idris.Prelude.Types.Left', V643} end(E377)); {'Idris.Prelude.Types.Right', E378} -> (fun (V644) -> begin (V648 = begin (V645 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V630))(V632))), case V645 of {'Idris.Prelude.Types.Left', E379} -> (fun (V646) -> {'Idris.Prelude.Types.Left', V646} end(E379)); {'Idris.Prelude.Types.Right', E380} -> (fun (V647) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V647))(V632)) end(E380)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V648 of {'Idris.Prelude.Types.Left', E381} -> (fun (V649) -> {'Idris.Prelude.Types.Left', V649} end(E381)); {'Idris.Prelude.Types.Right', E382} -> (fun (V650) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V638, V644, V650}} end(E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E378)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V651) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V651)) end end end(E369, E370)); _ -> fun (V652) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V652)) end end end(E367, E368)); _ -> fun (V653) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V653)) end end end(E365, E366)); _ -> fun (V654) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V654)) end end; <<"IDelay"/utf8>> -> case V12 of [E383 | E384] -> (fun (V655, V656) -> case V656 of [E385 | E386] -> (fun (V657, V658) -> case V658 of [] -> fun (V659) -> begin (V663 = begin (V660 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V655))(V659))), case V660 of {'Idris.Prelude.Types.Left', E387} -> (fun (V661) -> {'Idris.Prelude.Types.Left', V661} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V662) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V662))(V659)) end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V663 of {'Idris.Prelude.Types.Left', E389} -> (fun (V664) -> {'Idris.Prelude.Types.Left', V664} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V665) -> begin (V669 = begin (V666 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V657))(V659))), case V666 of {'Idris.Prelude.Types.Left', E391} -> (fun (V667) -> {'Idris.Prelude.Types.Left', V667} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V668) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V668))(V659)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V669 of {'Idris.Prelude.Types.Left', E393} -> (fun (V670) -> {'Idris.Prelude.Types.Left', V670} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V671) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V665, V671}} end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V672) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V672)) end end end(E385, E386)); _ -> fun (V673) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V673)) end end end(E383, E384)); _ -> fun (V674) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V674)) end end; <<"IForce"/utf8>> -> case V12 of [E395 | E396] -> (fun (V675, V676) -> case V676 of [E397 | E398] -> (fun (V677, V678) -> case V678 of [] -> fun (V679) -> begin (V683 = begin (V680 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V675))(V679))), case V680 of {'Idris.Prelude.Types.Left', E399} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E399)); {'Idris.Prelude.Types.Right', E400} -> (fun (V682) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V682))(V679)) end(E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V683 of {'Idris.Prelude.Types.Left', E401} -> (fun (V684) -> {'Idris.Prelude.Types.Left', V684} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V685) -> begin (V689 = begin (V686 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V677))(V679))), case V686 of {'Idris.Prelude.Types.Left', E403} -> (fun (V687) -> {'Idris.Prelude.Types.Left', V687} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V688) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V688))(V679)) end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V689 of {'Idris.Prelude.Types.Left', E405} -> (fun (V690) -> {'Idris.Prelude.Types.Left', V690} end(E405)); {'Idris.Prelude.Types.Right', E406} -> (fun (V691) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V685, V691}} end(E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V692) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V692)) end end end(E397, E398)); _ -> fun (V693) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V693)) end end end(E395, E396)); _ -> fun (V694) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V694)) end end; <<"IQuote"/utf8>> -> case V12 of [E407 | E408] -> (fun (V695, V696) -> case V696 of [E409 | E410] -> (fun (V697, V698) -> case V698 of [] -> fun (V699) -> begin (V703 = begin (V700 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V695))(V699))), case V700 of {'Idris.Prelude.Types.Left', E411} -> (fun (V701) -> {'Idris.Prelude.Types.Left', V701} end(E411)); {'Idris.Prelude.Types.Right', E412} -> (fun (V702) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V702))(V699)) end(E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V703 of {'Idris.Prelude.Types.Left', E413} -> (fun (V704) -> {'Idris.Prelude.Types.Left', V704} end(E413)); {'Idris.Prelude.Types.Right', E414} -> (fun (V705) -> begin (V709 = begin (V706 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V697))(V699))), case V706 of {'Idris.Prelude.Types.Left', E415} -> (fun (V707) -> {'Idris.Prelude.Types.Left', V707} end(E415)); {'Idris.Prelude.Types.Right', E416} -> (fun (V708) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V708))(V699)) end(E416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V709 of {'Idris.Prelude.Types.Left', E417} -> (fun (V710) -> {'Idris.Prelude.Types.Left', V710} end(E417)); {'Idris.Prelude.Types.Right', E418} -> (fun (V711) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V705, V711}} end(E418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V712) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V712)) end end end(E409, E410)); _ -> fun (V713) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V713)) end end end(E407, E408)); _ -> fun (V714) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V714)) end end; <<"IQuoteName"/utf8>> -> case V12 of [E419 | E420] -> (fun (V715, V716) -> case V716 of [E421 | E422] -> (fun (V717, V718) -> case V718 of [] -> fun (V719) -> begin (V723 = begin (V720 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V715))(V719))), case V720 of {'Idris.Prelude.Types.Left', E423} -> (fun (V721) -> {'Idris.Prelude.Types.Left', V721} end(E423)); {'Idris.Prelude.Types.Right', E424} -> (fun (V722) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V722))(V719)) end(E424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V723 of {'Idris.Prelude.Types.Left', E425} -> (fun (V724) -> {'Idris.Prelude.Types.Left', V724} end(E425)); {'Idris.Prelude.Types.Right', E426} -> (fun (V725) -> begin (V729 = begin (V726 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V717))(V719))), case V726 of {'Idris.Prelude.Types.Left', E427} -> (fun (V727) -> {'Idris.Prelude.Types.Left', V727} end(E427)); {'Idris.Prelude.Types.Right', E428} -> (fun (V728) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V8, V0, V7, V728))(V719)) end(E428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V729 of {'Idris.Prelude.Types.Left', E429} -> (fun (V730) -> {'Idris.Prelude.Types.Left', V730} end(E429)); {'Idris.Prelude.Types.Right', E430} -> (fun (V731) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V725, V731}} end(E430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V732) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V732)) end end end(E421, E422)); _ -> fun (V733) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V733)) end end end(E419, E420)); _ -> fun (V734) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V734)) end end; <<"IQuoteDecl"/utf8>> -> case V12 of [E431 | E432] -> (fun (V735, V736) -> case V736 of [E433 | E434] -> (fun (V737, V738) -> case V738 of [] -> fun (V739) -> begin (V743 = begin (V740 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V735))(V739))), case V740 of {'Idris.Prelude.Types.Left', E435} -> (fun (V741) -> {'Idris.Prelude.Types.Left', V741} end(E435)); {'Idris.Prelude.Types.Right', E436} -> (fun (V742) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V742))(V739)) end(E436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V743 of {'Idris.Prelude.Types.Left', E437} -> (fun (V744) -> {'Idris.Prelude.Types.Left', V744} end(E437)); {'Idris.Prelude.Types.Right', E438} -> (fun (V745) -> begin (V753 = begin (V746 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V737))(V739))), case V746 of {'Idris.Prelude.Types.Left', E439} -> (fun (V747) -> {'Idris.Prelude.Types.Left', V747} end(E439)); {'Idris.Prelude.Types.Right', E440} -> (fun (V748) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V749) -> fun (V750) -> fun (V751) -> fun (V752) -> ('dn--un--reify_Reify__ImpDecl'(V749, V750, V751, V752)) end end end end, V8, V0, V7, V748))(V739)) end(E440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V753 of {'Idris.Prelude.Types.Left', E441} -> (fun (V754) -> {'Idris.Prelude.Types.Left', V754} end(E441)); {'Idris.Prelude.Types.Right', E442} -> (fun (V755) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V745, V755}} end(E442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V756) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V756)) end end end(E433, E434)); _ -> fun (V757) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V757)) end end end(E431, E432)); _ -> fun (V758) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V758)) end end; <<"IUnquote"/utf8>> -> case V12 of [E443 | E444] -> (fun (V759, V760) -> case V760 of [E445 | E446] -> (fun (V761, V762) -> case V762 of [] -> fun (V763) -> begin (V767 = begin (V764 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V759))(V763))), case V764 of {'Idris.Prelude.Types.Left', E447} -> (fun (V765) -> {'Idris.Prelude.Types.Left', V765} end(E447)); {'Idris.Prelude.Types.Right', E448} -> (fun (V766) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V766))(V763)) end(E448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V767 of {'Idris.Prelude.Types.Left', E449} -> (fun (V768) -> {'Idris.Prelude.Types.Left', V768} end(E449)); {'Idris.Prelude.Types.Right', E450} -> (fun (V769) -> begin (V773 = begin (V770 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V761))(V763))), case V770 of {'Idris.Prelude.Types.Left', E451} -> (fun (V771) -> {'Idris.Prelude.Types.Left', V771} end(E451)); {'Idris.Prelude.Types.Right', E452} -> (fun (V772) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V772))(V763)) end(E452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V773 of {'Idris.Prelude.Types.Left', E453} -> (fun (V774) -> {'Idris.Prelude.Types.Left', V774} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V775) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V769, V775}} end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V776) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V776)) end end end(E445, E446)); _ -> fun (V777) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V777)) end end end(E443, E444)); _ -> fun (V778) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V778)) end end; <<"IPrimVal"/utf8>> -> case V12 of [E455 | E456] -> (fun (V779, V780) -> case V780 of [E457 | E458] -> (fun (V781, V782) -> case V782 of [] -> fun (V783) -> begin (V787 = begin (V784 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V779))(V783))), case V784 of {'Idris.Prelude.Types.Left', E459} -> (fun (V785) -> {'Idris.Prelude.Types.Left', V785} end(E459)); {'Idris.Prelude.Types.Right', E460} -> (fun (V786) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V786))(V783)) end(E460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V787 of {'Idris.Prelude.Types.Left', E461} -> (fun (V788) -> {'Idris.Prelude.Types.Left', V788} end(E461)); {'Idris.Prelude.Types.Right', E462} -> (fun (V789) -> begin (V793 = begin (V790 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V781))(V783))), case V790 of {'Idris.Prelude.Types.Left', E463} -> (fun (V791) -> {'Idris.Prelude.Types.Left', V791} end(E463)); {'Idris.Prelude.Types.Right', E464} -> (fun (V792) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Constant'(V8, V0, V7, V792))(V783)) end(E464)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V793 of {'Idris.Prelude.Types.Left', E465} -> (fun (V794) -> {'Idris.Prelude.Types.Left', V794} end(E465)); {'Idris.Prelude.Types.Right', E466} -> (fun (V795) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V789, V795}} end(E466)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E462)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V796) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V796)) end end end(E457, E458)); _ -> fun (V797) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V797)) end end end(E455, E456)); _ -> fun (V798) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V798)) end end; <<"IType"/utf8>> -> case V12 of [E467 | E468] -> (fun (V799, V800) -> case V800 of [] -> fun (V801) -> begin (V805 = begin (V802 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V799))(V801))), case V802 of {'Idris.Prelude.Types.Left', E469} -> (fun (V803) -> {'Idris.Prelude.Types.Left', V803} end(E469)); {'Idris.Prelude.Types.Right', E470} -> (fun (V804) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V804))(V801)) end(E470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V805 of {'Idris.Prelude.Types.Left', E471} -> (fun (V806) -> {'Idris.Prelude.Types.Left', V806} end(E471)); {'Idris.Prelude.Types.Right', E472} -> (fun (V807) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V807}} end(E472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V808) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V808)) end end end(E467, E468)); _ -> fun (V809) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V809)) end end; <<"IHole"/utf8>> -> case V12 of [E473 | E474] -> (fun (V810, V811) -> case V811 of [E475 | E476] -> (fun (V812, V813) -> case V813 of [] -> fun (V814) -> begin (V818 = begin (V815 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V810))(V814))), case V815 of {'Idris.Prelude.Types.Left', E477} -> (fun (V816) -> {'Idris.Prelude.Types.Left', V816} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V817) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V817))(V814)) end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V818 of {'Idris.Prelude.Types.Left', E479} -> (fun (V819) -> {'Idris.Prelude.Types.Left', V819} end(E479)); {'Idris.Prelude.Types.Right', E480} -> (fun (V820) -> begin (V824 = begin (V821 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V812))(V814))), case V821 of {'Idris.Prelude.Types.Left', E481} -> (fun (V822) -> {'Idris.Prelude.Types.Left', V822} end(E481)); {'Idris.Prelude.Types.Right', E482} -> (fun (V823) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__String'(V8, V0, V7, V823))(V814)) end(E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V824 of {'Idris.Prelude.Types.Left', E483} -> (fun (V825) -> {'Idris.Prelude.Types.Left', V825} end(E483)); {'Idris.Prelude.Types.Right', E484} -> (fun (V826) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V820, V826}} end(E484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V827) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V827)) end end end(E475, E476)); _ -> fun (V828) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V828)) end end end(E473, E474)); _ -> fun (V829) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V829)) end end; <<"Implicit"/utf8>> -> case V12 of [E485 | E486] -> (fun (V830, V831) -> case V831 of [E487 | E488] -> (fun (V832, V833) -> case V833 of [] -> fun (V834) -> begin (V838 = begin (V835 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V830))(V834))), case V835 of {'Idris.Prelude.Types.Left', E489} -> (fun (V836) -> {'Idris.Prelude.Types.Left', V836} end(E489)); {'Idris.Prelude.Types.Right', E490} -> (fun (V837) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V837))(V834)) end(E490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V838 of {'Idris.Prelude.Types.Left', E491} -> (fun (V839) -> {'Idris.Prelude.Types.Left', V839} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V840) -> begin (V844 = begin (V841 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V832))(V834))), case V841 of {'Idris.Prelude.Types.Left', E493} -> (fun (V842) -> {'Idris.Prelude.Types.Left', V842} end(E493)); {'Idris.Prelude.Types.Right', E494} -> (fun (V843) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Bool'(V8, V0, V7, V843))(V834)) end(E494)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V844 of {'Idris.Prelude.Types.Left', E495} -> (fun (V845) -> {'Idris.Prelude.Types.Left', V845} end(E495)); {'Idris.Prelude.Types.Right', E496} -> (fun (V846) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V840, V846}} end(E496)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V847) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V847)) end end end(E487, E488)); _ -> fun (V848) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V848)) end end end(E485, E486)); _ -> fun (V849) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V849)) end end; <<"IWithUnambigNames"/utf8>> -> case V12 of [E497 | E498] -> (fun (V850, V851) -> case V851 of [E499 | E500] -> (fun (V852, V853) -> case V853 of [E501 | E502] -> (fun (V854, V855) -> case V855 of [] -> fun (V856) -> begin (V860 = begin (V857 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V850))(V856))), case V857 of {'Idris.Prelude.Types.Left', E503} -> (fun (V858) -> {'Idris.Prelude.Types.Left', V858} end(E503)); {'Idris.Prelude.Types.Right', E504} -> (fun (V859) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__FC'(V8, V0, V7, V859))(V856)) end(E504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V860 of {'Idris.Prelude.Types.Left', E505} -> (fun (V861) -> {'Idris.Prelude.Types.Left', V861} end(E505)); {'Idris.Prelude.Types.Right', E506} -> (fun (V862) -> begin (V870 = begin (V863 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V852))(V856))), case V863 of {'Idris.Prelude.Types.Left', E507} -> (fun (V864) -> {'Idris.Prelude.Types.Left', V864} end(E507)); {'Idris.Prelude.Types.Right', E508} -> (fun (V865) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__(List $a)'('erased', fun (V866) -> fun (V867) -> fun (V868) -> fun (V869) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__Name'(V866, V867, V868, V869)) end end end end, V8, V0, V7, V865))(V856)) end(E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V870 of {'Idris.Prelude.Types.Left', E509} -> (fun (V871) -> {'Idris.Prelude.Types.Left', V871} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V872) -> begin (V876 = begin (V873 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V854))(V856))), case V873 of {'Idris.Prelude.Types.Left', E511} -> (fun (V874) -> {'Idris.Prelude.Types.Left', V874} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V875) -> (('dn--un--reify_Reify__RawImp'(V8, V0, V7, V875))(V856)) end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V876 of {'Idris.Prelude.Types.Left', E513} -> (fun (V877) -> {'Idris.Prelude.Types.Left', V877} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V878) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V862, V872, V878}} end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V879) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V879)) end end end(E501, E502)); _ -> fun (V880) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V880)) end end end(E499, E500)); _ -> fun (V881) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V881)) end end end(E497, E498)); _ -> fun (V882) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V882)) end end; _ -> fun (V883) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V883)) end end end(E4)); _ -> fun (V884) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V884)) end end end(E2, E3)); _ -> fun (V885) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V885)) end end end(E0, E1)); _ -> fun (V886) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"TTImp"/utf8>>, V886)) end end.
'case--reify-10588'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"NonLinearVar"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.NonLinearVar'}} end; <<"VarApplied"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.VarApplied'}} end; <<"NotConstructor"/utf8>> -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.NotConstructor'}} end; <<"ErasedArg"/utf8>> -> fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.ErasedArg'}} end; <<"UserDotted"/utf8>> -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.UserDotted'}} end; <<"UnknownDot"/utf8>> -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Core.UnknownDot'}} end; _ -> fun (V22) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V22)) end end end(E4)); _ -> fun (V23) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V23)) end end end(E2, E3)); _ -> fun (V24) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V24)) end end end(E0, E1)); _ -> fun (V25) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"DotReason"/utf8>>, V25)) end end.
'case--reify-10391'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"UseLeft"/utf8>> -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.UseLeft'}} end; <<"UseRight"/utf8>> -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.UseRight'}} end; _ -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V18)) end end end(E4)); _ -> fun (V19) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V19)) end end end(E2, E3)); _ -> fun (V20) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V20)) end end end(E0, E1)); _ -> fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"UseSide"/utf8>>, V21)) end end.
'case--reify-10121'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of {'Idris.Core.Name.NS', E2, E3} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E4} -> (fun (V15) -> case V15 of <<"PI"/utf8>> -> case V12 of [E5 | E6] -> (fun (V16, V17) -> case V17 of [] -> fun (V18) -> begin (V22 = begin (V19 = (('Idris.Idris2.Core.Normalise':'un--evalClosure'(V8, V0, V7, V16))(V18))), case V19 of {'Idris.Prelude.Types.Left', E7} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V21) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify__RigCount'(V8, V0, V7, V21))(V18)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V22 of {'Idris.Prelude.Types.Left', E9} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V24}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V25) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V25)) end end end(E5, E6)); _ -> fun (V26) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V26)) end end; <<"PATTERN"/utf8>> -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}} end; <<"NONE"/utf8>> -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}} end; _ -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V29)) end end end(E4)); _ -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V30)) end end end(E2, E3)); _ -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V31)) end end end(E0, E1)); _ -> fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V6, <<"BindMode"/utf8>>, V32)) end end.
'dn--un--reify_Reify__UseSide'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10391'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"UseSide"/utf8>>, V40)) end end.
'dn--un--reify_Reify__RawImp'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10949'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"TTImp"/utf8>>, V40)) end end.
'dn--un--reify_Reify__ImpTy'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-14615'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"ITy"/utf8>>, V40)) end end.
'dn--un--reify_Reify__ImpRecord'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-15584'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Record"/utf8>>, V40)) end end.
'dn--un--reify_Reify__ImpDecl'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-16181'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Decl"/utf8>>, V40)) end end.
'dn--un--reify_Reify__ImpData'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-15065'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Data"/utf8>>, V40)) end end.
'dn--un--reify_Reify__ImpClause'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-15822'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"Clause"/utf8>>, V40)) end end.
'dn--un--reify_Reify__IFieldUpdate'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-13654'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"IFieldUpdate"/utf8>>, V40)) end end.
'dn--un--reify_Reify__IField'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-15371'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"IField"/utf8>>, V40)) end end.
'dn--un--reify_Reify__FnOpt'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-14089'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"FnOpt"/utf8>>, V40)) end end.
'dn--un--reify_Reify__DotReason'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10588'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"DotReason"/utf8>>, V40)) end end.
'dn--un--reify_Reify__DataOpt'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-14788'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"DataOpt"/utf8>>, V40)) end end.
'dn--un--reify_Reify__BindMode'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-10121'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"BindMode"/utf8>>, V40)) end end.
'dn--un--reify_Reify__AltType'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V4, V5, V6, V7, V8) -> fun (V9) -> begin (V36 = (('Idris.Idris2.Core.Context':'dn--un--full_HasNames__Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V5))(V9))), case V36 of {'Idris.Prelude.Types.Left', E31} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V38) -> begin (V39 = {'Idris.Core.Value.NDCon', V4, V5, V6, V7, V8}), (('case--reify-13884'(V1, V4, V6, V7, V8, V5, V39, V2, V0, V38, {'Idris.Builtin.MkPair', V38, V8}))(V9)) end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--cantReify'('erased', 'erased', V3, <<"AltType"/utf8>>, V40)) end end.
'dn--un--reflect_Reflect__UseSide'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.TT.UseLeft'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseLeft"/utf8>>)), V6)) end end()); {'Idris.Core.TT.UseRight'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseRight"/utf8>>)), V7)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V8))), case V9 of {'Idris.Prelude.Types.Left', E34} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V7))(V8))), case V12 of {'Idris.Prelude.Types.Left', E36} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IVar"/utf8>>)), [V11 | [V14 | []]], V8)) end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33)); {'Idris.TTImp.TTImp.IPi', E38, E39, E40, E41, E42, E43} -> (fun (V15, V16, V17, V18, V19, V20) -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V15))(V21))), case V22 of {'Idris.Prelude.Types.Left', E44} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V16))(V21))), case V25 of {'Idris.Prelude.Types.Left', E46} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V27) -> begin (V34 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(PiInfo $t)'('erased', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('dn--un--reflect_Reflect__RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V0, V1, V2, V3, V4, V17))(V21))), case V34 of {'Idris.Prelude.Types.Left', E48} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V36) -> begin (V43 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V37, V38, V39, V40, V41, V42)) end end end end end end, V0, V1, V2, V3, V4, V18))(V21))), case V43 of {'Idris.Prelude.Types.Left', E50} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V45) -> begin (V46 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V19))(V21))), case V46 of {'Idris.Prelude.Types.Left', E52} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V48) -> begin (V49 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V20))(V21))), case V49 of {'Idris.Prelude.Types.Left', E54} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPi"/utf8>>)), [V24 | [V27 | [V36 | [V45 | [V48 | [V51 | []]]]]]], V21)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E38, E39, E40, E41, E42, E43)); {'Idris.TTImp.TTImp.ILam', E56, E57, E58, E59, E60, E61} -> (fun (V52, V53, V54, V55, V56, V57) -> fun (V58) -> begin (V59 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V52))(V58))), case V59 of {'Idris.Prelude.Types.Left', E62} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V61) -> begin (V62 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V53))(V58))), case V62 of {'Idris.Prelude.Types.Left', E64} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V64) -> begin (V71 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(PiInfo $t)'('erased', fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--reflect_Reflect__RawImp'(V65, V66, V67, V68, V69, V70)) end end end end end end, V0, V1, V2, V3, V4, V54))(V58))), case V71 of {'Idris.Prelude.Types.Left', E66} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V73) -> begin (V80 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V74, V75, V76, V77, V78, V79)) end end end end end end, V0, V1, V2, V3, V4, V55))(V58))), case V80 of {'Idris.Prelude.Types.Left', E68} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V82) -> begin (V83 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V56))(V58))), case V83 of {'Idris.Prelude.Types.Left', E70} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V85) -> begin (V86 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V57))(V58))), case V86 of {'Idris.Prelude.Types.Left', E72} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V88) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILam"/utf8>>)), [V61 | [V64 | [V73 | [V82 | [V85 | [V88 | []]]]]]], V58)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59, E60, E61)); {'Idris.TTImp.TTImp.ILet', E74, E75, E76, E77, E78, E79} -> (fun (V89, V90, V91, V92, V93, V94) -> fun (V95) -> begin (V96 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V89))(V95))), case V96 of {'Idris.Prelude.Types.Left', E80} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V98) -> begin (V99 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V90))(V95))), case V99 of {'Idris.Prelude.Types.Left', E82} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V101) -> begin (V102 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V91))(V95))), case V102 of {'Idris.Prelude.Types.Left', E84} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V104) -> begin (V105 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V92))(V95))), case V105 of {'Idris.Prelude.Types.Left', E86} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V107) -> begin (V108 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V93))(V95))), case V108 of {'Idris.Prelude.Types.Left', E88} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V110) -> begin (V111 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V94))(V95))), case V111 of {'Idris.Prelude.Types.Left', E90} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V113) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILet"/utf8>>)), [V98 | [V101 | [V104 | [V107 | [V110 | [V113 | []]]]]]], V95)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E74, E75, E76, E77, E78, E79)); {'Idris.TTImp.TTImp.ICase', E92, E93, E94, E95} -> (fun (V114, V115, V116, V117) -> fun (V118) -> begin (V119 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V114))(V118))), case V119 of {'Idris.Prelude.Types.Left', E96} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V121) -> begin (V122 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V115))(V118))), case V122 of {'Idris.Prelude.Types.Left', E98} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V124) -> begin (V125 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V116))(V118))), case V125 of {'Idris.Prelude.Types.Left', E100} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V127) -> begin (V134 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('dn--un--reflect_Reflect__ImpClause'(V128, V129, V130, V131, V132, V133)) end end end end end end, V0, V1, V2, V3, V4, V117))(V118))), case V134 of {'Idris.Prelude.Types.Left', E102} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V136) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ICase"/utf8>>)), [V121 | [V124 | [V127 | [V136 | []]]]], V118)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E92, E93, E94, E95)); {'Idris.TTImp.TTImp.ILocal', E104, E105, E106} -> (fun (V137, V138, V139) -> fun (V140) -> begin (V141 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V137))(V140))), case V141 of {'Idris.Prelude.Types.Left', E107} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V143) -> begin (V150 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('dn--un--reflect_Reflect__ImpDecl'(V144, V145, V146, V147, V148, V149)) end end end end end end, V0, V1, V2, V3, V4, V138))(V140))), case V150 of {'Idris.Prelude.Types.Left', E109} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V152) -> begin (V153 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V139))(V140))), case V153 of {'Idris.Prelude.Types.Left', E111} -> (fun (V154) -> {'Idris.Prelude.Types.Left', V154} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V155) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILocal"/utf8>>)), [V143 | [V152 | [V155 | []]]], V140)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E104, E105, E106)); {'Idris.TTImp.TTImp.ICaseLocal', E113, E114, E115, E116, E117} -> (fun (V156, V157, V158, V159, V160) -> ('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V160)) end(E113, E114, E115, E116, E117)); {'Idris.TTImp.TTImp.IUpdate', E118, E119, E120} -> (fun (V161, V162, V163) -> fun (V164) -> begin (V165 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V161))(V164))), case V165 of {'Idris.Prelude.Types.Left', E121} -> (fun (V166) -> {'Idris.Prelude.Types.Left', V166} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V167) -> begin (V174 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('dn--un--reflect_Reflect__IFieldUpdate'(V168, V169, V170, V171, V172, V173)) end end end end end end, V0, V1, V2, V3, V4, V162))(V164))), case V174 of {'Idris.Prelude.Types.Left', E123} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V176) -> begin (V177 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V163))(V164))), case V177 of {'Idris.Prelude.Types.Left', E125} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V179) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IUpdate"/utf8>>)), [V167 | [V176 | [V179 | []]]], V164)) end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E118, E119, E120)); {'Idris.TTImp.TTImp.IApp', E127, E128, E129} -> (fun (V180, V181, V182) -> fun (V183) -> begin (V184 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V180))(V183))), case V184 of {'Idris.Prelude.Types.Left', E130} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V186) -> begin (V187 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V181))(V183))), case V187 of {'Idris.Prelude.Types.Left', E132} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V189) -> begin (V190 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V182))(V183))), case V190 of {'Idris.Prelude.Types.Left', E134} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V192) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IApp"/utf8>>)), [V186 | [V189 | [V192 | []]]], V183)) end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E127, E128, E129)); {'Idris.TTImp.TTImp.IImplicitApp', E136, E137, E138, E139} -> (fun (V193, V194, V195, V196) -> fun (V197) -> begin (V198 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V193))(V197))), case V198 of {'Idris.Prelude.Types.Left', E140} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V200) -> begin (V201 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V194))(V197))), case V201 of {'Idris.Prelude.Types.Left', E142} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V203) -> begin (V210 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(Maybe $a)'('erased', fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V204, V205, V206, V207, V208, V209)) end end end end end end, V0, V1, V2, V3, V4, V195))(V197))), case V210 of {'Idris.Prelude.Types.Left', E144} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V212) -> begin (V213 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V196))(V197))), case V213 of {'Idris.Prelude.Types.Left', E146} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V215) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IImplicitApp"/utf8>>)), [V200 | [V203 | [V212 | [V215 | []]]]], V197)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E136, E137, E138, E139)); {'Idris.TTImp.TTImp.IWithApp', E148, E149, E150} -> (fun (V216, V217, V218) -> fun (V219) -> begin (V220 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V216))(V219))), case V220 of {'Idris.Prelude.Types.Left', E151} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V222) -> begin (V223 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V217))(V219))), case V223 of {'Idris.Prelude.Types.Left', E153} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V225) -> begin (V226 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V218))(V219))), case V226 of {'Idris.Prelude.Types.Left', E155} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V228) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithApp"/utf8>>)), [V222 | [V225 | [V228 | []]]], V219)) end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E148, E149, E150)); {'Idris.TTImp.TTImp.ISearch', E157, E158} -> (fun (V229, V230) -> fun (V231) -> begin (V232 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V229))(V231))), case V232 of {'Idris.Prelude.Types.Left', E159} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V234) -> begin (V235 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Nat'(V0, V1, V2, V3, V4, V230))(V231))), case V235 of {'Idris.Prelude.Types.Left', E161} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V237) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISearch"/utf8>>)), [V234 | [V237 | []]], V231)) end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E157, E158)); {'Idris.TTImp.TTImp.IAlternative', E163, E164, E165} -> (fun (V238, V239, V240) -> fun (V241) -> begin (V242 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V238))(V241))), case V242 of {'Idris.Prelude.Types.Left', E166} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V244) -> begin (V245 = (('dn--un--reflect_Reflect__AltType'(V0, V1, V2, V3, V4, V239))(V241))), case V245 of {'Idris.Prelude.Types.Left', E168} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V247) -> begin (V254 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> ('dn--un--reflect_Reflect__RawImp'(V248, V249, V250, V251, V252, V253)) end end end end end end, V0, V1, V2, V3, V4, V240))(V241))), case V254 of {'Idris.Prelude.Types.Left', E170} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V256) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAlternative"/utf8>>)), [V244 | [V247 | [V256 | []]]], V241)) end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E163, E164, E165)); {'Idris.TTImp.TTImp.IRewrite', E172, E173, E174} -> (fun (V257, V258, V259) -> fun (V260) -> begin (V261 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V257))(V260))), case V261 of {'Idris.Prelude.Types.Left', E175} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V263) -> begin (V264 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V258))(V260))), case V264 of {'Idris.Prelude.Types.Left', E177} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V266) -> begin (V267 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V259))(V260))), case V267 of {'Idris.Prelude.Types.Left', E179} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V269) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRewrite"/utf8>>)), [V263 | [V266 | [V269 | []]]], V260)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E172, E173, E174)); {'Idris.TTImp.TTImp.ICoerced', E181, E182} -> (fun (V270, V271) -> ('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V271)) end(E181, E182)); {'Idris.TTImp.TTImp.IBindHere', E183, E184, E185} -> (fun (V272, V273, V274) -> fun (V275) -> begin (V276 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V272))(V275))), case V276 of {'Idris.Prelude.Types.Left', E186} -> (fun (V277) -> {'Idris.Prelude.Types.Left', V277} end(E186)); {'Idris.Prelude.Types.Right', E187} -> (fun (V278) -> begin (V279 = (('dn--un--reflect_Reflect__BindMode'(V0, V1, V2, V3, V4, V273))(V275))), case V279 of {'Idris.Prelude.Types.Left', E188} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V281) -> begin (V282 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V274))(V275))), case V282 of {'Idris.Prelude.Types.Left', E190} -> (fun (V283) -> {'Idris.Prelude.Types.Left', V283} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V284) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindHere"/utf8>>)), [V278 | [V281 | [V284 | []]]], V275)) end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E183, E184, E185)); {'Idris.TTImp.TTImp.IBindVar', E192, E193} -> (fun (V285, V286) -> fun (V287) -> begin (V288 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V285))(V287))), case V288 of {'Idris.Prelude.Types.Left', E194} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V290) -> begin (V291 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__String'(V0, V1, V2, V3, V4, V286, V287))), case V291 of {'Idris.Prelude.Types.Left', E196} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V293) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindVar"/utf8>>)), [V290 | [V293 | []]], V287)) end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E192, E193)); {'Idris.TTImp.TTImp.IAs', E198, E199, E200, E201} -> (fun (V294, V295, V296, V297) -> fun (V298) -> begin (V299 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V294))(V298))), case V299 of {'Idris.Prelude.Types.Left', E202} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V301) -> begin (V302 = (('dn--un--reflect_Reflect__UseSide'(V0, V1, V2, V3, V4, V295))(V298))), case V302 of {'Idris.Prelude.Types.Left', E204} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V304) -> begin (V305 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V296))(V298))), case V305 of {'Idris.Prelude.Types.Left', E206} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V307) -> begin (V308 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V297))(V298))), case V308 of {'Idris.Prelude.Types.Left', E208} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V310) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAs"/utf8>>)), [V301 | [V304 | [V307 | [V310 | []]]]], V298)) end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E198, E199, E200, E201)); {'Idris.TTImp.TTImp.IMustUnify', E210, E211, E212} -> (fun (V311, V312, V313) -> fun (V314) -> begin (V315 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V311))(V314))), case V315 of {'Idris.Prelude.Types.Left', E213} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V317) -> begin (V318 = (('dn--un--reflect_Reflect__DotReason'(V0, V1, V2, V3, V4, V312))(V314))), case V318 of {'Idris.Prelude.Types.Left', E215} -> (fun (V319) -> {'Idris.Prelude.Types.Left', V319} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V320) -> begin (V321 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V313))(V314))), case V321 of {'Idris.Prelude.Types.Left', E217} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V323) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IMustUnify"/utf8>>)), [V317 | [V320 | [V323 | []]]], V314)) end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212)); {'Idris.TTImp.TTImp.IDelayed', E219, E220, E221} -> (fun (V324, V325, V326) -> fun (V327) -> begin (V328 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V324))(V327))), case V328 of {'Idris.Prelude.Types.Left', E222} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V330) -> begin (V331 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__LazyReason'(V0, V1, V2, V3, V4, V325))(V327))), case V331 of {'Idris.Prelude.Types.Left', E224} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V333) -> begin (V334 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V326))(V327))), case V334 of {'Idris.Prelude.Types.Left', E226} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V336) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelayed"/utf8>>)), [V330 | [V333 | [V336 | []]]], V327)) end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E219, E220, E221)); {'Idris.TTImp.TTImp.IDelay', E228, E229} -> (fun (V337, V338) -> fun (V339) -> begin (V340 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V337))(V339))), case V340 of {'Idris.Prelude.Types.Left', E230} -> (fun (V341) -> {'Idris.Prelude.Types.Left', V341} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V342) -> begin (V343 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V338))(V339))), case V343 of {'Idris.Prelude.Types.Left', E232} -> (fun (V344) -> {'Idris.Prelude.Types.Left', V344} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V345) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelay"/utf8>>)), [V342 | [V345 | []]], V339)) end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E228, E229)); {'Idris.TTImp.TTImp.IForce', E234, E235} -> (fun (V346, V347) -> fun (V348) -> begin (V349 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V346))(V348))), case V349 of {'Idris.Prelude.Types.Left', E236} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V351) -> begin (V352 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V347))(V348))), case V352 of {'Idris.Prelude.Types.Left', E238} -> (fun (V353) -> {'Idris.Prelude.Types.Left', V353} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V354) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IForce"/utf8>>)), [V351 | [V354 | []]], V348)) end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235)); {'Idris.TTImp.TTImp.IQuote', E240, E241} -> (fun (V355, V356) -> fun (V357) -> begin (V358 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V355))(V357))), case V358 of {'Idris.Prelude.Types.Left', E242} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V360) -> begin (V361 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V356))(V357))), case V361 of {'Idris.Prelude.Types.Left', E244} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V363) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuote"/utf8>>)), [V360 | [V363 | []]], V357)) end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E240, E241)); {'Idris.TTImp.TTImp.IQuoteName', E246, E247} -> (fun (V364, V365) -> fun (V366) -> begin (V367 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V364))(V366))), case V367 of {'Idris.Prelude.Types.Left', E248} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V369) -> begin (V370 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V365))(V366))), case V370 of {'Idris.Prelude.Types.Left', E250} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V372) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteName"/utf8>>)), [V369 | [V372 | []]], V366)) end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E246, E247)); {'Idris.TTImp.TTImp.IQuoteDecl', E252, E253} -> (fun (V373, V374) -> fun (V375) -> begin (V376 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V373))(V375))), case V376 of {'Idris.Prelude.Types.Left', E254} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E254)); {'Idris.Prelude.Types.Right', E255} -> (fun (V378) -> begin (V385 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> ('dn--un--reflect_Reflect__ImpDecl'(V379, V380, V381, V382, V383, V384)) end end end end end end, V0, V1, V2, V3, V4, V374))(V375))), case V385 of {'Idris.Prelude.Types.Left', E256} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V387) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteDecl"/utf8>>)), [V378 | [V387 | []]], V375)) end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E252, E253)); {'Idris.TTImp.TTImp.IUnquote', E258, E259} -> (fun (V388, V389) -> case V389 of {'Idris.TTImp.TTImp.IVar', E260, E261} -> (fun (V390, V391) -> fun (V392) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Ref', V388, {'Idris.Core.TT.Bound'}, V391}} end end(E260, E261)); _ -> fun (V393) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect an unquote: escapes should be lifted out"/utf8>>}, V393)) end end end(E258, E259)); {'Idris.TTImp.TTImp.IRunElab', E262, E263} -> (fun (V394, V395) -> fun (V396) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect a %runelab"/utf8>>}, V396)) end end(E262, E263)); {'Idris.TTImp.TTImp.IPrimVal', E264, E265} -> (fun (V397, V398) -> fun (V399) -> begin (V400 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V397))(V399))), case V400 of {'Idris.Prelude.Types.Left', E266} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V402) -> begin (V403 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Constant'(V0, V1, V2, V3, V4, V398))(V399))), case V403 of {'Idris.Prelude.Types.Left', E268} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V405) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPrimVal"/utf8>>)), [V402 | [V405 | []]], V399)) end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E264, E265)); {'Idris.TTImp.TTImp.IType', E270} -> (fun (V406) -> fun (V407) -> begin (V408 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V406))(V407))), case V408 of {'Idris.Prelude.Types.Left', E271} -> (fun (V409) -> {'Idris.Prelude.Types.Left', V409} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V410) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IType"/utf8>>)), [V410 | []], V407)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E270)); {'Idris.TTImp.TTImp.IHole', E273, E274} -> (fun (V411, V412) -> fun (V413) -> begin (V414 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V411))(V413))), case V414 of {'Idris.Prelude.Types.Left', E275} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V416) -> begin (V417 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__String'(V0, V1, V2, V3, V4, V412, V413))), case V417 of {'Idris.Prelude.Types.Left', E277} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V419) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IHole"/utf8>>)), [V416 | [V419 | []]], V413)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E273, E274)); {'Idris.TTImp.TTImp.IUnifyLog', E279, E280, E281} -> (fun (V420, V421, V422) -> ('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V422)) end(E279, E280, E281)); _ -> case V3 of 0 -> case V5 of {'Idris.TTImp.TTImp.Implicit', E30, E31} -> (fun (V423, V424) -> fun (V425) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Erased', V1, 1}} end end(E30, E31)); _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E15, E16} -> (fun (V426, V427) -> fun (V428) -> begin (V429 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V426))(V428))), case V429 of {'Idris.Prelude.Types.Left', E17} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V431) -> begin (V432 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Bool'(V0, V1, V2, V3, V4, V427))(V428))), case V432 of {'Idris.Prelude.Types.Left', E19} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V434) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V431 | [V434 | []]], V428)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16)); {'Idris.TTImp.TTImp.IWithUnambigNames', E21, E22, E23} -> (fun (V435, V436, V437) -> fun (V438) -> begin (V439 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V435))(V438))), case V439 of {'Idris.Prelude.Types.Left', E24} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V441) -> begin (V448 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V442) -> fun (V443) -> fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V442, V443, V444, V445, V446, V447)) end end end end end end, V0, V1, V2, V3, V4, V436))(V438))), case V448 of {'Idris.Prelude.Types.Left', E26} -> (fun (V449) -> {'Idris.Prelude.Types.Left', V449} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V450) -> begin (V451 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V437))(V438))), case V451 of {'Idris.Prelude.Types.Left', E28} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V453) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V441 | [V450 | [V453 | []]]], V438)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E0, E1} -> (fun (V454, V455) -> fun (V456) -> begin (V457 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V454))(V456))), case V457 of {'Idris.Prelude.Types.Left', E2} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V459) -> begin (V460 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Bool'(V0, V1, V2, V3, V4, V455))(V456))), case V460 of {'Idris.Prelude.Types.Left', E4} -> (fun (V461) -> {'Idris.Prelude.Types.Left', V461} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V462) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V459 | [V462 | []]], V456)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.IWithUnambigNames', E6, E7, E8} -> (fun (V463, V464, V465) -> fun (V466) -> begin (V467 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V463))(V466))), case V467 of {'Idris.Prelude.Types.Left', E9} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V469) -> begin (V476 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V470, V471, V472, V473, V474, V475)) end end end end end end, V0, V1, V2, V3, V4, V464))(V466))), case V476 of {'Idris.Prelude.Types.Left', E11} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V478) -> begin (V479 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V465))(V466))), case V479 of {'Idris.Prelude.Types.Left', E13} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V481) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V469 | [V478 | [V481 | []]]], V466)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'dn--un--reflect_Reflect__ImpTy'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V13 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V7))(V9))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V8))(V9))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkTy"/utf8>>)), [V12 | [V15 | [V18 | []]]], V9)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__ImpRecord'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V66 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V24, V25, V26, V27, V28, V29)) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V36, V37, V38, V39, V40, V41)) end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(PiInfo $t)'('erased', fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('dn--un--reflect_Reflect__RawImp'(V54, V55, V56, V57, V58, V59)) end end end end end end, V48, V49, V50, V51, V52, V53)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('dn--un--reflect_Reflect__RawImp'(V60, V61, V62, V63, V64, V65)) end end end end end end}, V42, V43, V44, V45, V46, V47)) end end end end end end}, V30, V31, V32, V33, V34, V35)) end end end end end end}, V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V8))(V11))), case V66 of {'Idris.Prelude.Types.Left', E9} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V9))(V11))), case V69 of {'Idris.Prelude.Types.Left', E11} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V71) -> begin (V78 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('dn--un--reflect_Reflect__IField'(V72, V73, V74, V75, V76, V77)) end end end end end end, V0, V1, V2, V3, V4, V10))(V11))), case V78 of {'Idris.Prelude.Types.Left', E13} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V80) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkRecord"/utf8>>)), [V14 | [V17 | [V68 | [V71 | [V80 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__ImpDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Visibility'(V0, V1, V2, V3, V4, V8))(V11))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect__FnOpt'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect__ImpTy'(V0, V1, V2, V3, V4, V10))(V11))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IClaim"/utf8>>)), [V14 | [V17 | [V20 | [V29 | [V32 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E15, E16, E17} -> (fun (V33, V34, V35) -> fun (V36) -> begin (V37 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V33))(V36))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Visibility'(V0, V1, V2, V3, V4, V34))(V36))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = (('dn--un--reflect_Reflect__ImpData'(V0, V1, V2, V3, V4, V35))(V36))), case V43 of {'Idris.Prelude.Types.Left', E22} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IData"/utf8>>)), [V39 | [V42 | [V45 | []]]], V36)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); {'Idris.TTImp.TTImp.IDef', E24, E25, E26} -> (fun (V46, V47, V48) -> fun (V49) -> begin (V50 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V46))(V49))), case V50 of {'Idris.Prelude.Types.Left', E27} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V52) -> begin (V53 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V47))(V49))), case V53 of {'Idris.Prelude.Types.Left', E29} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V55) -> begin (V62 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reflect_Reflect__ImpClause'(V56, V57, V58, V59, V60, V61)) end end end end end end, V0, V1, V2, V3, V4, V48))(V49))), case V62 of {'Idris.Prelude.Types.Left', E31} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDef"/utf8>>)), [V52 | [V55 | [V64 | []]]], V49)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26)); {'Idris.TTImp.TTImp.IParameters', E33, E34, E35} -> (fun (V65, V66, V67) -> fun (V68) -> begin (V69 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V65))(V68))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V90 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V78, V79, V80, V81, V82, V83)) end end end end end end, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('dn--un--reflect_Reflect__RawImp'(V84, V85, V86, V87, V88, V89)) end end end end end end}, V72, V73, V74, V75, V76, V77)) end end end end end end, V0, V1, V2, V3, V4, V66))(V68))), case V90 of {'Idris.Prelude.Types.Left', E38} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V92) -> begin (V99 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('dn--un--reflect_Reflect__ImpDecl'(V93, V94, V95, V96, V97, V98)) end end end end end end, V0, V1, V2, V3, V4, V67))(V68))), case V99 of {'Idris.Prelude.Types.Left', E40} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V101) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IParameters"/utf8>>)), [V71 | [V92 | [V101 | []]]], V68)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35)); {'Idris.TTImp.TTImp.IRecord', E42, E43, E44, E45} -> (fun (V102, V103, V104, V105) -> fun (V106) -> begin (V107 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V102))(V106))), case V107 of {'Idris.Prelude.Types.Left', E46} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V109) -> begin (V110 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Visibility'(V0, V1, V2, V3, V4, V104))(V106))), case V110 of {'Idris.Prelude.Types.Left', E48} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V112) -> begin (V113 = (('dn--un--reflect_Reflect__ImpRecord'(V0, V1, V2, V3, V4, V105))(V106))), case V113 of {'Idris.Prelude.Types.Left', E50} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V115) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRecord"/utf8>>)), [V109 | [V112 | [V115 | []]]], V106)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.INamespace', E52, E53, E54} -> (fun (V116, V117, V118) -> fun (V119) -> begin (V120 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V116))(V119))), case V120 of {'Idris.Prelude.Types.Left', E55} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V122) -> begin (V123 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Namespace'(V0, V1, V2, V3, V4, V117, V119))), case V123 of {'Idris.Prelude.Types.Left', E57} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V125) -> begin (V132 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reflect_Reflect__ImpDecl'(V126, V127, V128, V129, V130, V131)) end end end end end end, V0, V1, V2, V3, V4, V118))(V119))), case V132 of {'Idris.Prelude.Types.Left', E59} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V134) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamespace"/utf8>>)), [V122 | [V125 | [V134 | []]]], V119)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); {'Idris.TTImp.TTImp.ITransform', E61, E62, E63, E64} -> (fun (V135, V136, V137, V138) -> fun (V139) -> begin (V140 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V135))(V139))), case V140 of {'Idris.Prelude.Types.Left', E65} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V142) -> begin (V143 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V136))(V139))), case V143 of {'Idris.Prelude.Types.Left', E67} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V145) -> begin (V146 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V137))(V139))), case V146 of {'Idris.Prelude.Types.Left', E69} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V148) -> begin (V149 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V138))(V139))), case V149 of {'Idris.Prelude.Types.Left', E71} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V151) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ITransform"/utf8>>)), [V142 | [V145 | [V148 | [V151 | []]]]], V139)) end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E61, E62, E63, E64)); {'Idris.TTImp.TTImp.IRunElabDecl', E73, E74} -> (fun (V152, V153) -> fun (V154) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %runElab"/utf8>>}, V154)) end end(E73, E74)); {'Idris.TTImp.TTImp.IPragma', E75} -> (fun (V155) -> fun (V156) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a pragma"/utf8>>}, V156)) end end(E75)); {'Idris.TTImp.TTImp.ILog', E76} -> (fun (V157) -> fun (V158) -> begin (V178 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__String'(V165, V166, V167, V168, V169, V170, V171)) end end end end end end end, V159, V160, V161, V162, V163, V164)) end end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Nat'(V172, V173, V174, V175, V176, V177)) end end end end end end}, V0, V1, V2, V3, V4, V157))(V158))), case V178 of {'Idris.Prelude.Types.Left', E77} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V180) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILog"/utf8>>)), [V180 | []], V158)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__ImpData'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V8))(V11))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect__DataOpt'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V36 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--reflect_Reflect__ImpTy'(V30, V31, V32, V33, V34, V35)) end end end end end end, V0, V1, V2, V3, V4, V10))(V11))), case V36 of {'Idris.Prelude.Types.Left', E13} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V38) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkData"/utf8>>)), [V14 | [V17 | [V20 | [V29 | [V38 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E15, E16, E17} -> (fun (V39, V40, V41) -> fun (V42) -> begin (V43 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V39))(V42))), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> begin (V46 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V40))(V42))), case V46 of {'Idris.Prelude.Types.Left', E20} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V48) -> begin (V49 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V41))(V42))), case V49 of {'Idris.Prelude.Types.Left', E22} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkLater"/utf8>>)), [V45 | [V48 | [V51 | []]]], V42)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__ImpClause'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V13 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V7))(V9))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V8))(V9))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PatClause"/utf8>>)), [V12 | [V15 | [V18 | []]]], V9)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E9, E10, E11, E12, E13} -> (fun (V19, V20, V21, V22, V23) -> fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V19))(V24))), case V25 of {'Idris.Prelude.Types.Left', E14} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V27) -> begin (V28 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V20))(V24))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V21))(V24))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> begin (V40 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('dn--un--reflect_Reflect__ImpClause'(V34, V35, V36, V37, V38, V39)) end end end end end end, V0, V1, V2, V3, V4, V23))(V24))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithClause"/utf8>>)), [V27 | [V30 | [V33 | [V42 | []]]]], V24)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10, E11, E12, E13)); {'Idris.TTImp.TTImp.ImpossibleClause', E22, E23} -> (fun (V43, V44) -> fun (V45) -> begin (V46 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V43))(V45))), case V46 of {'Idris.Prelude.Types.Left', E24} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V48) -> begin (V49 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V44))(V45))), case V49 of {'Idris.Prelude.Types.Left', E26} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V51) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ImpossibleClause"/utf8>>)), [V48 | [V51 | []]], V45)) end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V6, V7) -> fun (V8) -> begin (V16 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__String'(V9, V10, V11, V12, V13, V14, V15)) end end end end end end end, V0, V1, V2, V3, V4, V6))(V8))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V19 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V7))(V8))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetField"/utf8>>)), [V18 | [V21 | []]], V8)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E6, E7} -> (fun (V22, V23) -> fun (V24) -> begin (V32 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__String'(V25, V26, V27, V28, V29, V30, V31)) end end end end end end end, V0, V1, V2, V3, V4, V22))(V24))), case V32 of {'Idris.Prelude.Types.Left', E8} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V34) -> begin (V35 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V23))(V24))), case V35 of {'Idris.Prelude.Types.Left', E10} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V37) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetFieldApp"/utf8>>)), [V34 | [V37 | []]], V24)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__IField'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__FC'(V0, V1, V2, V3, V4, V6))(V11))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V7))(V11))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V24 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(PiInfo $t)'('erased', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('dn--un--reflect_Reflect__RawImp'(V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V8))(V11))), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V0, V1, V2, V3, V4, V9))(V11))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V10))(V11))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkIField"/utf8>>)), [V14 | [V17 | [V26 | [V29 | [V32 | []]]]]], V11)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__FnOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Inline"/utf8>>)), V6)) end end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TCInline"/utf8>>)), V7)) end end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Bool'(V0, V1, V2, V3, V4, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Hint"/utf8>>)), [V12 | []], V9)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V13) -> fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Bool'(V0, V1, V2, V3, V4, V13))(V14))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"GlobalHint"/utf8>>)), [V17 | []], V14)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ExternFn"/utf8>>)), V18)) end end()); {'Idris.TTImp.TTImp.ForeignFn', E6} -> (fun (V19) -> fun (V20) -> begin (V27 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> ('dn--un--reflect_Reflect__RawImp'(V21, V22, V23, V24, V25, V26)) end end end end end end, V0, V1, V2, V3, V4, V19))(V20))), case V27 of {'Idris.Prelude.Types.Left', E7} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V29) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignFn"/utf8>>)), [V29 | []], V20)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Invertible"/utf8>>)), V30)) end end()); {'Idris.TTImp.TTImp.Totality', E9} -> (fun (V31) -> fun (V32) -> begin (V33 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__TotalReq'(V0, V1, V2, V3, V4, V31))(V32))), case V33 of {'Idris.Prelude.Types.Left', E10} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V35) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Totality"/utf8>>)), [V35 | []], V32)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Macro"/utf8>>)), V36)) end end()); {'Idris.TTImp.TTImp.SpecArgs', E12} -> (fun (V37) -> fun (V38) -> begin (V45 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V39, V40, V41, V42, V43, V44)) end end end end end end, V0, V1, V2, V3, V4, V37))(V38))), case V45 of {'Idris.Prelude.Types.Left', E13} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V47) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SpecArgs"/utf8>>)), [V47 | []], V38)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__DotReason'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.Core.NonLinearVar'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NonLinearVar"/utf8>>)), V6)) end end()); {'Idris.Core.Core.VarApplied'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"VarApplied"/utf8>>)), V7)) end end()); {'Idris.Core.Core.NotConstructor'} -> (fun () -> fun (V8) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NotConstructor"/utf8>>)), V8)) end end()); {'Idris.Core.Core.ErasedArg'} -> (fun () -> fun (V9) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ErasedArg"/utf8>>)), V9)) end end()); {'Idris.Core.Core.UserDotted'} -> (fun () -> fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UserDotted"/utf8>>)), V10)) end end()); {'Idris.Core.Core.UnknownDot'} -> (fun () -> fun (V11) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnknownDot"/utf8>>)), V11)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__DataOpt'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V6) -> fun (V7) -> begin (V14 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__(List $a)'('erased', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__Name'(V8, V9, V10, V11, V12, V13)) end end end end end end, V0, V1, V2, V3, V4, V6))(V7))), case V14 of {'Idris.Prelude.Types.Left', E1} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V16) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SearchBy"/utf8>>)), [V16 | []], V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoHints"/utf8>>)), V17)) end end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueSearch"/utf8>>)), V18)) end end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> fun (V19) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"External"/utf8>>)), V19)) end end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> fun (V20) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoNewtype"/utf8>>)), V20)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__BindMode'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.PI', E0} -> (fun (V6) -> fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect__RigCount'(V0, V1, V2, V3, V4, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PI"/utf8>>)), [V10 | []], V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.PATTERN'} -> (fun () -> fun (V11) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PATTERN"/utf8>>)), V11)) end end()); {'Idris.TTImp.TTImp.NONE'} -> (fun () -> fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NONE"/utf8>>)), V12)) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect__AltType'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.FirstSuccess'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"FirstSuccess"/utf8>>)), V6)) end end()); {'Idris.TTImp.TTImp.Unique'} -> (fun () -> fun (V7) -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Unique"/utf8>>)), V7)) end end()); {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V8) -> fun (V9) -> begin (V10 = (('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V12) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueDefault"/utf8>>)), [V12 | []], V9)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Reify_UseSide'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__UseSide'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_RawImp'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__RawImp'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpTy'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__ImpTy'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpRecord'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__ImpRecord'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpDecl'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__ImpDecl'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpData'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__ImpData'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_ImpClause'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__ImpClause'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IFieldUpdate'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__IFieldUpdate'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_IField'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__IField'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_FnOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__FnOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DotReason'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__DotReason'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_DataOpt'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__DataOpt'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_BindMode'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__BindMode'(V0, V1, V2, V3)).
'dn--un--__Impl_Reify_AltType'(V0, V1, V2, V3) -> ('dn--un--reify_Reify__AltType'(V0, V1, V2, V3)).
'dn--un--__Impl_Reflect_UseSide'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__UseSide'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__RawImp'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__ImpTy'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__ImpRecord'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__ImpDecl'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpData'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__ImpData'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__ImpClause'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__IFieldUpdate'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_IField'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__IField'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__FnOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DotReason'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__DotReason'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__DataOpt'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_BindMode'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__BindMode'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_AltType'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect__AltType'(V0, V1, V2, V3, V4, V5)).
