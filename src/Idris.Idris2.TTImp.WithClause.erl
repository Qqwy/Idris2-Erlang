-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-4886'/22,
  'case--case block in case block in getNewLHS-4835'/18,
  'case--case block in getNewLHS-4791'/15,
  'case--getNewLHS-4748'/10,
  'case--getNewLHS,dropWithArgs-4691'/14,
  'case--getArgMatch-4627'/7,
  'case--getArgMatch-4574'/5,
  'case--mergeMatches-4511'/6,
  'case--getMatch-4418'/6,
  'case--getMatch-4239'/10,
  'case--getMatch-4135'/14,
  'case--getMatch-4063'/6,
  'case--getMatch-4022'/7,
  'case--getMatch-3976'/8,
  'nested--7008-5082--in--un--wrhsC'/8,
  'nested--7008-5081--in--un--wrhs'/8,
  'nested--7008-5079--in--un--withApply'/10,
  'nested--7008-5080--in--un--updateWith'/10,
  'nested--5715-4094--in--un--samePiInfo'/15,
  'nested--6518-4668--in--un--dropWithArgs'/11,
  'un--withRHS'/7,
  'un--mergeMatches'/2,
  'un--matchFail'/3,
  'un--matchAny'/3,
  'un--matchAll'/2,
  'un--getNewLHS'/10,
  'un--getMatch'/3,
  'un--getArgMatch'/5
]).
'case--case block in case block in case block in getNewLHS-4886'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of [E0 | E1] -> (fun (V22, V23) -> fun (V24) -> begin (V28 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V15)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V18)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" dropping "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V25) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V25)) end, fun (V26) -> fun (V27) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V26, V27)) end end}, [V22 | V23])))))))))) end))(V24))), case V28 of {'Idris.Prelude.Types.Left', E2} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V30) -> begin (V31 = (('un--getMatch'(0, V15, V18))(V24))), case V31 of {'Idris.Prelude.Types.Left', E4} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V33) -> begin (V49 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Matches: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V36, V37)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V38) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V39, V40)) end end}}, V34)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V44, V45)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V47, V48)) end end}}, V41, V42)) end end}, V33)))) end))(V24))), case V49 of {'Idris.Prelude.Types.Left', E6} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V51) -> begin (V53 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V4}, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V52) -> ('un--getArgMatch'(V7, 1, V22, V33, V52)) end, V3)), V23))))), begin (V54 = (('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"New LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V53)))) end))(V24))), case V54 of {'Idris.Prelude.Types.Left', E8} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V56) -> {'Idris.Prelude.Types.Right', V53} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V57) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V57)) end end.
'case--case block in case block in getNewLHS-4835'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V18, V19) -> fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V20))), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V24 = {'Idris.Builtin.MkPair', V18, V19}), (('case--case block in case block in case block in getNewLHS-4886'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V18, V19, V24, V23, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V20)) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in getNewLHS-4791'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> fun (V17) -> begin (V18 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V9, V17))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = {'Idris.Builtin.MkPair', V15, V16}), case V20 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V22, V23) -> begin (V24 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V12, V17))), case V24 of {'Idris.Prelude.Types.Left', E6} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V26) -> begin (V27 = {'Idris.Builtin.MkPair', V22, V23}), (('case--case block in case block in case block in getNewLHS-4886'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V16, V21, V22, V23, V27, V26, ('Idris.Idris2.Data.List':'un--reverse'('erased', V10))))(V17)) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS-4748'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V8, V12))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, 0, V12))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V2, V12))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = {'Idris.Builtin.MkPair', V10, V11}), case V21 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V23, V24) -> begin (V25 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V8, 1, V10, V12))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = {'Idris.Builtin.MkPair', V23, V24}), case V27 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V29, V30) -> begin (V31 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V8, V15, V12))), case V31 of {'Idris.Prelude.Types.Left', E14} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V33) -> begin (V34 = {'Idris.Builtin.MkPair', V29, V30}), (('case--case block in case block in case block in getNewLHS-4886'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V10, V11, V22, V15, V18, V23, V24, V28, V29, V30, V34, V33, ('Idris.Idris2.Data.List':'un--reverse'('erased', V11))))(V12)) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getNewLHS,dropWithArgs-4691'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V14, [V11 | V15]}} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-4627'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.TTImp.TTImp.Implicit', V5, 0} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> V7 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getArgMatch-4574'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.TTImp.TTImp.ISearch', V3, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(500))} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> V5 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeMatches-4511'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V0, V1} | V4]} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> fun (V8) -> begin (V9 = (('un--getMatch'(V3, V1, V7))(V8))), case V9 of {'Idris.Prelude.Types.Left', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V11) -> (('un--mergeMatches'(V3, V2))(V8)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4418'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V1, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4239'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of 0 -> ('un--matchAll'(V8, [{'Idris.Builtin.MkPair', V3, V6} | [{'Idris.Builtin.MkPair', V1, V4} | []]])); 1 -> fun (V10) -> ('un--matchFail'('erased', V7, V10)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4135'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of 0 -> ('un--matchAll'(V12, [{'Idris.Builtin.MkPair', V2, V7} | [{'Idris.Builtin.MkPair', V1, V6} | []]])); 1 -> fun (V14) -> ('un--matchFail'('erased', V11, V14)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4063'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> fun (V6) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V7) -> ('un--matchFail'('erased', V3, V7)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-4022'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V8) -> ('un--matchFail'('erased', V4, V8)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--getMatch-3976'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end; 1 -> fun (V9) -> ('un--matchFail'('erased', V5, V9)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7008-5082--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V8, V9, V10) -> fun (V11) -> begin (V12 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V10))(V11))), case V12 of {'Idris.Prelude.Types.Left', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V8, V9, V14}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V15) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V8, V9, V10, V11, V12, V13) -> fun (V14) -> begin (V15 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V13))(V14))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V8, V9, V10, V11, V17, V20}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V21, V22, V23, V24, V25, V26) -> fun (V27) -> begin (V28 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V25))(V27))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V21, V22, V23, V24, V30, V33}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25} -> (fun (V34, V35, V36, V37, V38, V39) -> fun (V40) -> begin (V41 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V37))(V40))), case V41 of {'Idris.Prelude.Types.Left', E26} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V43) -> begin (V44 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V38))(V40))), case V44 of {'Idris.Prelude.Types.Left', E28} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V46) -> begin (V47 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V39))(V40))), case V47 of {'Idris.Prelude.Types.Left', E30} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V34, V35, V36, V43, V46, V49}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25)); {'Idris.TTImp.TTImp.ICase', E32, E33, E34, E35} -> (fun (V50, V51, V52, V53) -> fun (V54) -> begin (V55 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V51))(V54))), case V55 of {'Idris.Prelude.Types.Left', E36} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V57) -> begin (V58 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V52))(V54))), case V58 of {'Idris.Prelude.Types.Left', E38} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V60) -> begin (V62 = (('Idris.Idris2.Core.Core':'un--traverse'('erased', 'erased', fun (V61) -> ('nested--7008-5082--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V61)) end, V53))(V54))), case V62 of {'Idris.Prelude.Types.Left', E40} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V50, V57, V60, V64}} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33, E34, E35)); {'Idris.TTImp.TTImp.ILocal', E42, E43, E44} -> (fun (V65, V66, V67) -> fun (V68) -> begin (V69 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V67))(V68))), case V69 of {'Idris.Prelude.Types.Left', E45} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V71) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V65, V66, V71}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44)); {'Idris.TTImp.TTImp.IUpdate', E47, E48, E49} -> (fun (V72, V73, V74) -> fun (V75) -> begin (V76 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V74))(V75))), case V76 of {'Idris.Prelude.Types.Left', E50} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V78) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V72, V73, V78}} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47, E48, E49)); {'Idris.TTImp.TTImp.IApp', E52, E53, E54} -> (fun (V79, V80, V81) -> fun (V82) -> begin (V83 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V80))(V82))), case V83 of {'Idris.Prelude.Types.Left', E55} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V85) -> begin (V86 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V81))(V82))), case V86 of {'Idris.Prelude.Types.Left', E57} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V79, V85, V88}} end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E52, E53, E54)); {'Idris.TTImp.TTImp.IImplicitApp', E59, E60, E61, E62} -> (fun (V89, V90, V91, V92) -> fun (V93) -> begin (V94 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V90))(V93))), case V94 of {'Idris.Prelude.Types.Left', E63} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V96) -> begin (V97 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V92))(V93))), case V97 of {'Idris.Prelude.Types.Left', E65} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IImplicitApp', V89, V96, V91, V99}} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E59, E60, E61, E62)); {'Idris.TTImp.TTImp.IWithApp', E67, E68, E69} -> (fun (V100, V101, V102) -> ('nested--7008-5080--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V100, V101, [V102 | []])) end(E67, E68, E69)); {'Idris.TTImp.TTImp.IRewrite', E70, E71, E72} -> (fun (V103, V104, V105) -> fun (V106) -> begin (V107 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V104))(V106))), case V107 of {'Idris.Prelude.Types.Left', E73} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V109) -> begin (V110 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V105))(V106))), case V110 of {'Idris.Prelude.Types.Left', E75} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V103, V109, V112}} end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E70, E71, E72)); {'Idris.TTImp.TTImp.IDelayed', E77, E78, E79} -> (fun (V113, V114, V115) -> fun (V116) -> begin (V117 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V115))(V116))), case V117 of {'Idris.Prelude.Types.Left', E80} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V113, V114, V119}} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E77, E78, E79)); {'Idris.TTImp.TTImp.IDelay', E82, E83} -> (fun (V120, V121) -> fun (V122) -> begin (V123 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V121))(V122))), case V123 of {'Idris.Prelude.Types.Left', E84} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V125) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V120, V125}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E82, E83)); {'Idris.TTImp.TTImp.IForce', E86, E87} -> (fun (V126, V127) -> fun (V128) -> begin (V129 = (('nested--7008-5081--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V127))(V128))), case V129 of {'Idris.Prelude.Types.Left', E88} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V131) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V126, V131}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E86, E87)); _ -> fun (V132) -> {'Idris.Prelude.Types.Right', V7} end end.
'nested--7008-5079--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [] -> V8; [E0 | E1] -> (fun (V10, V11) -> ('nested--7008-5079--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, {'Idris.TTImp.TTImp.IWithApp', V7, V8, V10}, V11)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7008-5080--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.IWithApp', E12, E13, E14} -> (fun (V10, V11, V12) -> ('nested--7008-5080--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V11, [V12 | V9])) end(E12, E13, E14)); _ -> case V9 of [] -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V13)) end; [E0 | E1] -> (fun (V14, V15) -> fun (V16) -> begin (V17 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"With-app: Matching "/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V0)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V8)))))))) end))(V16))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = (('un--getMatch'(1, V0, V8))(V16))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V38 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Result: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V24) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V25, V26)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V27) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V28, V29)) end end}}, V23)) end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__String'(V32)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__String'(V33, V34)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V36, V37)) end end}}, V30, V31)) end end}, V22)))) end))(V16))), case V38 of {'Idris.Prelude.Types.Left', E6} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V40) -> begin (V42 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V7, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V41) -> ('un--getArgMatch'(V7, 0, V14, V22, V41)) end, V2))))), begin (V100 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"With args for RHS: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V47, V48)) end end}, V45)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V52, V53)) end end}, V49, V50)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V55, V56)) end end}}, V44)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V59) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V60) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V61, V62)) end end}, V59)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V65) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V66, V67)) end end}, V63, V64)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V69, V70)) end end}}, V57, V58)) end end}, V43)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(Maybe $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V73) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V74) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V76, V77)) end end}, V74)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V80) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V80)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V81, V82)) end end}, V78, V79)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V84, V85)) end end}}, V73)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show__(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V88) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V89) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V90, V91)) end end}, V88)) end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(PiInfo $t)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V94) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V95, V96)) end end}, V92, V93)) end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V97) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V97)) end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show__Name'(V98, V99)) end end}}, V86, V87)) end end}, V71, V72)) end end}, V2)))) end))(V16))), case V100 of {'Idris.Prelude.Types.Left', E8} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V102) -> begin (V103 = (('Idris.Idris2.Core.Context.Log':'un--log'(V6, <<"with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"New RHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V42)))) end))(V16))), case V103 of {'Idris.Prelude.Types.Left', E10} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V105) -> {'Idris.Prelude.Types.Right', ('nested--7008-5079--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V42, V15))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--5715-4094--in--un--samePiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.Core.TT.Explicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Explicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.Implicit'} -> (fun () -> case V14 of {'Idris.Core.TT.Implicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V14 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> 0 end()); _ -> 1 end end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V15) -> case V14 of {'Idris.Core.TT.DefImplicit', E1} -> (fun (V16) -> 0 end(E1)); _ -> 1 end end(E0)); _ -> 1 end.
'nested--6518-4668--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), case V10 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V13, V14, V15) -> fun (V16) -> begin (V17 = (('nested--6518-4668--in--un--dropWithArgs'('erased', V1, V2, V3, V4, V5, V6, V7, V8, V12, V14))(V16))), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, [V15 | V21]}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> fun (V22) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V7, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V22)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6) -> ('nested--7008-5081--in--un--wrhs'(V6, V5, V4, V3, V2, V1, V0, V5)).
'un--mergeMatches'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--mergeMatches'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> (('case--mergeMatches-4511'(V5, V6, V4, V0, V10, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V13, V14)) end end}, V5, V10))))(V7)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchFail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.GenericMsg', V1, <<"With clause does not match parent"/utf8>>}, V2)).
'un--matchAny'(V0, V1, V2) -> case V2 of [] -> fun (V3) -> ('un--matchFail'('erased', V0, V3)) end; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> fun (V8) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', ('un--getMatch'(V1, V6, V7)), fun (V9) -> ('un--matchAny'(V0, V1, V5)) end, V8)) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchAll'(V0, V1) -> case V1 of [] -> fun (V2) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> fun (V7) -> begin (V8 = (('un--matchAll'(V0, V4))(V7))), case V8 of {'Idris.Prelude.Types.Left', E4} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V10) -> begin (V11 = (('un--getMatch'(V0, V5, V6))(V7))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> (('un--mergeMatches'(V0, ('Idris.Idris2.Prelude.Types.List':'un--++'('erased', V13, V10))))(V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V10 = (('nested--6518-4668--in--un--dropWithArgs'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> begin (V15 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V9))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, 0, V9))), case V18 of {'Idris.Prelude.Types.Left', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V7, V9))), case V21 of {'Idris.Prelude.Types.Left', E8} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V23) -> begin (V24 = {'Idris.Builtin.MkPair', V13, V14}), case V23 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V25, V26) -> begin (V27 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 1, V13, V9))), case V27 of {'Idris.Prelude.Types.Left', E12} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V29) -> begin (V30 = {'Idris.Builtin.MkPair', V25, V26}), case V29 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V31, V32) -> begin (V33 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V17, V9))), case V33 of {'Idris.Prelude.Types.Left', E16} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V35) -> begin (V36 = {'Idris.Builtin.MkPair', V31, V32}), (('case--case block in case block in case block in getNewLHS-4886'('erased', V8, V7, V6, V5, V4, V3, V2, V1, V13, V14, V24, V17, V20, V25, V26, V30, V31, V32, V36, V35, ('Idris.Idris2.Data.List':'un--reverse'('erased', V14))))(V9)) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getMatch'(V0, V1, V2) -> case V1 of {'Idris.TTImp.TTImp.IBindVar', E146, E147} -> (fun (V3, V4) -> fun (V5) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V4, V2} | []]} end end(E146, E147)); {'Idris.TTImp.TTImp.Implicit', E148, E149} -> (fun (V6, V7) -> fun (V8) -> {'Idris.Prelude.Types.Right', []} end end(E148, E149)); {'Idris.TTImp.TTImp.IVar', E150, E151} -> (fun (V9, V10) -> case V10 of {'Idris.Core.Name.NS', E300, E301} -> (fun (V11, V12) -> case V2 of {'Idris.TTImp.TTImp.IVar', E450, E451} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.NS', E452, E453} -> (fun (V15, V16) -> ('case--getMatch-3976'(V9, V12, V11, V16, V15, V13, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V12, V16)), fun () -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V15, V11)) end)))) end(E452, E453)); _ -> ('case--getMatch-4022'(V9, V12, V11, V14, V13, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V12, V14)))) end end(E450, E451)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E448, E449} -> (fun (V17, V18) -> ('case--getMatch-4063'(V9, V10, V18, V17, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V18)))) end(E448, E449)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E394, E395, E396, E397} -> (fun (V19, V20, V21, V22) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V20, V2} | [{'Idris.Builtin.MkPair', V22, V22} | []]])) end(E394, E395, E396, E397)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E390, E391, E392, E393} -> (fun (V23, V24, V25, V26) -> fun (V27) -> ('un--matchFail'('erased', V23, V27)) end end(E390, E391, E392, E393)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E358, E359, E360} -> (fun (V28, V29, V30) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E371, E372, E373} -> (fun (V31, V32, V33) -> ('un--matchAny'(V28, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V30, V33)))) end(E371, E372, E373)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E367, E368, E369, E370} -> (fun (V34, V35, V36, V37) -> ('un--getMatch'(V0, V1, V37)) end(E367, E368, E369, E370)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E361} -> (fun (V38) -> case V2 of {'Idris.TTImp.TTImp.IType', E362} -> (fun (V39) -> fun (V40) -> {'Idris.Prelude.Types.Right', []} end end(E362)); _ -> fun (V41) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V41)) end end end(E361)); {'Idris.TTImp.TTImp.IPrimVal', E363, E364} -> (fun (V42, V43) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E365, E366} -> (fun (V44, V45) -> ('case--getMatch-4418'(V43, V42, V45, V44, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V43, V45)))) end(E365, E366)); _ -> fun (V46) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V46)) end end end(E363, E364)); _ -> fun (V47) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V47)) end end end end end(E358, E359, E360)); {'Idris.TTImp.TTImp.IAs', E374, E375, E376, E377} -> (fun (V48, V49, V50, V51) -> case V50 of {'Idris.Core.Name.UN', E378} -> (fun (V52) -> case V2 of {'Idris.TTImp.TTImp.IAs', E381, E382, E383, E384} -> (fun (V53, V54, V55, V56) -> case V55 of {'Idris.Core.Name.UN', E387} -> (fun (V57) -> fun (V58) -> begin (V59 = (('un--getMatch'(V0, V51, V56))(V58))), case V59 of {'Idris.Prelude.Types.Left', E388} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E388)); {'Idris.Prelude.Types.Right', E389} -> (fun (V61) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V52, {'Idris.TTImp.TTImp.IBindVar', V53, V57}} | V61]))(V58)) end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E387)); _ -> fun (V62) -> begin (V63 = (('un--getMatch'(V0, V51, V2))(V62))), case V63 of {'Idris.Prelude.Types.Left', E385} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V65) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V52, V2} | V65]))(V62)) end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E381, E382, E383, E384)); _ -> fun (V66) -> begin (V67 = (('un--getMatch'(V0, V51, V2))(V66))), case V67 of {'Idris.Prelude.Types.Left', E379} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E379)); {'Idris.Prelude.Types.Right', E380} -> (fun (V69) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V52, V2} | V69]))(V66)) end(E380)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E378)); _ -> ('un--getMatch'(V0, V51, V2)) end end(E374, E375, E376, E377)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E354, E355, E356, E357} -> (fun (V70, V71, V72, V73) -> ('un--getMatch'(V0, V1, V73)) end(E354, E355, E356, E357)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E348} -> (fun (V74) -> case V2 of {'Idris.TTImp.TTImp.IType', E349} -> (fun (V75) -> fun (V76) -> {'Idris.Prelude.Types.Right', []} end end(E349)); _ -> fun (V77) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V77)) end end end(E348)); {'Idris.TTImp.TTImp.IPrimVal', E350, E351} -> (fun (V78, V79) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E352, E353} -> (fun (V80, V81) -> ('case--getMatch-4418'(V79, V78, V81, V80, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V79, V81)))) end(E352, E353)); _ -> fun (V82) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V82)) end end end(E350, E351)); _ -> fun (V83) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V83)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E444, E445, E446, E447} -> (fun (V84, V85, V86, V87) -> ('un--getMatch'(1, V85, V85)) end(E444, E445, E446, E447)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E440, E441, E442, E443} -> (fun (V88, V89, V90, V91) -> fun (V92) -> ('un--matchFail'('erased', V88, V92)) end end(E440, E441, E442, E443)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E408, E409, E410} -> (fun (V93, V94, V95) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E421, E422, E423} -> (fun (V96, V97, V98) -> ('un--matchAny'(V93, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V95, V98)))) end(E421, E422, E423)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E417, E418, E419, E420} -> (fun (V99, V100, V101, V102) -> ('un--getMatch'(V0, V1, V102)) end(E417, E418, E419, E420)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E411} -> (fun (V103) -> case V2 of {'Idris.TTImp.TTImp.IType', E412} -> (fun (V104) -> fun (V105) -> {'Idris.Prelude.Types.Right', []} end end(E412)); _ -> fun (V106) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V106)) end end end(E411)); {'Idris.TTImp.TTImp.IPrimVal', E413, E414} -> (fun (V107, V108) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E415, E416} -> (fun (V109, V110) -> ('case--getMatch-4418'(V108, V107, V110, V109, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V108, V110)))) end(E415, E416)); _ -> fun (V111) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V111)) end end end(E413, E414)); _ -> fun (V112) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V112)) end end end end end(E408, E409, E410)); {'Idris.TTImp.TTImp.IAs', E424, E425, E426, E427} -> (fun (V113, V114, V115, V116) -> case V115 of {'Idris.Core.Name.UN', E428} -> (fun (V117) -> case V2 of {'Idris.TTImp.TTImp.IAs', E431, E432, E433, E434} -> (fun (V118, V119, V120, V121) -> case V120 of {'Idris.Core.Name.UN', E437} -> (fun (V122) -> fun (V123) -> begin (V124 = (('un--getMatch'(V0, V116, V121))(V123))), case V124 of {'Idris.Prelude.Types.Left', E438} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E438)); {'Idris.Prelude.Types.Right', E439} -> (fun (V126) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V117, {'Idris.TTImp.TTImp.IBindVar', V118, V122}} | V126]))(V123)) end(E439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E437)); _ -> fun (V127) -> begin (V128 = (('un--getMatch'(V0, V116, V2))(V127))), case V128 of {'Idris.Prelude.Types.Left', E435} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E435)); {'Idris.Prelude.Types.Right', E436} -> (fun (V130) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V117, V2} | V130]))(V127)) end(E436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E431, E432, E433, E434)); _ -> fun (V131) -> begin (V132 = (('un--getMatch'(V0, V116, V2))(V131))), case V132 of {'Idris.Prelude.Types.Left', E429} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E429)); {'Idris.Prelude.Types.Right', E430} -> (fun (V134) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V117, V2} | V134]))(V131)) end(E430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E428)); _ -> ('un--getMatch'(V0, V116, V2)) end end(E424, E425, E426, E427)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E404, E405, E406, E407} -> (fun (V135, V136, V137, V138) -> ('un--getMatch'(V0, V1, V138)) end(E404, E405, E406, E407)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E398} -> (fun (V139) -> case V2 of {'Idris.TTImp.TTImp.IType', E399} -> (fun (V140) -> fun (V141) -> {'Idris.Prelude.Types.Right', []} end end(E399)); _ -> fun (V142) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V142)) end end end(E398)); {'Idris.TTImp.TTImp.IPrimVal', E400, E401} -> (fun (V143, V144) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E402, E403} -> (fun (V145, V146) -> ('case--getMatch-4418'(V144, V143, V146, V145, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V144, V146)))) end(E402, E403)); _ -> fun (V147) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V147)) end end end(E400, E401)); _ -> fun (V148) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V148)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E344, E345, E346, E347} -> (fun (V149, V150, V151, V152) -> fun (V153) -> ('un--matchFail'('erased', V149, V153)) end end(E344, E345, E346, E347)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E312, E313, E314} -> (fun (V154, V155, V156) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E325, E326, E327} -> (fun (V157, V158, V159) -> ('un--matchAny'(V154, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V156, V159)))) end(E325, E326, E327)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E321, E322, E323, E324} -> (fun (V160, V161, V162, V163) -> ('un--getMatch'(V0, V1, V163)) end(E321, E322, E323, E324)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E315} -> (fun (V164) -> case V2 of {'Idris.TTImp.TTImp.IType', E316} -> (fun (V165) -> fun (V166) -> {'Idris.Prelude.Types.Right', []} end end(E316)); _ -> fun (V167) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V167)) end end end(E315)); {'Idris.TTImp.TTImp.IPrimVal', E317, E318} -> (fun (V168, V169) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E319, E320} -> (fun (V170, V171) -> ('case--getMatch-4418'(V169, V168, V171, V170, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V169, V171)))) end(E319, E320)); _ -> fun (V172) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V172)) end end end(E317, E318)); _ -> fun (V173) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V173)) end end end end end(E312, E313, E314)); {'Idris.TTImp.TTImp.IAs', E328, E329, E330, E331} -> (fun (V174, V175, V176, V177) -> case V176 of {'Idris.Core.Name.UN', E332} -> (fun (V178) -> case V2 of {'Idris.TTImp.TTImp.IAs', E335, E336, E337, E338} -> (fun (V179, V180, V181, V182) -> case V181 of {'Idris.Core.Name.UN', E341} -> (fun (V183) -> fun (V184) -> begin (V185 = (('un--getMatch'(V0, V177, V182))(V184))), case V185 of {'Idris.Prelude.Types.Left', E342} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V187) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V178, {'Idris.TTImp.TTImp.IBindVar', V179, V183}} | V187]))(V184)) end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E341)); _ -> fun (V188) -> begin (V189 = (('un--getMatch'(V0, V177, V2))(V188))), case V189 of {'Idris.Prelude.Types.Left', E339} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V191) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V178, V2} | V191]))(V188)) end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E335, E336, E337, E338)); _ -> fun (V192) -> begin (V193 = (('un--getMatch'(V0, V177, V2))(V192))), case V193 of {'Idris.Prelude.Types.Left', E333} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E333)); {'Idris.Prelude.Types.Right', E334} -> (fun (V195) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V178, V2} | V195]))(V192)) end(E334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E332)); _ -> ('un--getMatch'(V0, V177, V2)) end end(E328, E329, E330, E331)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E308, E309, E310, E311} -> (fun (V196, V197, V198, V199) -> ('un--getMatch'(V0, V1, V199)) end(E308, E309, E310, E311)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E302} -> (fun (V200) -> case V2 of {'Idris.TTImp.TTImp.IType', E303} -> (fun (V201) -> fun (V202) -> {'Idris.Prelude.Types.Right', []} end end(E303)); _ -> fun (V203) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V203)) end end end(E302)); {'Idris.TTImp.TTImp.IPrimVal', E304, E305} -> (fun (V204, V205) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E306, E307} -> (fun (V206, V207) -> ('case--getMatch-4418'(V205, V204, V207, V206, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V205, V207)))) end(E306, E307)); _ -> fun (V208) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V208)) end end end(E304, E305)); _ -> fun (V209) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V209)) end end end end end end end end end(E300, E301)); _ -> case V2 of {'Idris.TTImp.TTImp.IVar', E298, E299} -> (fun (V210, V211) -> ('case--getMatch-4063'(V9, V10, V211, V210, V0, ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V10, V211)))) end(E298, E299)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E244, E245, E246, E247} -> (fun (V212, V213, V214, V215) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V213, V2} | [{'Idris.Builtin.MkPair', V215, V215} | []]])) end(E244, E245, E246, E247)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E240, E241, E242, E243} -> (fun (V216, V217, V218, V219) -> fun (V220) -> ('un--matchFail'('erased', V216, V220)) end end(E240, E241, E242, E243)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E208, E209, E210} -> (fun (V221, V222, V223) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E221, E222, E223} -> (fun (V224, V225, V226) -> ('un--matchAny'(V221, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V223, V226)))) end(E221, E222, E223)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E217, E218, E219, E220} -> (fun (V227, V228, V229, V230) -> ('un--getMatch'(V0, V1, V230)) end(E217, E218, E219, E220)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E211} -> (fun (V231) -> case V2 of {'Idris.TTImp.TTImp.IType', E212} -> (fun (V232) -> fun (V233) -> {'Idris.Prelude.Types.Right', []} end end(E212)); _ -> fun (V234) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V234)) end end end(E211)); {'Idris.TTImp.TTImp.IPrimVal', E213, E214} -> (fun (V235, V236) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E215, E216} -> (fun (V237, V238) -> ('case--getMatch-4418'(V236, V235, V238, V237, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V236, V238)))) end(E215, E216)); _ -> fun (V239) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V239)) end end end(E213, E214)); _ -> fun (V240) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V240)) end end end end end(E208, E209, E210)); {'Idris.TTImp.TTImp.IAs', E224, E225, E226, E227} -> (fun (V241, V242, V243, V244) -> case V243 of {'Idris.Core.Name.UN', E228} -> (fun (V245) -> case V2 of {'Idris.TTImp.TTImp.IAs', E231, E232, E233, E234} -> (fun (V246, V247, V248, V249) -> case V248 of {'Idris.Core.Name.UN', E237} -> (fun (V250) -> fun (V251) -> begin (V252 = (('un--getMatch'(V0, V244, V249))(V251))), case V252 of {'Idris.Prelude.Types.Left', E238} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V254) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V245, {'Idris.TTImp.TTImp.IBindVar', V246, V250}} | V254]))(V251)) end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E237)); _ -> fun (V255) -> begin (V256 = (('un--getMatch'(V0, V244, V2))(V255))), case V256 of {'Idris.Prelude.Types.Left', E235} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V258) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V245, V2} | V258]))(V255)) end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E231, E232, E233, E234)); _ -> fun (V259) -> begin (V260 = (('un--getMatch'(V0, V244, V2))(V259))), case V260 of {'Idris.Prelude.Types.Left', E229} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V262) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V245, V2} | V262]))(V259)) end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E228)); _ -> ('un--getMatch'(V0, V244, V2)) end end(E224, E225, E226, E227)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E204, E205, E206, E207} -> (fun (V263, V264, V265, V266) -> ('un--getMatch'(V0, V1, V266)) end(E204, E205, E206, E207)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E198} -> (fun (V267) -> case V2 of {'Idris.TTImp.TTImp.IType', E199} -> (fun (V268) -> fun (V269) -> {'Idris.Prelude.Types.Right', []} end end(E199)); _ -> fun (V270) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V270)) end end end(E198)); {'Idris.TTImp.TTImp.IPrimVal', E200, E201} -> (fun (V271, V272) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E202, E203} -> (fun (V273, V274) -> ('case--getMatch-4418'(V272, V271, V274, V273, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V272, V274)))) end(E202, E203)); _ -> fun (V275) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V275)) end end end(E200, E201)); _ -> fun (V276) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V276)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E294, E295, E296, E297} -> (fun (V277, V278, V279, V280) -> ('un--getMatch'(1, V278, V278)) end(E294, E295, E296, E297)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E290, E291, E292, E293} -> (fun (V281, V282, V283, V284) -> fun (V285) -> ('un--matchFail'('erased', V281, V285)) end end(E290, E291, E292, E293)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E258, E259, E260} -> (fun (V286, V287, V288) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E271, E272, E273} -> (fun (V289, V290, V291) -> ('un--matchAny'(V286, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V288, V291)))) end(E271, E272, E273)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E267, E268, E269, E270} -> (fun (V292, V293, V294, V295) -> ('un--getMatch'(V0, V1, V295)) end(E267, E268, E269, E270)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E261} -> (fun (V296) -> case V2 of {'Idris.TTImp.TTImp.IType', E262} -> (fun (V297) -> fun (V298) -> {'Idris.Prelude.Types.Right', []} end end(E262)); _ -> fun (V299) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V299)) end end end(E261)); {'Idris.TTImp.TTImp.IPrimVal', E263, E264} -> (fun (V300, V301) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E265, E266} -> (fun (V302, V303) -> ('case--getMatch-4418'(V301, V300, V303, V302, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V301, V303)))) end(E265, E266)); _ -> fun (V304) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V304)) end end end(E263, E264)); _ -> fun (V305) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V305)) end end end end end(E258, E259, E260)); {'Idris.TTImp.TTImp.IAs', E274, E275, E276, E277} -> (fun (V306, V307, V308, V309) -> case V308 of {'Idris.Core.Name.UN', E278} -> (fun (V310) -> case V2 of {'Idris.TTImp.TTImp.IAs', E281, E282, E283, E284} -> (fun (V311, V312, V313, V314) -> case V313 of {'Idris.Core.Name.UN', E287} -> (fun (V315) -> fun (V316) -> begin (V317 = (('un--getMatch'(V0, V309, V314))(V316))), case V317 of {'Idris.Prelude.Types.Left', E288} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E288)); {'Idris.Prelude.Types.Right', E289} -> (fun (V319) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V310, {'Idris.TTImp.TTImp.IBindVar', V311, V315}} | V319]))(V316)) end(E289)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E287)); _ -> fun (V320) -> begin (V321 = (('un--getMatch'(V0, V309, V2))(V320))), case V321 of {'Idris.Prelude.Types.Left', E285} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V323) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V310, V2} | V323]))(V320)) end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E281, E282, E283, E284)); _ -> fun (V324) -> begin (V325 = (('un--getMatch'(V0, V309, V2))(V324))), case V325 of {'Idris.Prelude.Types.Left', E279} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V327) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V310, V2} | V327]))(V324)) end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E278)); _ -> ('un--getMatch'(V0, V309, V2)) end end(E274, E275, E276, E277)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E254, E255, E256, E257} -> (fun (V328, V329, V330, V331) -> ('un--getMatch'(V0, V1, V331)) end(E254, E255, E256, E257)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E248} -> (fun (V332) -> case V2 of {'Idris.TTImp.TTImp.IType', E249} -> (fun (V333) -> fun (V334) -> {'Idris.Prelude.Types.Right', []} end end(E249)); _ -> fun (V335) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V335)) end end end(E248)); {'Idris.TTImp.TTImp.IPrimVal', E250, E251} -> (fun (V336, V337) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E252, E253} -> (fun (V338, V339) -> ('case--getMatch-4418'(V337, V336, V339, V338, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V337, V339)))) end(E252, E253)); _ -> fun (V340) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V340)) end end end(E250, E251)); _ -> fun (V341) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V341)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E194, E195, E196, E197} -> (fun (V342, V343, V344, V345) -> fun (V346) -> ('un--matchFail'('erased', V342, V346)) end end(E194, E195, E196, E197)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E162, E163, E164} -> (fun (V347, V348, V349) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E175, E176, E177} -> (fun (V350, V351, V352) -> ('un--matchAny'(V347, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V349, V352)))) end(E175, E176, E177)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E171, E172, E173, E174} -> (fun (V353, V354, V355, V356) -> ('un--getMatch'(V0, V1, V356)) end(E171, E172, E173, E174)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E165} -> (fun (V357) -> case V2 of {'Idris.TTImp.TTImp.IType', E166} -> (fun (V358) -> fun (V359) -> {'Idris.Prelude.Types.Right', []} end end(E166)); _ -> fun (V360) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V360)) end end end(E165)); {'Idris.TTImp.TTImp.IPrimVal', E167, E168} -> (fun (V361, V362) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E169, E170} -> (fun (V363, V364) -> ('case--getMatch-4418'(V362, V361, V364, V363, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V362, V364)))) end(E169, E170)); _ -> fun (V365) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V365)) end end end(E167, E168)); _ -> fun (V366) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V366)) end end end end end(E162, E163, E164)); {'Idris.TTImp.TTImp.IAs', E178, E179, E180, E181} -> (fun (V367, V368, V369, V370) -> case V369 of {'Idris.Core.Name.UN', E182} -> (fun (V371) -> case V2 of {'Idris.TTImp.TTImp.IAs', E185, E186, E187, E188} -> (fun (V372, V373, V374, V375) -> case V374 of {'Idris.Core.Name.UN', E191} -> (fun (V376) -> fun (V377) -> begin (V378 = (('un--getMatch'(V0, V370, V375))(V377))), case V378 of {'Idris.Prelude.Types.Left', E192} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V380) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V371, {'Idris.TTImp.TTImp.IBindVar', V372, V376}} | V380]))(V377)) end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E191)); _ -> fun (V381) -> begin (V382 = (('un--getMatch'(V0, V370, V2))(V381))), case V382 of {'Idris.Prelude.Types.Left', E189} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V384) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V371, V2} | V384]))(V381)) end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E185, E186, E187, E188)); _ -> fun (V385) -> begin (V386 = (('un--getMatch'(V0, V370, V2))(V385))), case V386 of {'Idris.Prelude.Types.Left', E183} -> (fun (V387) -> {'Idris.Prelude.Types.Left', V387} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V388) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V371, V2} | V388]))(V385)) end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E182)); _ -> ('un--getMatch'(V0, V370, V2)) end end(E178, E179, E180, E181)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E158, E159, E160, E161} -> (fun (V389, V390, V391, V392) -> ('un--getMatch'(V0, V1, V392)) end(E158, E159, E160, E161)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E152} -> (fun (V393) -> case V2 of {'Idris.TTImp.TTImp.IType', E153} -> (fun (V394) -> fun (V395) -> {'Idris.Prelude.Types.Right', []} end end(E153)); _ -> fun (V396) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V396)) end end end(E152)); {'Idris.TTImp.TTImp.IPrimVal', E154, E155} -> (fun (V397, V398) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E156, E157} -> (fun (V399, V400) -> ('case--getMatch-4418'(V398, V397, V400, V399, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V398, V400)))) end(E156, E157)); _ -> fun (V401) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V401)) end end end(E154, E155)); _ -> fun (V402) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V402)) end end end end end end end end end(E150, E151)); {'Idris.TTImp.TTImp.IPi', E454, E455, E456, E457, E458, E459} -> (fun (V403, V404, V405, V406, V407, V408) -> case V2 of {'Idris.TTImp.TTImp.IPi', E606, E607, E608, E609, E610, E611} -> (fun (V409, V410, V411, V412, V413, V414) -> ('case--getMatch-4135'(V403, V408, V407, V406, V405, V404, V414, V413, V412, V411, V410, V409, V0, ('Idris.Idris2.Prelude.Basics':'un--&&'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq__ZeroOneOmega'(V404, V410)), fun () -> ('Idris.Idris2.Prelude.Basics':'un--&&'(('nested--5715-4094--in--un--samePiInfo'(V403, V408, V407, V406, V405, V404, V414, V413, V412, V411, V410, V409, V0, V405, V411)), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V415) -> fun (V416) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V415, V416)) end end, fun (V417) -> fun (V418) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V417, V418)) end end}, V406, V412)) end)) end)))) end(E606, E607, E608, E609, E610, E611)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E552, E553, E554, E555} -> (fun (V419, V420, V421, V422) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V420, V2} | [{'Idris.Builtin.MkPair', V422, V422} | []]])) end(E552, E553, E554, E555)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E548, E549, E550, E551} -> (fun (V423, V424, V425, V426) -> fun (V427) -> ('un--matchFail'('erased', V423, V427)) end end(E548, E549, E550, E551)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E516, E517, E518} -> (fun (V428, V429, V430) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E529, E530, E531} -> (fun (V431, V432, V433) -> ('un--matchAny'(V428, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V430, V433)))) end(E529, E530, E531)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E525, E526, E527, E528} -> (fun (V434, V435, V436, V437) -> ('un--getMatch'(V0, V1, V437)) end(E525, E526, E527, E528)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E519} -> (fun (V438) -> case V2 of {'Idris.TTImp.TTImp.IType', E520} -> (fun (V439) -> fun (V440) -> {'Idris.Prelude.Types.Right', []} end end(E520)); _ -> fun (V441) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V441)) end end end(E519)); {'Idris.TTImp.TTImp.IPrimVal', E521, E522} -> (fun (V442, V443) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E523, E524} -> (fun (V444, V445) -> ('case--getMatch-4418'(V443, V442, V445, V444, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V443, V445)))) end(E523, E524)); _ -> fun (V446) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V446)) end end end(E521, E522)); _ -> fun (V447) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V447)) end end end end end(E516, E517, E518)); {'Idris.TTImp.TTImp.IAs', E532, E533, E534, E535} -> (fun (V448, V449, V450, V451) -> case V450 of {'Idris.Core.Name.UN', E536} -> (fun (V452) -> case V2 of {'Idris.TTImp.TTImp.IAs', E539, E540, E541, E542} -> (fun (V453, V454, V455, V456) -> case V455 of {'Idris.Core.Name.UN', E545} -> (fun (V457) -> fun (V458) -> begin (V459 = (('un--getMatch'(V0, V451, V456))(V458))), case V459 of {'Idris.Prelude.Types.Left', E546} -> (fun (V460) -> {'Idris.Prelude.Types.Left', V460} end(E546)); {'Idris.Prelude.Types.Right', E547} -> (fun (V461) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V452, {'Idris.TTImp.TTImp.IBindVar', V453, V457}} | V461]))(V458)) end(E547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E545)); _ -> fun (V462) -> begin (V463 = (('un--getMatch'(V0, V451, V2))(V462))), case V463 of {'Idris.Prelude.Types.Left', E543} -> (fun (V464) -> {'Idris.Prelude.Types.Left', V464} end(E543)); {'Idris.Prelude.Types.Right', E544} -> (fun (V465) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V452, V2} | V465]))(V462)) end(E544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E539, E540, E541, E542)); _ -> fun (V466) -> begin (V467 = (('un--getMatch'(V0, V451, V2))(V466))), case V467 of {'Idris.Prelude.Types.Left', E537} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E537)); {'Idris.Prelude.Types.Right', E538} -> (fun (V469) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V452, V2} | V469]))(V466)) end(E538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E536)); _ -> ('un--getMatch'(V0, V451, V2)) end end(E532, E533, E534, E535)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E512, E513, E514, E515} -> (fun (V470, V471, V472, V473) -> ('un--getMatch'(V0, V1, V473)) end(E512, E513, E514, E515)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E506} -> (fun (V474) -> case V2 of {'Idris.TTImp.TTImp.IType', E507} -> (fun (V475) -> fun (V476) -> {'Idris.Prelude.Types.Right', []} end end(E507)); _ -> fun (V477) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V477)) end end end(E506)); {'Idris.TTImp.TTImp.IPrimVal', E508, E509} -> (fun (V478, V479) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E510, E511} -> (fun (V480, V481) -> ('case--getMatch-4418'(V479, V478, V481, V480, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V479, V481)))) end(E510, E511)); _ -> fun (V482) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V482)) end end end(E508, E509)); _ -> fun (V483) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V483)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E602, E603, E604, E605} -> (fun (V484, V485, V486, V487) -> ('un--getMatch'(1, V485, V485)) end(E602, E603, E604, E605)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E598, E599, E600, E601} -> (fun (V488, V489, V490, V491) -> fun (V492) -> ('un--matchFail'('erased', V488, V492)) end end(E598, E599, E600, E601)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E566, E567, E568} -> (fun (V493, V494, V495) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E579, E580, E581} -> (fun (V496, V497, V498) -> ('un--matchAny'(V493, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V495, V498)))) end(E579, E580, E581)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E575, E576, E577, E578} -> (fun (V499, V500, V501, V502) -> ('un--getMatch'(V0, V1, V502)) end(E575, E576, E577, E578)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E569} -> (fun (V503) -> case V2 of {'Idris.TTImp.TTImp.IType', E570} -> (fun (V504) -> fun (V505) -> {'Idris.Prelude.Types.Right', []} end end(E570)); _ -> fun (V506) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V506)) end end end(E569)); {'Idris.TTImp.TTImp.IPrimVal', E571, E572} -> (fun (V507, V508) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E573, E574} -> (fun (V509, V510) -> ('case--getMatch-4418'(V508, V507, V510, V509, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V508, V510)))) end(E573, E574)); _ -> fun (V511) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V511)) end end end(E571, E572)); _ -> fun (V512) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V512)) end end end end end(E566, E567, E568)); {'Idris.TTImp.TTImp.IAs', E582, E583, E584, E585} -> (fun (V513, V514, V515, V516) -> case V515 of {'Idris.Core.Name.UN', E586} -> (fun (V517) -> case V2 of {'Idris.TTImp.TTImp.IAs', E589, E590, E591, E592} -> (fun (V518, V519, V520, V521) -> case V520 of {'Idris.Core.Name.UN', E595} -> (fun (V522) -> fun (V523) -> begin (V524 = (('un--getMatch'(V0, V516, V521))(V523))), case V524 of {'Idris.Prelude.Types.Left', E596} -> (fun (V525) -> {'Idris.Prelude.Types.Left', V525} end(E596)); {'Idris.Prelude.Types.Right', E597} -> (fun (V526) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V517, {'Idris.TTImp.TTImp.IBindVar', V518, V522}} | V526]))(V523)) end(E597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E595)); _ -> fun (V527) -> begin (V528 = (('un--getMatch'(V0, V516, V2))(V527))), case V528 of {'Idris.Prelude.Types.Left', E593} -> (fun (V529) -> {'Idris.Prelude.Types.Left', V529} end(E593)); {'Idris.Prelude.Types.Right', E594} -> (fun (V530) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V517, V2} | V530]))(V527)) end(E594)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E589, E590, E591, E592)); _ -> fun (V531) -> begin (V532 = (('un--getMatch'(V0, V516, V2))(V531))), case V532 of {'Idris.Prelude.Types.Left', E587} -> (fun (V533) -> {'Idris.Prelude.Types.Left', V533} end(E587)); {'Idris.Prelude.Types.Right', E588} -> (fun (V534) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V517, V2} | V534]))(V531)) end(E588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E586)); _ -> ('un--getMatch'(V0, V516, V2)) end end(E582, E583, E584, E585)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E562, E563, E564, E565} -> (fun (V535, V536, V537, V538) -> ('un--getMatch'(V0, V1, V538)) end(E562, E563, E564, E565)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E556} -> (fun (V539) -> case V2 of {'Idris.TTImp.TTImp.IType', E557} -> (fun (V540) -> fun (V541) -> {'Idris.Prelude.Types.Right', []} end end(E557)); _ -> fun (V542) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V542)) end end end(E556)); {'Idris.TTImp.TTImp.IPrimVal', E558, E559} -> (fun (V543, V544) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E560, E561} -> (fun (V545, V546) -> ('case--getMatch-4418'(V544, V543, V546, V545, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V544, V546)))) end(E560, E561)); _ -> fun (V547) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V547)) end end end(E558, E559)); _ -> fun (V548) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V548)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E502, E503, E504, E505} -> (fun (V549, V550, V551, V552) -> fun (V553) -> ('un--matchFail'('erased', V549, V553)) end end(E502, E503, E504, E505)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E470, E471, E472} -> (fun (V554, V555, V556) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E483, E484, E485} -> (fun (V557, V558, V559) -> ('un--matchAny'(V554, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V556, V559)))) end(E483, E484, E485)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E479, E480, E481, E482} -> (fun (V560, V561, V562, V563) -> ('un--getMatch'(V0, V1, V563)) end(E479, E480, E481, E482)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E473} -> (fun (V564) -> case V2 of {'Idris.TTImp.TTImp.IType', E474} -> (fun (V565) -> fun (V566) -> {'Idris.Prelude.Types.Right', []} end end(E474)); _ -> fun (V567) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V567)) end end end(E473)); {'Idris.TTImp.TTImp.IPrimVal', E475, E476} -> (fun (V568, V569) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E477, E478} -> (fun (V570, V571) -> ('case--getMatch-4418'(V569, V568, V571, V570, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V569, V571)))) end(E477, E478)); _ -> fun (V572) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V572)) end end end(E475, E476)); _ -> fun (V573) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V573)) end end end end end(E470, E471, E472)); {'Idris.TTImp.TTImp.IAs', E486, E487, E488, E489} -> (fun (V574, V575, V576, V577) -> case V576 of {'Idris.Core.Name.UN', E490} -> (fun (V578) -> case V2 of {'Idris.TTImp.TTImp.IAs', E493, E494, E495, E496} -> (fun (V579, V580, V581, V582) -> case V581 of {'Idris.Core.Name.UN', E499} -> (fun (V583) -> fun (V584) -> begin (V585 = (('un--getMatch'(V0, V577, V582))(V584))), case V585 of {'Idris.Prelude.Types.Left', E500} -> (fun (V586) -> {'Idris.Prelude.Types.Left', V586} end(E500)); {'Idris.Prelude.Types.Right', E501} -> (fun (V587) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V578, {'Idris.TTImp.TTImp.IBindVar', V579, V583}} | V587]))(V584)) end(E501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E499)); _ -> fun (V588) -> begin (V589 = (('un--getMatch'(V0, V577, V2))(V588))), case V589 of {'Idris.Prelude.Types.Left', E497} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E497)); {'Idris.Prelude.Types.Right', E498} -> (fun (V591) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V578, V2} | V591]))(V588)) end(E498)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E493, E494, E495, E496)); _ -> fun (V592) -> begin (V593 = (('un--getMatch'(V0, V577, V2))(V592))), case V593 of {'Idris.Prelude.Types.Left', E491} -> (fun (V594) -> {'Idris.Prelude.Types.Left', V594} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V595) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V578, V2} | V595]))(V592)) end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E490)); _ -> ('un--getMatch'(V0, V577, V2)) end end(E486, E487, E488, E489)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E466, E467, E468, E469} -> (fun (V596, V597, V598, V599) -> ('un--getMatch'(V0, V1, V599)) end(E466, E467, E468, E469)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E460} -> (fun (V600) -> case V2 of {'Idris.TTImp.TTImp.IType', E461} -> (fun (V601) -> fun (V602) -> {'Idris.Prelude.Types.Right', []} end end(E461)); _ -> fun (V603) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V603)) end end end(E460)); {'Idris.TTImp.TTImp.IPrimVal', E462, E463} -> (fun (V604, V605) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E464, E465} -> (fun (V606, V607) -> ('case--getMatch-4418'(V605, V604, V607, V606, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V605, V607)))) end(E464, E465)); _ -> fun (V608) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V608)) end end end(E462, E463)); _ -> fun (V609) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V609)) end end end end end end end end(E454, E455, E456, E457, E458, E459)); {'Idris.TTImp.TTImp.IApp', E612, E613, E614} -> (fun (V610, V611, V612) -> case V2 of {'Idris.TTImp.TTImp.IApp', E761, E762, E763} -> (fun (V613, V614, V615) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V611, V614} | [{'Idris.Builtin.MkPair', V612, V615} | []]])) end(E761, E762, E763)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E707, E708, E709, E710} -> (fun (V616, V617, V618, V619) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V617, V2} | [{'Idris.Builtin.MkPair', V619, V619} | []]])) end(E707, E708, E709, E710)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E703, E704, E705, E706} -> (fun (V620, V621, V622, V623) -> fun (V624) -> ('un--matchFail'('erased', V620, V624)) end end(E703, E704, E705, E706)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E671, E672, E673} -> (fun (V625, V626, V627) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E684, E685, E686} -> (fun (V628, V629, V630) -> ('un--matchAny'(V625, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V627, V630)))) end(E684, E685, E686)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E680, E681, E682, E683} -> (fun (V631, V632, V633, V634) -> ('un--getMatch'(V0, V1, V634)) end(E680, E681, E682, E683)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E674} -> (fun (V635) -> case V2 of {'Idris.TTImp.TTImp.IType', E675} -> (fun (V636) -> fun (V637) -> {'Idris.Prelude.Types.Right', []} end end(E675)); _ -> fun (V638) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V638)) end end end(E674)); {'Idris.TTImp.TTImp.IPrimVal', E676, E677} -> (fun (V639, V640) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E678, E679} -> (fun (V641, V642) -> ('case--getMatch-4418'(V640, V639, V642, V641, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V640, V642)))) end(E678, E679)); _ -> fun (V643) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V643)) end end end(E676, E677)); _ -> fun (V644) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V644)) end end end end end(E671, E672, E673)); {'Idris.TTImp.TTImp.IAs', E687, E688, E689, E690} -> (fun (V645, V646, V647, V648) -> case V647 of {'Idris.Core.Name.UN', E691} -> (fun (V649) -> case V2 of {'Idris.TTImp.TTImp.IAs', E694, E695, E696, E697} -> (fun (V650, V651, V652, V653) -> case V652 of {'Idris.Core.Name.UN', E700} -> (fun (V654) -> fun (V655) -> begin (V656 = (('un--getMatch'(V0, V648, V653))(V655))), case V656 of {'Idris.Prelude.Types.Left', E701} -> (fun (V657) -> {'Idris.Prelude.Types.Left', V657} end(E701)); {'Idris.Prelude.Types.Right', E702} -> (fun (V658) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V649, {'Idris.TTImp.TTImp.IBindVar', V650, V654}} | V658]))(V655)) end(E702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E700)); _ -> fun (V659) -> begin (V660 = (('un--getMatch'(V0, V648, V2))(V659))), case V660 of {'Idris.Prelude.Types.Left', E698} -> (fun (V661) -> {'Idris.Prelude.Types.Left', V661} end(E698)); {'Idris.Prelude.Types.Right', E699} -> (fun (V662) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V649, V2} | V662]))(V659)) end(E699)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E694, E695, E696, E697)); _ -> fun (V663) -> begin (V664 = (('un--getMatch'(V0, V648, V2))(V663))), case V664 of {'Idris.Prelude.Types.Left', E692} -> (fun (V665) -> {'Idris.Prelude.Types.Left', V665} end(E692)); {'Idris.Prelude.Types.Right', E693} -> (fun (V666) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V649, V2} | V666]))(V663)) end(E693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E691)); _ -> ('un--getMatch'(V0, V648, V2)) end end(E687, E688, E689, E690)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E667, E668, E669, E670} -> (fun (V667, V668, V669, V670) -> ('un--getMatch'(V0, V1, V670)) end(E667, E668, E669, E670)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E661} -> (fun (V671) -> case V2 of {'Idris.TTImp.TTImp.IType', E662} -> (fun (V672) -> fun (V673) -> {'Idris.Prelude.Types.Right', []} end end(E662)); _ -> fun (V674) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V674)) end end end(E661)); {'Idris.TTImp.TTImp.IPrimVal', E663, E664} -> (fun (V675, V676) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E665, E666} -> (fun (V677, V678) -> ('case--getMatch-4418'(V676, V675, V678, V677, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V676, V678)))) end(E665, E666)); _ -> fun (V679) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V679)) end end end(E663, E664)); _ -> fun (V680) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V680)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E757, E758, E759, E760} -> (fun (V681, V682, V683, V684) -> ('un--getMatch'(1, V682, V682)) end(E757, E758, E759, E760)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E753, E754, E755, E756} -> (fun (V685, V686, V687, V688) -> fun (V689) -> ('un--matchFail'('erased', V685, V689)) end end(E753, E754, E755, E756)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E721, E722, E723} -> (fun (V690, V691, V692) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E734, E735, E736} -> (fun (V693, V694, V695) -> ('un--matchAny'(V690, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V692, V695)))) end(E734, E735, E736)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E730, E731, E732, E733} -> (fun (V696, V697, V698, V699) -> ('un--getMatch'(V0, V1, V699)) end(E730, E731, E732, E733)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E724} -> (fun (V700) -> case V2 of {'Idris.TTImp.TTImp.IType', E725} -> (fun (V701) -> fun (V702) -> {'Idris.Prelude.Types.Right', []} end end(E725)); _ -> fun (V703) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V703)) end end end(E724)); {'Idris.TTImp.TTImp.IPrimVal', E726, E727} -> (fun (V704, V705) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E728, E729} -> (fun (V706, V707) -> ('case--getMatch-4418'(V705, V704, V707, V706, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V705, V707)))) end(E728, E729)); _ -> fun (V708) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V708)) end end end(E726, E727)); _ -> fun (V709) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V709)) end end end end end(E721, E722, E723)); {'Idris.TTImp.TTImp.IAs', E737, E738, E739, E740} -> (fun (V710, V711, V712, V713) -> case V712 of {'Idris.Core.Name.UN', E741} -> (fun (V714) -> case V2 of {'Idris.TTImp.TTImp.IAs', E744, E745, E746, E747} -> (fun (V715, V716, V717, V718) -> case V717 of {'Idris.Core.Name.UN', E750} -> (fun (V719) -> fun (V720) -> begin (V721 = (('un--getMatch'(V0, V713, V718))(V720))), case V721 of {'Idris.Prelude.Types.Left', E751} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E751)); {'Idris.Prelude.Types.Right', E752} -> (fun (V723) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V714, {'Idris.TTImp.TTImp.IBindVar', V715, V719}} | V723]))(V720)) end(E752)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E750)); _ -> fun (V724) -> begin (V725 = (('un--getMatch'(V0, V713, V2))(V724))), case V725 of {'Idris.Prelude.Types.Left', E748} -> (fun (V726) -> {'Idris.Prelude.Types.Left', V726} end(E748)); {'Idris.Prelude.Types.Right', E749} -> (fun (V727) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V714, V2} | V727]))(V724)) end(E749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E744, E745, E746, E747)); _ -> fun (V728) -> begin (V729 = (('un--getMatch'(V0, V713, V2))(V728))), case V729 of {'Idris.Prelude.Types.Left', E742} -> (fun (V730) -> {'Idris.Prelude.Types.Left', V730} end(E742)); {'Idris.Prelude.Types.Right', E743} -> (fun (V731) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V714, V2} | V731]))(V728)) end(E743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E741)); _ -> ('un--getMatch'(V0, V713, V2)) end end(E737, E738, E739, E740)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E717, E718, E719, E720} -> (fun (V732, V733, V734, V735) -> ('un--getMatch'(V0, V1, V735)) end(E717, E718, E719, E720)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E711} -> (fun (V736) -> case V2 of {'Idris.TTImp.TTImp.IType', E712} -> (fun (V737) -> fun (V738) -> {'Idris.Prelude.Types.Right', []} end end(E712)); _ -> fun (V739) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V739)) end end end(E711)); {'Idris.TTImp.TTImp.IPrimVal', E713, E714} -> (fun (V740, V741) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E715, E716} -> (fun (V742, V743) -> ('case--getMatch-4418'(V741, V740, V743, V742, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V741, V743)))) end(E715, E716)); _ -> fun (V744) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V744)) end end end(E713, E714)); _ -> fun (V745) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V745)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E657, E658, E659, E660} -> (fun (V746, V747, V748, V749) -> fun (V750) -> ('un--matchFail'('erased', V746, V750)) end end(E657, E658, E659, E660)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E625, E626, E627} -> (fun (V751, V752, V753) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E638, E639, E640} -> (fun (V754, V755, V756) -> ('un--matchAny'(V751, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V753, V756)))) end(E638, E639, E640)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E634, E635, E636, E637} -> (fun (V757, V758, V759, V760) -> ('un--getMatch'(V0, V1, V760)) end(E634, E635, E636, E637)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E628} -> (fun (V761) -> case V2 of {'Idris.TTImp.TTImp.IType', E629} -> (fun (V762) -> fun (V763) -> {'Idris.Prelude.Types.Right', []} end end(E629)); _ -> fun (V764) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V764)) end end end(E628)); {'Idris.TTImp.TTImp.IPrimVal', E630, E631} -> (fun (V765, V766) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E632, E633} -> (fun (V767, V768) -> ('case--getMatch-4418'(V766, V765, V768, V767, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V766, V768)))) end(E632, E633)); _ -> fun (V769) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V769)) end end end(E630, E631)); _ -> fun (V770) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V770)) end end end end end(E625, E626, E627)); {'Idris.TTImp.TTImp.IAs', E641, E642, E643, E644} -> (fun (V771, V772, V773, V774) -> case V773 of {'Idris.Core.Name.UN', E645} -> (fun (V775) -> case V2 of {'Idris.TTImp.TTImp.IAs', E648, E649, E650, E651} -> (fun (V776, V777, V778, V779) -> case V778 of {'Idris.Core.Name.UN', E654} -> (fun (V780) -> fun (V781) -> begin (V782 = (('un--getMatch'(V0, V774, V779))(V781))), case V782 of {'Idris.Prelude.Types.Left', E655} -> (fun (V783) -> {'Idris.Prelude.Types.Left', V783} end(E655)); {'Idris.Prelude.Types.Right', E656} -> (fun (V784) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V775, {'Idris.TTImp.TTImp.IBindVar', V776, V780}} | V784]))(V781)) end(E656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E654)); _ -> fun (V785) -> begin (V786 = (('un--getMatch'(V0, V774, V2))(V785))), case V786 of {'Idris.Prelude.Types.Left', E652} -> (fun (V787) -> {'Idris.Prelude.Types.Left', V787} end(E652)); {'Idris.Prelude.Types.Right', E653} -> (fun (V788) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V775, V2} | V788]))(V785)) end(E653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E648, E649, E650, E651)); _ -> fun (V789) -> begin (V790 = (('un--getMatch'(V0, V774, V2))(V789))), case V790 of {'Idris.Prelude.Types.Left', E646} -> (fun (V791) -> {'Idris.Prelude.Types.Left', V791} end(E646)); {'Idris.Prelude.Types.Right', E647} -> (fun (V792) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V775, V2} | V792]))(V789)) end(E647)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E645)); _ -> ('un--getMatch'(V0, V774, V2)) end end(E641, E642, E643, E644)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E621, E622, E623, E624} -> (fun (V793, V794, V795, V796) -> ('un--getMatch'(V0, V1, V796)) end(E621, E622, E623, E624)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E615} -> (fun (V797) -> case V2 of {'Idris.TTImp.TTImp.IType', E616} -> (fun (V798) -> fun (V799) -> {'Idris.Prelude.Types.Right', []} end end(E616)); _ -> fun (V800) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V800)) end end end(E615)); {'Idris.TTImp.TTImp.IPrimVal', E617, E618} -> (fun (V801, V802) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E619, E620} -> (fun (V803, V804) -> ('case--getMatch-4418'(V802, V801, V804, V803, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V802, V804)))) end(E619, E620)); _ -> fun (V805) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V805)) end end end(E617, E618)); _ -> fun (V806) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V806)) end end end end end end end end(E612, E613, E614)); {'Idris.TTImp.TTImp.IImplicitApp', E764, E765, E766, E767} -> (fun (V807, V808, V809, V810) -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E914, E915, E916, E917} -> (fun (V811, V812, V813, V814) -> ('case--getMatch-4239'(V807, V810, V809, V808, V814, V813, V812, V811, V0, ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq__(Maybe $a)'('erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V815) -> fun (V816) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq__Name'(V815, V816)) end end, fun (V817) -> fun (V818) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq__Name'(V817, V818)) end end}, V809, V813)))) end(E914, E915, E916, E917)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E860, E861, E862, E863} -> (fun (V819, V820, V821, V822) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V820, V2} | [{'Idris.Builtin.MkPair', V822, V822} | []]])) end(E860, E861, E862, E863)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E856, E857, E858, E859} -> (fun (V823, V824, V825, V826) -> fun (V827) -> ('un--matchFail'('erased', V823, V827)) end end(E856, E857, E858, E859)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E824, E825, E826} -> (fun (V828, V829, V830) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E837, E838, E839} -> (fun (V831, V832, V833) -> ('un--matchAny'(V828, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V830, V833)))) end(E837, E838, E839)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E833, E834, E835, E836} -> (fun (V834, V835, V836, V837) -> ('un--getMatch'(V0, V1, V837)) end(E833, E834, E835, E836)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E827} -> (fun (V838) -> case V2 of {'Idris.TTImp.TTImp.IType', E828} -> (fun (V839) -> fun (V840) -> {'Idris.Prelude.Types.Right', []} end end(E828)); _ -> fun (V841) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V841)) end end end(E827)); {'Idris.TTImp.TTImp.IPrimVal', E829, E830} -> (fun (V842, V843) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E831, E832} -> (fun (V844, V845) -> ('case--getMatch-4418'(V843, V842, V845, V844, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V843, V845)))) end(E831, E832)); _ -> fun (V846) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V846)) end end end(E829, E830)); _ -> fun (V847) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V847)) end end end end end(E824, E825, E826)); {'Idris.TTImp.TTImp.IAs', E840, E841, E842, E843} -> (fun (V848, V849, V850, V851) -> case V850 of {'Idris.Core.Name.UN', E844} -> (fun (V852) -> case V2 of {'Idris.TTImp.TTImp.IAs', E847, E848, E849, E850} -> (fun (V853, V854, V855, V856) -> case V855 of {'Idris.Core.Name.UN', E853} -> (fun (V857) -> fun (V858) -> begin (V859 = (('un--getMatch'(V0, V851, V856))(V858))), case V859 of {'Idris.Prelude.Types.Left', E854} -> (fun (V860) -> {'Idris.Prelude.Types.Left', V860} end(E854)); {'Idris.Prelude.Types.Right', E855} -> (fun (V861) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V852, {'Idris.TTImp.TTImp.IBindVar', V853, V857}} | V861]))(V858)) end(E855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E853)); _ -> fun (V862) -> begin (V863 = (('un--getMatch'(V0, V851, V2))(V862))), case V863 of {'Idris.Prelude.Types.Left', E851} -> (fun (V864) -> {'Idris.Prelude.Types.Left', V864} end(E851)); {'Idris.Prelude.Types.Right', E852} -> (fun (V865) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V852, V2} | V865]))(V862)) end(E852)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E847, E848, E849, E850)); _ -> fun (V866) -> begin (V867 = (('un--getMatch'(V0, V851, V2))(V866))), case V867 of {'Idris.Prelude.Types.Left', E845} -> (fun (V868) -> {'Idris.Prelude.Types.Left', V868} end(E845)); {'Idris.Prelude.Types.Right', E846} -> (fun (V869) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V852, V2} | V869]))(V866)) end(E846)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E844)); _ -> ('un--getMatch'(V0, V851, V2)) end end(E840, E841, E842, E843)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E820, E821, E822, E823} -> (fun (V870, V871, V872, V873) -> ('un--getMatch'(V0, V1, V873)) end(E820, E821, E822, E823)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E814} -> (fun (V874) -> case V2 of {'Idris.TTImp.TTImp.IType', E815} -> (fun (V875) -> fun (V876) -> {'Idris.Prelude.Types.Right', []} end end(E815)); _ -> fun (V877) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V877)) end end end(E814)); {'Idris.TTImp.TTImp.IPrimVal', E816, E817} -> (fun (V878, V879) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E818, E819} -> (fun (V880, V881) -> ('case--getMatch-4418'(V879, V878, V881, V880, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V879, V881)))) end(E818, E819)); _ -> fun (V882) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V882)) end end end(E816, E817)); _ -> fun (V883) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V883)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E910, E911, E912, E913} -> (fun (V884, V885, V886, V887) -> ('un--getMatch'(1, V885, V885)) end(E910, E911, E912, E913)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E906, E907, E908, E909} -> (fun (V888, V889, V890, V891) -> fun (V892) -> ('un--matchFail'('erased', V888, V892)) end end(E906, E907, E908, E909)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E874, E875, E876} -> (fun (V893, V894, V895) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E887, E888, E889} -> (fun (V896, V897, V898) -> ('un--matchAny'(V893, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V895, V898)))) end(E887, E888, E889)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E883, E884, E885, E886} -> (fun (V899, V900, V901, V902) -> ('un--getMatch'(V0, V1, V902)) end(E883, E884, E885, E886)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E877} -> (fun (V903) -> case V2 of {'Idris.TTImp.TTImp.IType', E878} -> (fun (V904) -> fun (V905) -> {'Idris.Prelude.Types.Right', []} end end(E878)); _ -> fun (V906) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V906)) end end end(E877)); {'Idris.TTImp.TTImp.IPrimVal', E879, E880} -> (fun (V907, V908) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E881, E882} -> (fun (V909, V910) -> ('case--getMatch-4418'(V908, V907, V910, V909, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V908, V910)))) end(E881, E882)); _ -> fun (V911) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V911)) end end end(E879, E880)); _ -> fun (V912) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V912)) end end end end end(E874, E875, E876)); {'Idris.TTImp.TTImp.IAs', E890, E891, E892, E893} -> (fun (V913, V914, V915, V916) -> case V915 of {'Idris.Core.Name.UN', E894} -> (fun (V917) -> case V2 of {'Idris.TTImp.TTImp.IAs', E897, E898, E899, E900} -> (fun (V918, V919, V920, V921) -> case V920 of {'Idris.Core.Name.UN', E903} -> (fun (V922) -> fun (V923) -> begin (V924 = (('un--getMatch'(V0, V916, V921))(V923))), case V924 of {'Idris.Prelude.Types.Left', E904} -> (fun (V925) -> {'Idris.Prelude.Types.Left', V925} end(E904)); {'Idris.Prelude.Types.Right', E905} -> (fun (V926) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V917, {'Idris.TTImp.TTImp.IBindVar', V918, V922}} | V926]))(V923)) end(E905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E903)); _ -> fun (V927) -> begin (V928 = (('un--getMatch'(V0, V916, V2))(V927))), case V928 of {'Idris.Prelude.Types.Left', E901} -> (fun (V929) -> {'Idris.Prelude.Types.Left', V929} end(E901)); {'Idris.Prelude.Types.Right', E902} -> (fun (V930) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V917, V2} | V930]))(V927)) end(E902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E897, E898, E899, E900)); _ -> fun (V931) -> begin (V932 = (('un--getMatch'(V0, V916, V2))(V931))), case V932 of {'Idris.Prelude.Types.Left', E895} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E895)); {'Idris.Prelude.Types.Right', E896} -> (fun (V934) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V917, V2} | V934]))(V931)) end(E896)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E894)); _ -> ('un--getMatch'(V0, V916, V2)) end end(E890, E891, E892, E893)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E870, E871, E872, E873} -> (fun (V935, V936, V937, V938) -> ('un--getMatch'(V0, V1, V938)) end(E870, E871, E872, E873)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E864} -> (fun (V939) -> case V2 of {'Idris.TTImp.TTImp.IType', E865} -> (fun (V940) -> fun (V941) -> {'Idris.Prelude.Types.Right', []} end end(E865)); _ -> fun (V942) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V942)) end end end(E864)); {'Idris.TTImp.TTImp.IPrimVal', E866, E867} -> (fun (V943, V944) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E868, E869} -> (fun (V945, V946) -> ('case--getMatch-4418'(V944, V943, V946, V945, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V944, V946)))) end(E868, E869)); _ -> fun (V947) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V947)) end end end(E866, E867)); _ -> fun (V948) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V948)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E810, E811, E812, E813} -> (fun (V949, V950, V951, V952) -> fun (V953) -> ('un--matchFail'('erased', V949, V953)) end end(E810, E811, E812, E813)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E778, E779, E780} -> (fun (V954, V955, V956) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E791, E792, E793} -> (fun (V957, V958, V959) -> ('un--matchAny'(V954, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V956, V959)))) end(E791, E792, E793)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E787, E788, E789, E790} -> (fun (V960, V961, V962, V963) -> ('un--getMatch'(V0, V1, V963)) end(E787, E788, E789, E790)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E781} -> (fun (V964) -> case V2 of {'Idris.TTImp.TTImp.IType', E782} -> (fun (V965) -> fun (V966) -> {'Idris.Prelude.Types.Right', []} end end(E782)); _ -> fun (V967) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V967)) end end end(E781)); {'Idris.TTImp.TTImp.IPrimVal', E783, E784} -> (fun (V968, V969) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E785, E786} -> (fun (V970, V971) -> ('case--getMatch-4418'(V969, V968, V971, V970, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V969, V971)))) end(E785, E786)); _ -> fun (V972) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V972)) end end end(E783, E784)); _ -> fun (V973) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V973)) end end end end end(E778, E779, E780)); {'Idris.TTImp.TTImp.IAs', E794, E795, E796, E797} -> (fun (V974, V975, V976, V977) -> case V976 of {'Idris.Core.Name.UN', E798} -> (fun (V978) -> case V2 of {'Idris.TTImp.TTImp.IAs', E801, E802, E803, E804} -> (fun (V979, V980, V981, V982) -> case V981 of {'Idris.Core.Name.UN', E807} -> (fun (V983) -> fun (V984) -> begin (V985 = (('un--getMatch'(V0, V977, V982))(V984))), case V985 of {'Idris.Prelude.Types.Left', E808} -> (fun (V986) -> {'Idris.Prelude.Types.Left', V986} end(E808)); {'Idris.Prelude.Types.Right', E809} -> (fun (V987) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V978, {'Idris.TTImp.TTImp.IBindVar', V979, V983}} | V987]))(V984)) end(E809)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E807)); _ -> fun (V988) -> begin (V989 = (('un--getMatch'(V0, V977, V2))(V988))), case V989 of {'Idris.Prelude.Types.Left', E805} -> (fun (V990) -> {'Idris.Prelude.Types.Left', V990} end(E805)); {'Idris.Prelude.Types.Right', E806} -> (fun (V991) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V978, V2} | V991]))(V988)) end(E806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E801, E802, E803, E804)); _ -> fun (V992) -> begin (V993 = (('un--getMatch'(V0, V977, V2))(V992))), case V993 of {'Idris.Prelude.Types.Left', E799} -> (fun (V994) -> {'Idris.Prelude.Types.Left', V994} end(E799)); {'Idris.Prelude.Types.Right', E800} -> (fun (V995) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V978, V2} | V995]))(V992)) end(E800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E798)); _ -> ('un--getMatch'(V0, V977, V2)) end end(E794, E795, E796, E797)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E774, E775, E776, E777} -> (fun (V996, V997, V998, V999) -> ('un--getMatch'(V0, V1, V999)) end(E774, E775, E776, E777)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E768} -> (fun (V1000) -> case V2 of {'Idris.TTImp.TTImp.IType', E769} -> (fun (V1001) -> fun (V1002) -> {'Idris.Prelude.Types.Right', []} end end(E769)); _ -> fun (V1003) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1003)) end end end(E768)); {'Idris.TTImp.TTImp.IPrimVal', E770, E771} -> (fun (V1004, V1005) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E772, E773} -> (fun (V1006, V1007) -> ('case--getMatch-4418'(V1005, V1004, V1007, V1006, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1005, V1007)))) end(E772, E773)); _ -> fun (V1008) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1008)) end end end(E770, E771)); _ -> fun (V1009) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1009)) end end end end end end end end(E764, E765, E766, E767)); {'Idris.TTImp.TTImp.IWithApp', E918, E919, E920} -> (fun (V1010, V1011, V1012) -> case V2 of {'Idris.TTImp.TTImp.IWithApp', E1067, E1068, E1069} -> (fun (V1013, V1014, V1015) -> ('un--matchAll'(V0, [{'Idris.Builtin.MkPair', V1011, V1014} | [{'Idris.Builtin.MkPair', V1012, V1015} | []]])) end(E1067, E1068, E1069)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E1013, E1014, E1015, E1016} -> (fun (V1016, V1017, V1018, V1019) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1017, V2} | [{'Idris.Builtin.MkPair', V1019, V1019} | []]])) end(E1013, E1014, E1015, E1016)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E1009, E1010, E1011, E1012} -> (fun (V1020, V1021, V1022, V1023) -> fun (V1024) -> ('un--matchFail'('erased', V1020, V1024)) end end(E1009, E1010, E1011, E1012)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E977, E978, E979} -> (fun (V1025, V1026, V1027) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E990, E991, E992} -> (fun (V1028, V1029, V1030) -> ('un--matchAny'(V1025, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1027, V1030)))) end(E990, E991, E992)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E986, E987, E988, E989} -> (fun (V1031, V1032, V1033, V1034) -> ('un--getMatch'(V0, V1, V1034)) end(E986, E987, E988, E989)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E980} -> (fun (V1035) -> case V2 of {'Idris.TTImp.TTImp.IType', E981} -> (fun (V1036) -> fun (V1037) -> {'Idris.Prelude.Types.Right', []} end end(E981)); _ -> fun (V1038) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1038)) end end end(E980)); {'Idris.TTImp.TTImp.IPrimVal', E982, E983} -> (fun (V1039, V1040) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E984, E985} -> (fun (V1041, V1042) -> ('case--getMatch-4418'(V1040, V1039, V1042, V1041, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1040, V1042)))) end(E984, E985)); _ -> fun (V1043) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1043)) end end end(E982, E983)); _ -> fun (V1044) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1044)) end end end end end(E977, E978, E979)); {'Idris.TTImp.TTImp.IAs', E993, E994, E995, E996} -> (fun (V1045, V1046, V1047, V1048) -> case V1047 of {'Idris.Core.Name.UN', E997} -> (fun (V1049) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1000, E1001, E1002, E1003} -> (fun (V1050, V1051, V1052, V1053) -> case V1052 of {'Idris.Core.Name.UN', E1006} -> (fun (V1054) -> fun (V1055) -> begin (V1056 = (('un--getMatch'(V0, V1048, V1053))(V1055))), case V1056 of {'Idris.Prelude.Types.Left', E1007} -> (fun (V1057) -> {'Idris.Prelude.Types.Left', V1057} end(E1007)); {'Idris.Prelude.Types.Right', E1008} -> (fun (V1058) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1049, {'Idris.TTImp.TTImp.IBindVar', V1050, V1054}} | V1058]))(V1055)) end(E1008)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1006)); _ -> fun (V1059) -> begin (V1060 = (('un--getMatch'(V0, V1048, V2))(V1059))), case V1060 of {'Idris.Prelude.Types.Left', E1004} -> (fun (V1061) -> {'Idris.Prelude.Types.Left', V1061} end(E1004)); {'Idris.Prelude.Types.Right', E1005} -> (fun (V1062) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1049, V2} | V1062]))(V1059)) end(E1005)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1000, E1001, E1002, E1003)); _ -> fun (V1063) -> begin (V1064 = (('un--getMatch'(V0, V1048, V2))(V1063))), case V1064 of {'Idris.Prelude.Types.Left', E998} -> (fun (V1065) -> {'Idris.Prelude.Types.Left', V1065} end(E998)); {'Idris.Prelude.Types.Right', E999} -> (fun (V1066) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1049, V2} | V1066]))(V1063)) end(E999)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E997)); _ -> ('un--getMatch'(V0, V1048, V2)) end end(E993, E994, E995, E996)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E973, E974, E975, E976} -> (fun (V1067, V1068, V1069, V1070) -> ('un--getMatch'(V0, V1, V1070)) end(E973, E974, E975, E976)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E967} -> (fun (V1071) -> case V2 of {'Idris.TTImp.TTImp.IType', E968} -> (fun (V1072) -> fun (V1073) -> {'Idris.Prelude.Types.Right', []} end end(E968)); _ -> fun (V1074) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1074)) end end end(E967)); {'Idris.TTImp.TTImp.IPrimVal', E969, E970} -> (fun (V1075, V1076) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E971, E972} -> (fun (V1077, V1078) -> ('case--getMatch-4418'(V1076, V1075, V1078, V1077, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1076, V1078)))) end(E971, E972)); _ -> fun (V1079) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1079)) end end end(E969, E970)); _ -> fun (V1080) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1080)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E1063, E1064, E1065, E1066} -> (fun (V1081, V1082, V1083, V1084) -> ('un--getMatch'(1, V1082, V1082)) end(E1063, E1064, E1065, E1066)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E1059, E1060, E1061, E1062} -> (fun (V1085, V1086, V1087, V1088) -> fun (V1089) -> ('un--matchFail'('erased', V1085, V1089)) end end(E1059, E1060, E1061, E1062)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E1027, E1028, E1029} -> (fun (V1090, V1091, V1092) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E1040, E1041, E1042} -> (fun (V1093, V1094, V1095) -> ('un--matchAny'(V1090, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1092, V1095)))) end(E1040, E1041, E1042)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1036, E1037, E1038, E1039} -> (fun (V1096, V1097, V1098, V1099) -> ('un--getMatch'(V0, V1, V1099)) end(E1036, E1037, E1038, E1039)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1030} -> (fun (V1100) -> case V2 of {'Idris.TTImp.TTImp.IType', E1031} -> (fun (V1101) -> fun (V1102) -> {'Idris.Prelude.Types.Right', []} end end(E1031)); _ -> fun (V1103) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1103)) end end end(E1030)); {'Idris.TTImp.TTImp.IPrimVal', E1032, E1033} -> (fun (V1104, V1105) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1034, E1035} -> (fun (V1106, V1107) -> ('case--getMatch-4418'(V1105, V1104, V1107, V1106, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1105, V1107)))) end(E1034, E1035)); _ -> fun (V1108) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1108)) end end end(E1032, E1033)); _ -> fun (V1109) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1109)) end end end end end(E1027, E1028, E1029)); {'Idris.TTImp.TTImp.IAs', E1043, E1044, E1045, E1046} -> (fun (V1110, V1111, V1112, V1113) -> case V1112 of {'Idris.Core.Name.UN', E1047} -> (fun (V1114) -> case V2 of {'Idris.TTImp.TTImp.IAs', E1050, E1051, E1052, E1053} -> (fun (V1115, V1116, V1117, V1118) -> case V1117 of {'Idris.Core.Name.UN', E1056} -> (fun (V1119) -> fun (V1120) -> begin (V1121 = (('un--getMatch'(V0, V1113, V1118))(V1120))), case V1121 of {'Idris.Prelude.Types.Left', E1057} -> (fun (V1122) -> {'Idris.Prelude.Types.Left', V1122} end(E1057)); {'Idris.Prelude.Types.Right', E1058} -> (fun (V1123) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1114, {'Idris.TTImp.TTImp.IBindVar', V1115, V1119}} | V1123]))(V1120)) end(E1058)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1056)); _ -> fun (V1124) -> begin (V1125 = (('un--getMatch'(V0, V1113, V2))(V1124))), case V1125 of {'Idris.Prelude.Types.Left', E1054} -> (fun (V1126) -> {'Idris.Prelude.Types.Left', V1126} end(E1054)); {'Idris.Prelude.Types.Right', E1055} -> (fun (V1127) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1114, V2} | V1127]))(V1124)) end(E1055)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1050, E1051, E1052, E1053)); _ -> fun (V1128) -> begin (V1129 = (('un--getMatch'(V0, V1113, V2))(V1128))), case V1129 of {'Idris.Prelude.Types.Left', E1048} -> (fun (V1130) -> {'Idris.Prelude.Types.Left', V1130} end(E1048)); {'Idris.Prelude.Types.Right', E1049} -> (fun (V1131) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1114, V2} | V1131]))(V1128)) end(E1049)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1047)); _ -> ('un--getMatch'(V0, V1113, V2)) end end(E1043, E1044, E1045, E1046)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E1023, E1024, E1025, E1026} -> (fun (V1132, V1133, V1134, V1135) -> ('un--getMatch'(V0, V1, V1135)) end(E1023, E1024, E1025, E1026)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E1017} -> (fun (V1136) -> case V2 of {'Idris.TTImp.TTImp.IType', E1018} -> (fun (V1137) -> fun (V1138) -> {'Idris.Prelude.Types.Right', []} end end(E1018)); _ -> fun (V1139) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1139)) end end end(E1017)); {'Idris.TTImp.TTImp.IPrimVal', E1019, E1020} -> (fun (V1140, V1141) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E1021, E1022} -> (fun (V1142, V1143) -> ('case--getMatch-4418'(V1141, V1140, V1143, V1142, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1141, V1143)))) end(E1021, E1022)); _ -> fun (V1144) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1144)) end end end(E1019, E1020)); _ -> fun (V1145) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1145)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E963, E964, E965, E966} -> (fun (V1146, V1147, V1148, V1149) -> fun (V1150) -> ('un--matchFail'('erased', V1146, V1150)) end end(E963, E964, E965, E966)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E931, E932, E933} -> (fun (V1151, V1152, V1153) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E944, E945, E946} -> (fun (V1154, V1155, V1156) -> ('un--matchAny'(V1151, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1153, V1156)))) end(E944, E945, E946)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E940, E941, E942, E943} -> (fun (V1157, V1158, V1159, V1160) -> ('un--getMatch'(V0, V1, V1160)) end(E940, E941, E942, E943)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E934} -> (fun (V1161) -> case V2 of {'Idris.TTImp.TTImp.IType', E935} -> (fun (V1162) -> fun (V1163) -> {'Idris.Prelude.Types.Right', []} end end(E935)); _ -> fun (V1164) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1164)) end end end(E934)); {'Idris.TTImp.TTImp.IPrimVal', E936, E937} -> (fun (V1165, V1166) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E938, E939} -> (fun (V1167, V1168) -> ('case--getMatch-4418'(V1166, V1165, V1168, V1167, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1166, V1168)))) end(E938, E939)); _ -> fun (V1169) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1169)) end end end(E936, E937)); _ -> fun (V1170) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1170)) end end end end end(E931, E932, E933)); {'Idris.TTImp.TTImp.IAs', E947, E948, E949, E950} -> (fun (V1171, V1172, V1173, V1174) -> case V1173 of {'Idris.Core.Name.UN', E951} -> (fun (V1175) -> case V2 of {'Idris.TTImp.TTImp.IAs', E954, E955, E956, E957} -> (fun (V1176, V1177, V1178, V1179) -> case V1178 of {'Idris.Core.Name.UN', E960} -> (fun (V1180) -> fun (V1181) -> begin (V1182 = (('un--getMatch'(V0, V1174, V1179))(V1181))), case V1182 of {'Idris.Prelude.Types.Left', E961} -> (fun (V1183) -> {'Idris.Prelude.Types.Left', V1183} end(E961)); {'Idris.Prelude.Types.Right', E962} -> (fun (V1184) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1175, {'Idris.TTImp.TTImp.IBindVar', V1176, V1180}} | V1184]))(V1181)) end(E962)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E960)); _ -> fun (V1185) -> begin (V1186 = (('un--getMatch'(V0, V1174, V2))(V1185))), case V1186 of {'Idris.Prelude.Types.Left', E958} -> (fun (V1187) -> {'Idris.Prelude.Types.Left', V1187} end(E958)); {'Idris.Prelude.Types.Right', E959} -> (fun (V1188) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1175, V2} | V1188]))(V1185)) end(E959)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E954, E955, E956, E957)); _ -> fun (V1189) -> begin (V1190 = (('un--getMatch'(V0, V1174, V2))(V1189))), case V1190 of {'Idris.Prelude.Types.Left', E952} -> (fun (V1191) -> {'Idris.Prelude.Types.Left', V1191} end(E952)); {'Idris.Prelude.Types.Right', E953} -> (fun (V1192) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1175, V2} | V1192]))(V1189)) end(E953)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E951)); _ -> ('un--getMatch'(V0, V1174, V2)) end end(E947, E948, E949, E950)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E927, E928, E929, E930} -> (fun (V1193, V1194, V1195, V1196) -> ('un--getMatch'(V0, V1, V1196)) end(E927, E928, E929, E930)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E921} -> (fun (V1197) -> case V2 of {'Idris.TTImp.TTImp.IType', E922} -> (fun (V1198) -> fun (V1199) -> {'Idris.Prelude.Types.Right', []} end end(E922)); _ -> fun (V1200) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1200)) end end end(E921)); {'Idris.TTImp.TTImp.IPrimVal', E923, E924} -> (fun (V1201, V1202) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E925, E926} -> (fun (V1203, V1204) -> ('case--getMatch-4418'(V1202, V1201, V1204, V1203, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1202, V1204)))) end(E925, E926)); _ -> fun (V1205) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1205)) end end end(E923, E924)); _ -> fun (V1206) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1206)) end end end end end end end end(E918, E919, E920)); _ -> case V0 of 0 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E92, E93, E94, E95} -> (fun (V1207, V1208, V1209, V1210) -> ('un--matchAll'(0, [{'Idris.Builtin.MkPair', V1208, V2} | [{'Idris.Builtin.MkPair', V1210, V1210} | []]])) end(E92, E93, E94, E95)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E88, E89, E90, E91} -> (fun (V1211, V1212, V1213, V1214) -> fun (V1215) -> ('un--matchFail'('erased', V1211, V1215)) end end(E88, E89, E90, E91)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E56, E57, E58} -> (fun (V1216, V1217, V1218) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E69, E70, E71} -> (fun (V1219, V1220, V1221) -> ('un--matchAny'(V1216, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1218, V1221)))) end(E69, E70, E71)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E65, E66, E67, E68} -> (fun (V1222, V1223, V1224, V1225) -> ('un--getMatch'(V0, V1, V1225)) end(E65, E66, E67, E68)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E59} -> (fun (V1226) -> case V2 of {'Idris.TTImp.TTImp.IType', E60} -> (fun (V1227) -> fun (V1228) -> {'Idris.Prelude.Types.Right', []} end end(E60)); _ -> fun (V1229) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1229)) end end end(E59)); {'Idris.TTImp.TTImp.IPrimVal', E61, E62} -> (fun (V1230, V1231) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E63, E64} -> (fun (V1232, V1233) -> ('case--getMatch-4418'(V1231, V1230, V1233, V1232, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1231, V1233)))) end(E63, E64)); _ -> fun (V1234) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1234)) end end end(E61, E62)); _ -> fun (V1235) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1235)) end end end end end(E56, E57, E58)); {'Idris.TTImp.TTImp.IAs', E72, E73, E74, E75} -> (fun (V1236, V1237, V1238, V1239) -> case V1238 of {'Idris.Core.Name.UN', E76} -> (fun (V1240) -> case V2 of {'Idris.TTImp.TTImp.IAs', E79, E80, E81, E82} -> (fun (V1241, V1242, V1243, V1244) -> case V1243 of {'Idris.Core.Name.UN', E85} -> (fun (V1245) -> fun (V1246) -> begin (V1247 = (('un--getMatch'(V0, V1239, V1244))(V1246))), case V1247 of {'Idris.Prelude.Types.Left', E86} -> (fun (V1248) -> {'Idris.Prelude.Types.Left', V1248} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V1249) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1240, {'Idris.TTImp.TTImp.IBindVar', V1241, V1245}} | V1249]))(V1246)) end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85)); _ -> fun (V1250) -> begin (V1251 = (('un--getMatch'(V0, V1239, V2))(V1250))), case V1251 of {'Idris.Prelude.Types.Left', E83} -> (fun (V1252) -> {'Idris.Prelude.Types.Left', V1252} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V1253) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1240, V2} | V1253]))(V1250)) end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E79, E80, E81, E82)); _ -> fun (V1254) -> begin (V1255 = (('un--getMatch'(V0, V1239, V2))(V1254))), case V1255 of {'Idris.Prelude.Types.Left', E77} -> (fun (V1256) -> {'Idris.Prelude.Types.Left', V1256} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V1257) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1240, V2} | V1257]))(V1254)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E76)); _ -> ('un--getMatch'(V0, V1239, V2)) end end(E72, E73, E74, E75)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E52, E53, E54, E55} -> (fun (V1258, V1259, V1260, V1261) -> ('un--getMatch'(V0, V1, V1261)) end(E52, E53, E54, E55)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E46} -> (fun (V1262) -> case V2 of {'Idris.TTImp.TTImp.IType', E47} -> (fun (V1263) -> fun (V1264) -> {'Idris.Prelude.Types.Right', []} end end(E47)); _ -> fun (V1265) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1265)) end end end(E46)); {'Idris.TTImp.TTImp.IPrimVal', E48, E49} -> (fun (V1266, V1267) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E50, E51} -> (fun (V1268, V1269) -> ('case--getMatch-4418'(V1267, V1266, V1269, V1268, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1267, V1269)))) end(E50, E51)); _ -> fun (V1270) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1270)) end end end(E48, E49)); _ -> fun (V1271) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1271)) end end end end end end; 1 -> case V1 of {'Idris.TTImp.TTImp.IImplicitApp', E142, E143, E144, E145} -> (fun (V1272, V1273, V1274, V1275) -> ('un--getMatch'(1, V1273, V1273)) end(E142, E143, E144, E145)); _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E138, E139, E140, E141} -> (fun (V1276, V1277, V1278, V1279) -> fun (V1280) -> ('un--matchFail'('erased', V1276, V1280)) end end(E138, E139, E140, E141)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E106, E107, E108} -> (fun (V1281, V1282, V1283) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E119, E120, E121} -> (fun (V1284, V1285, V1286) -> ('un--matchAny'(V1281, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1283, V1286)))) end(E119, E120, E121)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E115, E116, E117, E118} -> (fun (V1287, V1288, V1289, V1290) -> ('un--getMatch'(V0, V1, V1290)) end(E115, E116, E117, E118)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E109} -> (fun (V1291) -> case V2 of {'Idris.TTImp.TTImp.IType', E110} -> (fun (V1292) -> fun (V1293) -> {'Idris.Prelude.Types.Right', []} end end(E110)); _ -> fun (V1294) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1294)) end end end(E109)); {'Idris.TTImp.TTImp.IPrimVal', E111, E112} -> (fun (V1295, V1296) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E113, E114} -> (fun (V1297, V1298) -> ('case--getMatch-4418'(V1296, V1295, V1298, V1297, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1296, V1298)))) end(E113, E114)); _ -> fun (V1299) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1299)) end end end(E111, E112)); _ -> fun (V1300) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1300)) end end end end end(E106, E107, E108)); {'Idris.TTImp.TTImp.IAs', E122, E123, E124, E125} -> (fun (V1301, V1302, V1303, V1304) -> case V1303 of {'Idris.Core.Name.UN', E126} -> (fun (V1305) -> case V2 of {'Idris.TTImp.TTImp.IAs', E129, E130, E131, E132} -> (fun (V1306, V1307, V1308, V1309) -> case V1308 of {'Idris.Core.Name.UN', E135} -> (fun (V1310) -> fun (V1311) -> begin (V1312 = (('un--getMatch'(V0, V1304, V1309))(V1311))), case V1312 of {'Idris.Prelude.Types.Left', E136} -> (fun (V1313) -> {'Idris.Prelude.Types.Left', V1313} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V1314) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1305, {'Idris.TTImp.TTImp.IBindVar', V1306, V1310}} | V1314]))(V1311)) end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E135)); _ -> fun (V1315) -> begin (V1316 = (('un--getMatch'(V0, V1304, V2))(V1315))), case V1316 of {'Idris.Prelude.Types.Left', E133} -> (fun (V1317) -> {'Idris.Prelude.Types.Left', V1317} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V1318) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1305, V2} | V1318]))(V1315)) end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E129, E130, E131, E132)); _ -> fun (V1319) -> begin (V1320 = (('un--getMatch'(V0, V1304, V2))(V1319))), case V1320 of {'Idris.Prelude.Types.Left', E127} -> (fun (V1321) -> {'Idris.Prelude.Types.Left', V1321} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V1322) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1305, V2} | V1322]))(V1319)) end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E126)); _ -> ('un--getMatch'(V0, V1304, V2)) end end(E122, E123, E124, E125)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E102, E103, E104, E105} -> (fun (V1323, V1324, V1325, V1326) -> ('un--getMatch'(V0, V1, V1326)) end(E102, E103, E104, E105)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E96} -> (fun (V1327) -> case V2 of {'Idris.TTImp.TTImp.IType', E97} -> (fun (V1328) -> fun (V1329) -> {'Idris.Prelude.Types.Right', []} end end(E97)); _ -> fun (V1330) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1330)) end end end(E96)); {'Idris.TTImp.TTImp.IPrimVal', E98, E99} -> (fun (V1331, V1332) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E100, E101} -> (fun (V1333, V1334) -> ('case--getMatch-4418'(V1332, V1331, V1334, V1333, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1332, V1334)))) end(E100, E101)); _ -> fun (V1335) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1335)) end end end(E98, E99)); _ -> fun (V1336) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1336)) end end end end end end; _ -> case V2 of {'Idris.TTImp.TTImp.IImplicitApp', E42, E43, E44, E45} -> (fun (V1337, V1338, V1339, V1340) -> fun (V1341) -> ('un--matchFail'('erased', V1337, V1341)) end end(E42, E43, E44, E45)); _ -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E10, E11, E12} -> (fun (V1342, V1343, V1344) -> case V2 of {'Idris.TTImp.TTImp.IAlternative', E23, E24, E25} -> (fun (V1345, V1346, V1347) -> ('un--matchAny'(V1342, V0, ('Idris.Idris2.Data.List':'un--zip'('erased', 'erased', V1344, V1347)))) end(E23, E24, E25)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E19, E20, E21, E22} -> (fun (V1348, V1349, V1350, V1351) -> ('un--getMatch'(V0, V1, V1351)) end(E19, E20, E21, E22)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E13} -> (fun (V1352) -> case V2 of {'Idris.TTImp.TTImp.IType', E14} -> (fun (V1353) -> fun (V1354) -> {'Idris.Prelude.Types.Right', []} end end(E14)); _ -> fun (V1355) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1355)) end end end(E13)); {'Idris.TTImp.TTImp.IPrimVal', E15, E16} -> (fun (V1356, V1357) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E17, E18} -> (fun (V1358, V1359) -> ('case--getMatch-4418'(V1357, V1356, V1359, V1358, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1357, V1359)))) end(E17, E18)); _ -> fun (V1360) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1360)) end end end(E15, E16)); _ -> fun (V1361) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1361)) end end end end end(E10, E11, E12)); {'Idris.TTImp.TTImp.IAs', E26, E27, E28, E29} -> (fun (V1362, V1363, V1364, V1365) -> case V1364 of {'Idris.Core.Name.UN', E30} -> (fun (V1366) -> case V2 of {'Idris.TTImp.TTImp.IAs', E33, E34, E35, E36} -> (fun (V1367, V1368, V1369, V1370) -> case V1369 of {'Idris.Core.Name.UN', E39} -> (fun (V1371) -> fun (V1372) -> begin (V1373 = (('un--getMatch'(V0, V1365, V1370))(V1372))), case V1373 of {'Idris.Prelude.Types.Left', E40} -> (fun (V1374) -> {'Idris.Prelude.Types.Left', V1374} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V1375) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1366, {'Idris.TTImp.TTImp.IBindVar', V1367, V1371}} | V1375]))(V1372)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39)); _ -> fun (V1376) -> begin (V1377 = (('un--getMatch'(V0, V1365, V2))(V1376))), case V1377 of {'Idris.Prelude.Types.Left', E37} -> (fun (V1378) -> {'Idris.Prelude.Types.Left', V1378} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V1379) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1366, V2} | V1379]))(V1376)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33, E34, E35, E36)); _ -> fun (V1380) -> begin (V1381 = (('un--getMatch'(V0, V1365, V2))(V1380))), case V1381 of {'Idris.Prelude.Types.Left', E31} -> (fun (V1382) -> {'Idris.Prelude.Types.Left', V1382} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V1383) -> (('un--mergeMatches'(V0, [{'Idris.Builtin.MkPair', V1366, V2} | V1383]))(V1380)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E30)); _ -> ('un--getMatch'(V0, V1365, V2)) end end(E26, E27, E28, E29)); _ -> case V2 of {'Idris.TTImp.TTImp.IAs', E6, E7, E8, E9} -> (fun (V1384, V1385, V1386, V1387) -> ('un--getMatch'(V0, V1, V1387)) end(E6, E7, E8, E9)); _ -> case V1 of {'Idris.TTImp.TTImp.IType', E0} -> (fun (V1388) -> case V2 of {'Idris.TTImp.TTImp.IType', E1} -> (fun (V1389) -> fun (V1390) -> {'Idris.Prelude.Types.Right', []} end end(E1)); _ -> fun (V1391) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1391)) end end end(E0)); {'Idris.TTImp.TTImp.IPrimVal', E2, E3} -> (fun (V1392, V1393) -> case V2 of {'Idris.TTImp.TTImp.IPrimVal', E4, E5} -> (fun (V1394, V1395) -> ('case--getMatch-4418'(V1393, V1392, V1395, V1394, V0, ('Idris.Idris2.Core.TT':'dn--un--==_Eq__Constant'(V1393, V1395)))) end(E4, E5)); _ -> fun (V1396) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1396)) end end end(E2, E3)); _ -> fun (V1397) -> ('un--matchFail'('erased', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V1)), V1397)) end end end end end end end.
'un--getArgMatch'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V2 end()); _ -> case V1 of 0 -> case V4 of {'Idris.Prelude.Types.Just', E8} -> (fun (V5) -> case V5 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V6, V7) -> case V6 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case V7 of {'Idris.Core.Name.UN', E19} -> (fun (V8) -> ('case--getArgMatch-4574'(V8, V3, V2, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V11, V12)) end end}, V8, V3)))) end(E19)); _ -> {'Idris.TTImp.TTImp.ISearch', V0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(500))} end end()); _ -> case V4 of {'Idris.Prelude.Types.Just', E15} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V14, V15) -> case V15 of {'Idris.Core.Name.UN', E18} -> (fun (V16) -> ('case--getArgMatch-4627'(V14, V16, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V19, V20)) end end}, V16, V3)))) end(E18)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E16, E17)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E15)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end(E13, E14)); _ -> case V4 of {'Idris.Prelude.Types.Just', E9} -> (fun (V21) -> case V21 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V22, V23) -> case V23 of {'Idris.Core.Name.UN', E12} -> (fun (V24) -> ('case--getArgMatch-4627'(V22, V24, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V27, V28)) end end}, V24, V3)))) end(E12)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E10, E11)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E9)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end(E8)); _ -> case V4 of {'Idris.Prelude.Types.Just', E4} -> (fun (V29) -> case V29 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V30, V31) -> case V31 of {'Idris.Core.Name.UN', E7} -> (fun (V32) -> ('case--getArgMatch-4627'(V30, V32, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V35, V36)) end end}, V32, V3)))) end(E7)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E5, E6)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E4)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end; _ -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V37) -> case V37 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V38, V39) -> case V39 of {'Idris.Core.Name.UN', E3} -> (fun (V40) -> ('case--getArgMatch-4627'(V38, V40, V3, V2, V1, V0, ('Idris.Idris2.Data.List':'un--lookup'('erased', 'erased', {'Idris.Prelude.EqOrd.dn--un--__mkEq', fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq__String'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq__String'(V43, V44)) end end}, V40, V3)))) end(E3)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E1, E2)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end(E0)); _ -> {'Idris.TTImp.TTImp.Implicit', V0, 0} end end end.
