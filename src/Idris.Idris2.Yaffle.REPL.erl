-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in repl-1658'/7,
  'case--repl-1602'/6,
  'case--process-1438'/6,
  'case--case block in case block in process-1330'/10,
  'case--case block in process-1258'/10,
  'case--process-1204'/6,
  'case--case block in case block in process-1025'/13,
  'case--case block in process-963'/12,
  'case--process-914'/7,
  'case--process-795'/6,
  'case--process-656'/6,
  'case--process-579'/5,
  'case--process-422'/5,
  'nested--12788-482--in--un--printName'/6,
  'un--showInfo'/1,
  'un--repl'/4,
  'un--processCatch'/5,
  'un--process'/4
]).
'case--case block in repl-1658'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 0 -> fun (V7) -> ('un--repl'(V2, V1, V0, V7)) end; 1 -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--repl-1602'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> fun (V7) -> begin (V45 = begin (V44 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V35) -> ('Idris.Idris2.Parser.Support':'dn--un--show_Show__(ParseError $tok)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V36) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--show_Show__Token'(V36)) end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--showPrec_Show__Token'(V37, V38)) end end}, V35)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Parser.Support':'dn--un--showPrec_Show__(ParseError $tok)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V41) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--show_Show__Token'(V41)) end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Parser.Lexer.Source':'dn--un--showPrec_Show__Token'(V42, V43)) end end}, V39, V40)) end end}}, V6))(V7))), {'Idris.Prelude.Types.Right', V44} end), case V45 of {'Idris.Prelude.Types.Left', E1} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V47) -> ('un--repl'(V2, V1, V0, V7)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Right', E3} -> (fun (V48) -> fun (V49) -> begin (V50 = ('un--processCatch'(V2, V1, V0, V48, V49))), case V50 of {'Idris.Prelude.Types.Left', E4} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V52) -> case V52 of 0 -> ('un--repl'(V2, V1, V0, V49)); 1 -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkUnit'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-1438'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0}, V6)) end; _ -> fun (V7) -> begin (V45 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V43 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V8)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show__Totality'(V15))))))))(V9))), {'Idris.Prelude.Types.Right', V43} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V44) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V44)) end, V5))))(V7))), case V45 of {'Idris.Prelude.Types.Left', E4} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V47) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1330'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V10)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V12)) end, V9)))))) end end(E0, E1)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V13)) end, V9)))))) end.
'case--case block in process-1258'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.MissingCases', E0} -> (fun (V10) -> fun (V11) -> begin (V40 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V39) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V39)) end, V10))))))))))(V11))), {'Idris.Prelude.Types.Right', V40} end end end(E0)); {'Idris.Core.TT.NonCoveringCall', E1} -> (fun (V41) -> fun (V42) -> begin (V74 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> V49 end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V53(V55))), begin (V57 = (V54(V55))), (V56(V57)) end end end end end end end}, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), ((V61(V63))(V62)) end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> begin (V67 = (V65(V66))), (V67(V66)) end end end end}, fun (V68) -> fun (V69) -> V69 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<": Calls non covering function"/utf8>>, case V41 of [E2 | E3] -> (fun (V70, V71) -> case V71 of [] -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V70)))); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V72)) end, V41)))))) end end(E2, E3)); _ -> ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V73)) end, V41)))))) end))))))(V42))), {'Idris.Prelude.Types.Right', V74} end end end(E1)); _ -> fun (V75) -> begin (V103 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> V82 end end end, fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> begin (V89 = (V86(V88))), begin (V90 = (V87(V88))), (V89(V90)) end end end end end end end}, fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> begin (V96 = (V93(V95))), ((V94(V96))(V95)) end end end end end end, fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V98(V99))), (V100(V99)) end end end end}, fun (V101) -> fun (V102) -> V102 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V7)), <<": All cases covered"/utf8>>))))(V75))), {'Idris.Prelude.Types.Right', V103} end end end.
'case--process-1204'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V0}, V6)) end; _ -> fun (V7) -> begin (V17 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V8) -> fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--getTotality'(V3, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V8, V9))), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = V5), (('case--case block in process-1258'(V0, V1, V2, V3, V4, V5, V13, V8, V12, case V12 of {'Idris.Core.TT.MkTotality', E2, E3} -> (fun (V14, V15) -> V15 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V16) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V16)) end, V5))))(V7))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--case block in case block in process-1025'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of [E0 | E1] -> (fun (V13, V14) -> case V13 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V15, V16) -> fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V46, V47)) end end}, V16))))(V17))), {'Idris.Prelude.Types.Right', V48} end end end(E2, E3)); _ -> fun (V49) -> begin (V77 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V52, V53, V54)) end end end end end, fun (V55) -> fun (V56) -> fun (V57) -> V56 end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V60(V62))), begin (V64 = (V61(V62))), (V63(V64)) end end end end end end end}, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> begin (V70 = (V67(V69))), ((V68(V70))(V69)) end end end end end end, fun (V71) -> fun (V72) -> fun (V73) -> begin (V74 = (V72(V73))), (V74(V73)) end end end end}, fun (V75) -> fun (V76) -> V76 end end}, <<"Failed"/utf8>>))(V49))), {'Idris.Prelude.Types.Right', V77} end end end end(E0, E1)); _ -> fun (V78) -> begin (V106 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V81, V82, V83)) end end end end end, fun (V84) -> fun (V85) -> fun (V86) -> V85 end end end, fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> begin (V92 = (V89(V91))), begin (V93 = (V90(V91))), (V92(V93)) end end end end end end end}, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> begin (V99 = (V96(V98))), ((V97(V99))(V98)) end end end end end end, fun (V100) -> fun (V101) -> fun (V102) -> begin (V103 = (V101(V102))), (V103(V102)) end end end end}, fun (V104) -> fun (V105) -> V105 end end}, <<"Failed"/utf8>>))(V78))), {'Idris.Prelude.Types.Right', V106} end end end.
'case--case block in process-963'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Prelude.Types.Just', E0} -> (fun (V12) -> case V12 of {'Idris.Core.Context.None'} -> (fun () -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V14) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V15) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V16)) end end, (1 + 0), V9, V15)) end, V14))), case V18 of {'Idris.Prelude.Types.Left', E1} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V20) -> case V20 of [E3 | E4] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V23, V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V53, V54)) end end}, V24))))(V14))), {'Idris.Prelude.Types.Right', V55} end end(E5, E6)); _ -> begin (V83 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> V62 end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V66(V68))), begin (V70 = (V67(V68))), (V69(V70)) end end end end end end end}, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), ((V74(V76))(V75)) end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V78(V79))), (V80(V79)) end end end end}, fun (V81) -> fun (V82) -> V82 end end}, <<"Failed"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V83} end end end(E3, E4)); _ -> begin (V111 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V86, V87, V88)) end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> V90 end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V94(V96))), begin (V98 = (V95(V96))), (V97(V98)) end end end end end end end}, fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> begin (V104 = (V101(V103))), ((V102(V104))(V103)) end end end end end end, fun (V105) -> fun (V106) -> fun (V107) -> begin (V108 = (V106(V107))), (V108(V107)) end end end end}, fun (V109) -> fun (V110) -> V110 end end}, <<"Failed"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V111} end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V112) -> fun (V113) -> begin (V141 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V116, V117, V118)) end end end end end, fun (V119) -> fun (V120) -> fun (V121) -> V120 end end end, fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> begin (V127 = (V124(V126))), begin (V128 = (V125(V126))), (V127(V128)) end end end end end end end}, fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> begin (V134 = (V131(V133))), ((V132(V134))(V133)) end end end end end end, fun (V135) -> fun (V136) -> fun (V137) -> begin (V138 = (V136(V137))), (V138(V137)) end end end end}, fun (V139) -> fun (V140) -> V140 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V9))))))(V113))), {'Idris.Prelude.Types.Right', V141} end end end, V13)) end end()); _ -> fun (V142) -> begin (V170 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V145, V146, V147)) end end end end end, fun (V148) -> fun (V149) -> fun (V150) -> V149 end end end, fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> begin (V156 = (V153(V155))), begin (V157 = (V154(V155))), (V156(V157)) end end end end end end end}, fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> begin (V163 = (V160(V162))), ((V161(V163))(V162)) end end end end end end, fun (V164) -> fun (V165) -> fun (V166) -> begin (V167 = (V165(V166))), (V167(V166)) end end end end}, fun (V168) -> fun (V169) -> V169 end end}, <<"Already defined"/utf8>>))(V142))), {'Idris.Prelude.Types.Right', V170} end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V171) -> begin (V199 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V174, V175, V176)) end end end end end, fun (V177) -> fun (V178) -> fun (V179) -> V178 end end end, fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> begin (V185 = (V182(V184))), begin (V186 = (V183(V184))), (V185(V186)) end end end end end end end}, fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> begin (V192 = (V189(V191))), ((V190(V192))(V191)) end end end end end end, fun (V193) -> fun (V194) -> fun (V195) -> begin (V196 = (V194(V195))), (V196(V195)) end end end end}, fun (V197) -> fun (V198) -> V198 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V171))), {'Idris.Prelude.Types.Right', V199} end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-914'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V12, V13) -> fun (V14) -> begin (V229 = begin (V41 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V10, case V5 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V15 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V41 of {'Idris.Prelude.Types.Left', E33} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Just', E35} -> (fun (V44) -> case V44 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V45) -> begin (V49 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V4, fun () -> <<"Generation"/utf8>> end, fun (V46) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V4, V3, V2, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.FC':'un--onLine'(V1, V47)) end end, (1 + 0), V10, V46)) end, V45))), case V49 of {'Idris.Prelude.Types.Left', E36} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V51) -> case V51 of [E38 | E39] -> (fun (V52, V53) -> case V52 of {'Idris.Builtin.MkPair', E40, E41} -> (fun (V54, V55) -> begin (V86 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V58, V59, V60)) end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> V62 end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V66(V68))), begin (V70 = (V67(V68))), (V69(V70)) end end end end end end end}, fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> begin (V76 = (V73(V75))), ((V74(V76))(V75)) end end end end end end, fun (V77) -> fun (V78) -> fun (V79) -> begin (V80 = (V78(V79))), (V80(V79)) end end end end}, fun (V81) -> fun (V82) -> V82 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V83) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V84, V85)) end end}, V55))))(V45))), {'Idris.Prelude.Types.Right', V86} end end(E40, E41)); _ -> begin (V114 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V89, V90, V91)) end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> V93 end end end, fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> begin (V100 = (V97(V99))), begin (V101 = (V98(V99))), (V100(V101)) end end end end end end end}, fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> begin (V107 = (V104(V106))), ((V105(V107))(V106)) end end end end end end, fun (V108) -> fun (V109) -> fun (V110) -> begin (V111 = (V109(V110))), (V111(V110)) end end end end}, fun (V112) -> fun (V113) -> V113 end end}, <<"Failed"/utf8>>))(V45))), {'Idris.Prelude.Types.Right', V114} end end end(E38, E39)); _ -> begin (V142 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V117, V118, V119)) end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> V121 end end end, fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> begin (V128 = (V125(V127))), begin (V129 = (V126(V127))), (V128(V129)) end end end end end end end}, fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> begin (V135 = (V132(V134))), ((V133(V135))(V134)) end end end end end end, fun (V136) -> fun (V137) -> fun (V138) -> begin (V139 = (V137(V138))), (V139(V138)) end end end end}, fun (V140) -> fun (V141) -> V141 end end}, <<"Failed"/utf8>>))(V45))), {'Idris.Prelude.Types.Right', V142} end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V143) -> fun (V144) -> begin (V172 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V147, V148, V149)) end end end end end, fun (V150) -> fun (V151) -> fun (V152) -> V151 end end end, fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> begin (V158 = (V155(V157))), begin (V159 = (V156(V157))), (V158(V159)) end end end end end end end}, fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> begin (V165 = (V162(V164))), ((V163(V165))(V164)) end end end end end end, fun (V166) -> fun (V167) -> fun (V168) -> begin (V169 = (V167(V168))), (V169(V168)) end end end end}, fun (V170) -> fun (V171) -> V171 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V10))))))(V144))), {'Idris.Prelude.Types.Right', V172} end end end, V14)) end()); _ -> begin (V200 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V175, V176, V177)) end end end end end, fun (V178) -> fun (V179) -> fun (V180) -> V179 end end end, fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> begin (V186 = (V183(V185))), begin (V187 = (V184(V185))), (V186(V187)) end end end end end end end}, fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> begin (V193 = (V190(V192))), ((V191(V193))(V192)) end end end end end end, fun (V194) -> fun (V195) -> fun (V196) -> begin (V197 = (V195(V196))), (V197(V196)) end end end end}, fun (V198) -> fun (V199) -> V199 end end}, <<"Already defined"/utf8>>))(V14))), {'Idris.Prelude.Types.Right', V200} end end end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V228 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V203, V204, V205)) end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> V207 end end end, fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> begin (V214 = (V211(V213))), begin (V215 = (V212(V213))), (V214(V215)) end end end end end end end}, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> begin (V221 = (V218(V220))), ((V219(V221))(V220)) end end end end end end, fun (V222) -> fun (V223) -> fun (V224) -> begin (V225 = (V223(V224))), (V225(V224)) end end end end}, fun (V226) -> fun (V227) -> V227 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V14))), {'Idris.Prelude.Types.Right', V228} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E42} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V231) -> {'Idris.Prelude.Types.Right', 0} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V232) -> begin (V261 = begin (V260 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V235, V236, V237)) end end end end end, fun (V238) -> fun (V239) -> fun (V240) -> V239 end end end, fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> begin (V246 = (V243(V245))), begin (V247 = (V244(V245))), (V246(V247)) end end end end end end end}, fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> begin (V253 = (V250(V252))), ((V251(V253))(V252)) end end end end end end, fun (V254) -> fun (V255) -> fun (V256) -> begin (V257 = (V255(V256))), (V257(V256)) end end end end}, fun (V258) -> fun (V259) -> V259 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V0))))))(V232))), {'Idris.Prelude.Types.Right', V260} end), case V261 of {'Idris.Prelude.Types.Left', E44} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V263) -> {'Idris.Prelude.Types.Right', 0} end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-795'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V3, V2, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V8, [], V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V49 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V16) -> fun (V17) -> begin (V48 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V20, V21, V22)) end end end end end, fun (V23) -> fun (V24) -> fun (V25) -> V24 end end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), begin (V32 = (V29(V30))), (V31(V32)) end end end end end end end}, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), ((V36(V38))(V37)) end end end end end end, fun (V39) -> fun (V40) -> fun (V41) -> begin (V42 = (V40(V41))), (V42(V41)) end end end end}, fun (V43) -> fun (V44) -> V44 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V45) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V46, V47)) end end}}, V16))(V17))), {'Idris.Prelude.Types.Right', V48} end end end, V15))(V12))), case V49 of {'Idris.Prelude.Types.Left', E8} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V51) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V52) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V53) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V53)) end, V5))}, V52)) end end end(E4, E5)); _ -> fun (V54) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V55) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V55)) end, V5))}, V54)) end end end(E2, E3)); _ -> fun (V56) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V57) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V57)) end, V5))}, V56)) end end end(E0, E1)); [] -> fun (V58) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0}, V58)) end; _ -> fun (V59) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V60) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V60)) end, V5))}, V59)) end end.
'case--process-656'(V0, V1, V2, V3, V4, V5) -> case V5 of [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V10, V11) -> case V7 of [] -> fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Unify':'un--search'([], V3, V1, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V8, V11, {'Idris.Core.Env.Nil'}, V12))), case V13 of {'Idris.Prelude.Types.Left', E6} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V15) -> begin (V44 = begin (V43 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> V22 end end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> begin (V29 = (V26(V28))), begin (V30 = (V27(V28))), (V29(V30)) end end end end end end end}, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V33(V35))), ((V34(V36))(V35)) end end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> begin (V40 = (V38(V39))), (V40(V39)) end end end end}, fun (V41) -> fun (V42) -> V42 end end}, V3))(V12))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E8} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V46, {'Idris.Core.Env.Nil'}, V15, V12))), case V47 of {'Idris.Prelude.Types.Left', E10} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V49) -> begin (V88 = begin (V54 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V3, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__(Term $vars)'('erased', V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'('erased', V52, V53)) end end}, V49, V12))), case V54 of {'Idris.Prelude.Types.Left', E12} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V56) -> begin (V87 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V59, V60, V61)) end end end end end, fun (V62) -> fun (V63) -> fun (V64) -> V63 end end end, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> begin (V70 = (V67(V69))), begin (V71 = (V68(V69))), (V70(V71)) end end end end end end end}, fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> begin (V77 = (V74(V76))), ((V75(V77))(V76)) end end end end end end, fun (V78) -> fun (V79) -> fun (V80) -> begin (V81 = (V79(V80))), (V81(V80)) end end end end}, fun (V82) -> fun (V83) -> V83 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V84) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(Term $vars)'([], V85, V86)) end end}}, V56))(V12))), {'Idris.Prelude.Types.Right', V87} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E14} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V90) -> {'Idris.Prelude.Types.Right', 0} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V91) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V92) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V92)) end, V5))}, V91)) end end end(E4, E5)); _ -> fun (V93) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V94) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V94)) end, V5))}, V93)) end end end(E2, E3)); _ -> fun (V95) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V96) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V96)) end, V5))}, V95)) end end end(E0, E1)); [] -> fun (V97) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V0}, V97)) end; _ -> fun (V98) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V99) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V99)) end, V5))}, V98)) end end.
'case--process-579'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V36 = begin (V35 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, V3))(V7))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> begin (V39 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V6))(V7))), case V39 of {'Idris.Prelude.Types.Left', E4} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V3, [], V38, {'Idris.Core.Env.Nil'}, V41, V7))), case V42 of {'Idris.Prelude.Types.Left', E6} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V44) -> begin (V79 = begin (V45 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V44))(V7))), case V45 of {'Idris.Prelude.Types.Left', E8} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V47) -> begin (V78 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> V54 end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), begin (V62 = (V59(V60))), (V61(V62)) end end end end end end end}, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> begin (V68 = (V65(V67))), ((V66(V68))(V67)) end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V70(V71))), (V72(V71)) end end end end}, fun (V73) -> fun (V74) -> V74 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V76, V77)) end end}}, V47))(V7))), {'Idris.Prelude.Types.Right', V78} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V79 of {'Idris.Prelude.Types.Left', E10} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V81) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--process-422'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> fun (V7) -> begin (V36 = begin (V35 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, V3))(V7))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> begin (V39 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V3, [], V38, {'Idris.Core.Env.Nil'}, V5, V7))), case V39 of {'Idris.Prelude.Types.Left', E4} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V41) -> begin (V76 = begin (V42 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V3, {'Idris.Core.Env.Nil'}, V41))(V7))), case V42 of {'Idris.Prelude.Types.Left', E6} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V44) -> begin (V75 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V47, V48, V49)) end end end end end, fun (V50) -> fun (V51) -> fun (V52) -> V51 end end end, fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> begin (V58 = (V55(V57))), begin (V59 = (V56(V57))), (V58(V59)) end end end end end end end}, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> begin (V65 = (V62(V64))), ((V63(V65))(V64)) end end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> begin (V69 = (V67(V68))), (V69(V68)) end end end end}, fun (V70) -> fun (V71) -> V71 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V72) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V73, V74)) end end}}, V44))(V7))), {'Idris.Prelude.Types.Right', V75} end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V76 of {'Idris.Prelude.Types.Left', E8} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V78) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12788-482--in--un--printName'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> fun (V10) -> begin (V39 = begin (V38 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, V4))(V10))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E4} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V41, {'Idris.Core.Env.Nil'}, V9, V10))), case V42 of {'Idris.Prelude.Types.Left', E6} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V44) -> begin (V45 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V4, {'Idris.Core.Env.Nil'}, V44))(V10))), case V45 of {'Idris.Prelude.Types.Left', E8} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V47) -> begin (V75 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> V54 end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), begin (V62 = (V59(V60))), (V61(V62)) end end end end end end end}, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> begin (V68 = (V65(V67))), ((V66(V68))(V67)) end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V70(V71))), (V72(V71)) end end end end}, fun (V73) -> fun (V74) -> V74 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V6)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V47))))))))(V10))), {'Idris.Prelude.Types.Right', V75} end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--showInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> fun (V5) -> begin (V78 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V1)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" ==>\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Context':'dn--un--show_Show__Def'(case V4 of {'Idris.Core.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V50 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V54) -> ('Idris.Idris2.Core.Context':'dn--un--show_Show__SCCall'(V54)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Context':'dn--un--showPrec_Show__SCCall'(V55, V56)) end end}, case V4 of {'Idris.Core.Context.MkGlobalDef', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77) -> V77 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>))))))))))))))))(V5))), {'Idris.Prelude.Types.Right', V78} end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--repl'(V0, V1, V2, V3) -> begin (V32 = begin (V31 = (('Idris.Idris2.Prelude.IO':'un--putStr'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V6, V7, V8)) end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> V10 end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> begin (V17 = (V14(V16))), begin (V18 = (V15(V16))), (V17(V18)) end end end end end end end}, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), ((V22(V24))(V23)) end end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V26(V27))), (V28(V27)) end end end end}, fun (V29) -> fun (V30) -> V30 end end}, <<"Yaffle> "/utf8>>))(V3))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> begin (V63 = begin (V62 = (('Idris.Idris2.Prelude.IO':'un--getLine'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V37, V38, V39)) end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> V41 end end end, fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> begin (V48 = (V45(V47))), begin (V49 = (V46(V47))), (V48(V49)) end end end end end end end}, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), ((V53(V55))(V54)) end end end end end end, fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V57(V58))), (V59(V58)) end end end end}, fun (V60) -> fun (V61) -> V61 end end}))(V3))), {'Idris.Prelude.Types.Right', V62} end), case V63 of {'Idris.Prelude.Types.Left', E2} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V65) -> (('case--repl-1602'(V2, V1, V0, V34, V65, ('Idris.Idris2.Parser.Source':'un--runParser'('erased', 0, {'Idris.Prelude.Types.Nothing'}, V65, ('Idris.Idris2.TTImp.Parser':'un--command'())))))(V3)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processCatch'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', ('un--process'(V0, V1, V2, V3)), fun (V5) -> fun (V6) -> begin (V35 = begin (V34 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> V13 end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> begin (V20 = (V17(V19))), begin (V21 = (V18(V19))), (V20(V21)) end end end end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> begin (V27 = (V24(V26))), ((V25(V27))(V26)) end end end end end end, fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V29(V30))), (V31(V30)) end end end end}, fun (V32) -> fun (V33) -> V33 end end}, ('Idris.Idris2.Core.Core':'dn--un--show_Show__Error'(V5))))(V6))), {'Idris.Prelude.Types.Right', V34} end), case V35 of {'Idris.Prelude.Types.Left', E0} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V37) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V4)).
'un--process'(V0, V1, V2, V3) -> case V3 of {'Idris.TTImp.TTImp.Eval', E0} -> (fun (V4) -> fun (V5) -> begin (V6 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V4, {'Idris.Prelude.Types.Nothing'}))(V5))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V39 = begin (V38 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> V17 end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> begin (V24 = (V21(V23))), begin (V25 = (V22(V23))), (V24(V25)) end end end end end end end}, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> begin (V31 = (V28(V30))), ((V29(V31))(V30)) end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> begin (V35 = (V33(V34))), (V35(V34)) end end end end}, fun (V36) -> fun (V37) -> V37 end end}, V0))(V5))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E5} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V41, {'Idris.Core.Env.Nil'}, V9, V5))), case V42 of {'Idris.Prelude.Types.Left', E7} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V44) -> begin (V79 = begin (V45 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V44))(V5))), case V45 of {'Idris.Prelude.Types.Left', E9} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V47) -> begin (V78 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> V54 end end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V58(V60))), begin (V62 = (V59(V60))), (V61(V62)) end end end end end end end}, fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> begin (V68 = (V65(V67))), ((V66(V68))(V67)) end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> begin (V72 = (V70(V71))), (V72(V71)) end end end end}, fun (V73) -> fun (V74) -> V74 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V75) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V75)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V76, V77)) end end}}, V47))(V5))), {'Idris.Prelude.Types.Right', V78} end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V79 of {'Idris.Prelude.Types.Left', E11} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V81) -> {'Idris.Prelude.Types.Right', 0} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.TTImp.TTImp.Check', E13} -> (fun (V82) -> case V82 of {'Idris.TTImp.TTImp.IVar', E28, E29} -> (fun (V83, V84) -> fun (V85) -> begin (V114 = begin (V113 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V88, V89, V90)) end end end end end, fun (V91) -> fun (V92) -> fun (V93) -> V92 end end end, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> begin (V99 = (V96(V98))), begin (V100 = (V97(V98))), (V99(V100)) end end end end end end end}, fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> begin (V106 = (V103(V105))), ((V104(V106))(V105)) end end end end end end, fun (V107) -> fun (V108) -> fun (V109) -> begin (V110 = (V108(V109))), (V110(V109)) end end end end}, fun (V111) -> fun (V112) -> V112 end end}, V0))(V85))), {'Idris.Prelude.Types.Right', V113} end), case V114 of {'Idris.Prelude.Types.Left', E30} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V116) -> begin (V143 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V84, case V116 of {'Idris.Core.Context.MkDefs', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> V117 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V85))), case V143 of {'Idris.Prelude.Types.Left', E58} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V145) -> begin (V147 = (('Idris.Idris2.Core.Core':'un--traverse'('erased', 'erased', fun (V146) -> ('nested--12788-482--in--un--printName'(V83, V84, V2, V1, V0, V146)) end, V145))(V85))), case V147 of {'Idris.Prelude.Types.Left', E60} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V149) -> {'Idris.Prelude.Types.Right', 0} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E28, E29)); _ -> fun (V150) -> begin (V151 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V82, {'Idris.Prelude.Types.Nothing'}))(V150))), case V151 of {'Idris.Prelude.Types.Left', E14} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V153) -> case V153 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V154, V155) -> begin (V184 = begin (V183 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V158, V159, V160)) end end end end end, fun (V161) -> fun (V162) -> fun (V163) -> V162 end end end, fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> begin (V169 = (V166(V168))), begin (V170 = (V167(V168))), (V169(V170)) end end end end end end end}, fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> begin (V176 = (V173(V175))), ((V174(V176))(V175)) end end end end end end, fun (V177) -> fun (V178) -> fun (V179) -> begin (V180 = (V178(V179))), (V180(V179)) end end end end}, fun (V181) -> fun (V182) -> V182 end end}, V0))(V150))), {'Idris.Prelude.Types.Right', V183} end), case V184 of {'Idris.Prelude.Types.Left', E18} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V186) -> begin (V187 = (('Idris.Idris2.Core.Normalise':'un--getTerm'('erased', V155))(V150))), case V187 of {'Idris.Prelude.Types.Left', E20} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V189) -> begin (V190 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V186, {'Idris.Core.Env.Nil'}, V189, V150))), case V190 of {'Idris.Prelude.Types.Left', E22} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V192) -> begin (V227 = begin (V193 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V192))(V150))), case V193 of {'Idris.Prelude.Types.Left', E24} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V195) -> begin (V226 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> fun (V200) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V198, V199, V200)) end end end end end, fun (V201) -> fun (V202) -> fun (V203) -> V202 end end end, fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> begin (V209 = (V206(V208))), begin (V210 = (V207(V208))), (V209(V210)) end end end end end end end}, fun (V211) -> fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> begin (V216 = (V213(V215))), ((V214(V216))(V215)) end end end end end end, fun (V217) -> fun (V218) -> fun (V219) -> begin (V220 = (V218(V219))), (V220(V219)) end end end end}, fun (V221) -> fun (V222) -> V222 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V223) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V223)) end, fun (V224) -> fun (V225) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V224, V225)) end end}}, V195))(V150))), {'Idris.Prelude.Types.Right', V226} end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V227 of {'Idris.Prelude.Types.Left', E26} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V229) -> {'Idris.Prelude.Types.Right', 0} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E13)); {'Idris.TTImp.TTImp.ProofSearch', E62} -> (fun (V230) -> fun (V231) -> begin (V260 = begin (V259 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V234, V235, V236)) end end end end end, fun (V237) -> fun (V238) -> fun (V239) -> V238 end end end, fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> begin (V245 = (V242(V244))), begin (V246 = (V243(V244))), (V245(V246)) end end end end end end end}, fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> begin (V252 = (V249(V251))), ((V250(V252))(V251)) end end end end end end, fun (V253) -> fun (V254) -> fun (V255) -> begin (V256 = (V254(V255))), (V256(V255)) end end end end}, fun (V257) -> fun (V258) -> V258 end end}, V0))(V231))), {'Idris.Prelude.Types.Right', V259} end), case V260 of {'Idris.Prelude.Types.Left', E63} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V262) -> begin (V289 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V230, case V262 of {'Idris.Core.Context.MkDefs', E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90} -> (fun (V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283, V284, V285, V286, V287, V288) -> V263 end(E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V231))), case V289 of {'Idris.Prelude.Types.Left', E91} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V291) -> case V291 of [E93 | E94] -> (fun (V292, V293) -> case V292 of {'Idris.Builtin.MkPair', E95, E96} -> (fun (V294, V295) -> case V295 of {'Idris.Builtin.MkPair', E97, E98} -> (fun (V296, V297) -> case V293 of [] -> begin (V298 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top__ZeroOneOmega'()), 1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num__Nat'(1000)), V294, V297, {'Idris.Core.Env.Nil'}, V231))), case V298 of {'Idris.Prelude.Types.Left', E99} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V300) -> begin (V329 = begin (V328 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V301) -> fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V303, V304, V305)) end end end end end, fun (V306) -> fun (V307) -> fun (V308) -> V307 end end end, fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> begin (V314 = (V311(V313))), begin (V315 = (V312(V313))), (V314(V315)) end end end end end end end}, fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> begin (V321 = (V318(V320))), ((V319(V321))(V320)) end end end end end end, fun (V322) -> fun (V323) -> fun (V324) -> begin (V325 = (V323(V324))), (V325(V324)) end end end end}, fun (V326) -> fun (V327) -> V327 end end}, V0))(V231))), {'Idris.Prelude.Types.Right', V328} end), case V329 of {'Idris.Prelude.Types.Left', E101} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V331) -> begin (V332 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V331, {'Idris.Core.Env.Nil'}, V300, V231))), case V332 of {'Idris.Prelude.Types.Left', E103} -> (fun (V333) -> {'Idris.Prelude.Types.Left', V333} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V334) -> begin (V373 = begin (V339 = ('Idris.Idris2.Core.Context':'un--toFullNames'('erased', V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V335) -> fun (V336) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames__(Term $vars)'('erased', V335, V336)) end end, fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames__(Term $vars)'('erased', V337, V338)) end end}, V334, V231))), case V339 of {'Idris.Prelude.Types.Left', E105} -> (fun (V340) -> {'Idris.Prelude.Types.Left', V340} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V341) -> begin (V372 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V344, V345, V346)) end end end end end, fun (V347) -> fun (V348) -> fun (V349) -> V348 end end end, fun (V350) -> fun (V351) -> fun (V352) -> fun (V353) -> fun (V354) -> begin (V355 = (V352(V354))), begin (V356 = (V353(V354))), (V355(V356)) end end end end end end end}, fun (V357) -> fun (V358) -> fun (V359) -> fun (V360) -> fun (V361) -> begin (V362 = (V359(V361))), ((V360(V362))(V361)) end end end end end end, fun (V363) -> fun (V364) -> fun (V365) -> begin (V366 = (V364(V365))), (V366(V365)) end end end end}, fun (V367) -> fun (V368) -> V368 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V369) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show__(Term $vars)'([], V369)) end, fun (V370) -> fun (V371) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show__(Term $vars)'([], V370, V371)) end end}}, V341))(V231))), {'Idris.Prelude.Types.Right', V372} end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V373 of {'Idris.Prelude.Types.Left', E107} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V375) -> {'Idris.Prelude.Types.Right', 0} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V376) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V376)) end, V291))}, V231)) end end(E97, E98)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V377) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V377)) end, V291))}, V231)) end end(E95, E96)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V378) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V378)) end, V291))}, V231)) end end(E93, E94)); [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V230}, V231)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V379) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V379)) end, V291))}, V231)) end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E62)); {'Idris.TTImp.TTImp.ExprSearch', E109} -> (fun (V380) -> fun (V381) -> begin (V410 = begin (V409 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V382) -> fun (V383) -> fun (V384) -> fun (V385) -> fun (V386) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V384, V385, V386)) end end end end end, fun (V387) -> fun (V388) -> fun (V389) -> V388 end end end, fun (V390) -> fun (V391) -> fun (V392) -> fun (V393) -> fun (V394) -> begin (V395 = (V392(V394))), begin (V396 = (V393(V394))), (V395(V396)) end end end end end end end}, fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> fun (V401) -> begin (V402 = (V399(V401))), ((V400(V402))(V401)) end end end end end end, fun (V403) -> fun (V404) -> fun (V405) -> begin (V406 = (V404(V405))), (V406(V405)) end end end end}, fun (V407) -> fun (V408) -> V408 end end}, V0))(V381))), {'Idris.Prelude.Types.Right', V409} end), case V410 of {'Idris.Prelude.Types.Left', E110} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V412) -> begin (V439 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V380, case V412 of {'Idris.Core.Context.MkDefs', E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137} -> (fun (V413, V414, V415, V416, V417, V418, V419, V420, V421, V422, V423, V424, V425, V426, V427, V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, V438) -> V413 end(E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V381))), case V439 of {'Idris.Prelude.Types.Left', E138} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V441) -> case V441 of [E140 | E141] -> (fun (V442, V443) -> case V442 of {'Idris.Builtin.MkPair', E142, E143} -> (fun (V444, V445) -> case V445 of {'Idris.Builtin.MkPair', E144, E145} -> (fun (V446, V447) -> case V443 of [] -> begin (V448 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, ('Idris.Idris2.Core.FC':'un--toplevelFC'()), (1 + 0), V444, [], V381))), case V448 of {'Idris.Prelude.Types.Left', E146} -> (fun (V449) -> {'Idris.Prelude.Types.Left', V449} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V450) -> begin (V484 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V451) -> fun (V452) -> begin (V483 = (('Idris.Idris2.Prelude.IO':'un--printLn'('erased', 'erased', {'Idris.Builtin.MkPair', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V455, V456, V457)) end end end end end, fun (V458) -> fun (V459) -> fun (V460) -> V459 end end end, fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> begin (V466 = (V463(V465))), begin (V467 = (V464(V465))), (V466(V467)) end end end end end end end}, fun (V468) -> fun (V469) -> fun (V470) -> fun (V471) -> fun (V472) -> begin (V473 = (V470(V472))), ((V471(V473))(V472)) end end end end end end, fun (V474) -> fun (V475) -> fun (V476) -> begin (V477 = (V475(V476))), (V477(V476)) end end end end}, fun (V478) -> fun (V479) -> V479 end end}, {'Idris.Prelude.Show.dn--un--__mkShow', fun (V480) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__RawImp'(V480)) end, fun (V481) -> fun (V482) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__RawImp'(V481, V482)) end end}}, V451))(V452))), {'Idris.Prelude.Types.Right', V483} end end end, V450))(V381))), case V484 of {'Idris.Prelude.Types.Left', E148} -> (fun (V485) -> {'Idris.Prelude.Types.Left', V485} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V486) -> {'Idris.Prelude.Types.Right', 0} end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V487) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V487)) end, V441))}, V381)) end end(E144, E145)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V488) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V488)) end, V441))}, V381)) end end(E142, E143)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V489) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V489)) end, V441))}, V381)) end end(E140, E141)); [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), V380}, V381)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--toplevelFC'()), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V490) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V490)) end, V441))}, V381)) end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E109)); {'Idris.TTImp.TTImp.GenerateDef', E150, E151} -> (fun (V491, V492) -> fun (V493) -> begin (V522 = begin (V521 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V496, V497, V498)) end end end end end, fun (V499) -> fun (V500) -> fun (V501) -> V500 end end end, fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> fun (V506) -> begin (V507 = (V504(V506))), begin (V508 = (V505(V506))), (V507(V508)) end end end end end end end}, fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> begin (V514 = (V511(V513))), ((V512(V514))(V513)) end end end end end end, fun (V515) -> fun (V516) -> fun (V517) -> begin (V518 = (V516(V517))), (V518(V517)) end end end end}, fun (V519) -> fun (V520) -> V520 end end}, V0))(V493))), {'Idris.Prelude.Types.Right', V521} end), case V522 of {'Idris.Prelude.Types.Left', E152} -> (fun (V523) -> {'Idris.Prelude.Types.Left', V523} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V524) -> begin (V527 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V525) -> fun (V526) -> ('Idris.Idris2.Core.FC':'un--onLine'(V491, V525)) end end, V493))), case V527 of {'Idris.Prelude.Types.Left', E154} -> (fun (V528) -> {'Idris.Prelude.Types.Left', V528} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V529) -> case V529 of {'Idris.Prelude.Types.Just', E156} -> (fun (V530) -> case V530 of {'Idris.Builtin.MkPair', E157, E158} -> (fun (V531, V532) -> case V532 of {'Idris.Builtin.MkPair', E159, E160} -> (fun (V533, V534) -> case V534 of {'Idris.Builtin.MkPair', E161, E162} -> (fun (V535, V536) -> begin (V751 = begin (V563 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V533, case V524 of {'Idris.Core.Context.MkDefs', E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188} -> (fun (V537, V538, V539, V540, V541, V542, V543, V544, V545, V546, V547, V548, V549, V550, V551, V552, V553, V554, V555, V556, V557, V558, V559, V560, V561, V562) -> V537 end(E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V493))), case V563 of {'Idris.Prelude.Types.Left', E189} -> (fun (V564) -> {'Idris.Prelude.Types.Left', V564} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V565) -> case V565 of {'Idris.Prelude.Types.Just', E191} -> (fun (V566) -> case V566 of {'Idris.Core.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable__Core_Error'('erased', fun (V567) -> begin (V571 = ('Idris.Idris2.Core.Context.Log':'un--logTime'('erased', V0, fun () -> <<"Generation"/utf8>> end, fun (V568) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, fun (V569) -> fun (V570) -> ('Idris.Idris2.Core.FC':'un--onLine'(V491, V569)) end end, (1 + 0), V533, V568)) end, V567))), case V571 of {'Idris.Prelude.Types.Left', E192} -> (fun (V572) -> {'Idris.Prelude.Types.Left', V572} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V573) -> case V573 of [E194 | E195] -> (fun (V574, V575) -> case V574 of {'Idris.Builtin.MkPair', E196, E197} -> (fun (V576, V577) -> begin (V608 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V578) -> fun (V579) -> fun (V580) -> fun (V581) -> fun (V582) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V580, V581, V582)) end end end end end, fun (V583) -> fun (V584) -> fun (V585) -> V584 end end end, fun (V586) -> fun (V587) -> fun (V588) -> fun (V589) -> fun (V590) -> begin (V591 = (V588(V590))), begin (V592 = (V589(V590))), (V591(V592)) end end end end end end end}, fun (V593) -> fun (V594) -> fun (V595) -> fun (V596) -> fun (V597) -> begin (V598 = (V595(V597))), ((V596(V598))(V597)) end end end end end end, fun (V599) -> fun (V600) -> fun (V601) -> begin (V602 = (V600(V601))), (V602(V601)) end end end end}, fun (V603) -> fun (V604) -> V604 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show__(List $a)'('erased', {'Idris.Prelude.Show.dn--un--__mkShow', fun (V605) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show__ImpClause'(V605)) end, fun (V606) -> fun (V607) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show__ImpClause'(V606, V607)) end end}, V577))))(V567))), {'Idris.Prelude.Types.Right', V608} end end(E196, E197)); _ -> begin (V636 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V609) -> fun (V610) -> fun (V611) -> fun (V612) -> fun (V613) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V611, V612, V613)) end end end end end, fun (V614) -> fun (V615) -> fun (V616) -> V615 end end end, fun (V617) -> fun (V618) -> fun (V619) -> fun (V620) -> fun (V621) -> begin (V622 = (V619(V621))), begin (V623 = (V620(V621))), (V622(V623)) end end end end end end end}, fun (V624) -> fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> begin (V629 = (V626(V628))), ((V627(V629))(V628)) end end end end end end, fun (V630) -> fun (V631) -> fun (V632) -> begin (V633 = (V631(V632))), (V633(V632)) end end end end}, fun (V634) -> fun (V635) -> V635 end end}, <<"Failed"/utf8>>))(V567))), {'Idris.Prelude.Types.Right', V636} end end end(E194, E195)); _ -> begin (V664 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V637) -> fun (V638) -> fun (V639) -> fun (V640) -> fun (V641) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V639, V640, V641)) end end end end end, fun (V642) -> fun (V643) -> fun (V644) -> V643 end end end, fun (V645) -> fun (V646) -> fun (V647) -> fun (V648) -> fun (V649) -> begin (V650 = (V647(V649))), begin (V651 = (V648(V649))), (V650(V651)) end end end end end end end}, fun (V652) -> fun (V653) -> fun (V654) -> fun (V655) -> fun (V656) -> begin (V657 = (V654(V656))), ((V655(V657))(V656)) end end end end end end, fun (V658) -> fun (V659) -> fun (V660) -> begin (V661 = (V659(V660))), (V661(V660)) end end end end}, fun (V662) -> fun (V663) -> V663 end end}, <<"Failed"/utf8>>))(V567))), {'Idris.Prelude.Types.Right', V664} end end end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V665) -> fun (V666) -> begin (V694 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V667) -> fun (V668) -> fun (V669) -> fun (V670) -> fun (V671) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V669, V670, V671)) end end end end end, fun (V672) -> fun (V673) -> fun (V674) -> V673 end end end, fun (V675) -> fun (V676) -> fun (V677) -> fun (V678) -> fun (V679) -> begin (V680 = (V677(V679))), begin (V681 = (V678(V679))), (V680(V681)) end end end end end end end}, fun (V682) -> fun (V683) -> fun (V684) -> fun (V685) -> fun (V686) -> begin (V687 = (V684(V686))), ((V685(V687))(V686)) end end end end end end, fun (V688) -> fun (V689) -> fun (V690) -> begin (V691 = (V689(V690))), (V691(V690)) end end end end}, fun (V692) -> fun (V693) -> V693 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V533))))))(V666))), {'Idris.Prelude.Types.Right', V694} end end end, V493)) end()); _ -> begin (V722 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V695) -> fun (V696) -> fun (V697) -> fun (V698) -> fun (V699) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V697, V698, V699)) end end end end end, fun (V700) -> fun (V701) -> fun (V702) -> V701 end end end, fun (V703) -> fun (V704) -> fun (V705) -> fun (V706) -> fun (V707) -> begin (V708 = (V705(V707))), begin (V709 = (V706(V707))), (V708(V709)) end end end end end end end}, fun (V710) -> fun (V711) -> fun (V712) -> fun (V713) -> fun (V714) -> begin (V715 = (V712(V714))), ((V713(V715))(V714)) end end end end end end, fun (V716) -> fun (V717) -> fun (V718) -> begin (V719 = (V717(V718))), (V719(V718)) end end end end}, fun (V720) -> fun (V721) -> V721 end end}, <<"Already defined"/utf8>>))(V493))), {'Idris.Prelude.Types.Right', V722} end end end(E191)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V750 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V723) -> fun (V724) -> fun (V725) -> fun (V726) -> fun (V727) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V725, V726, V727)) end end end end end, fun (V728) -> fun (V729) -> fun (V730) -> V729 end end end, fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> begin (V736 = (V733(V735))), begin (V737 = (V734(V735))), (V736(V737)) end end end end end end end}, fun (V738) -> fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> begin (V743 = (V740(V742))), ((V741(V743))(V742)) end end end end end end, fun (V744) -> fun (V745) -> fun (V746) -> begin (V747 = (V745(V746))), (V747(V746)) end end end end}, fun (V748) -> fun (V749) -> V749 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V492))))))(V493))), {'Idris.Prelude.Types.Right', V750} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V751 of {'Idris.Prelude.Types.Left', E198} -> (fun (V752) -> {'Idris.Prelude.Types.Left', V752} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V753) -> {'Idris.Prelude.Types.Right', 0} end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161, E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E159, E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157, E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V782 = begin (V781 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V754) -> fun (V755) -> fun (V756) -> fun (V757) -> fun (V758) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V756, V757, V758)) end end end end end, fun (V759) -> fun (V760) -> fun (V761) -> V760 end end end, fun (V762) -> fun (V763) -> fun (V764) -> fun (V765) -> fun (V766) -> begin (V767 = (V764(V766))), begin (V768 = (V765(V766))), (V767(V768)) end end end end end end end}, fun (V769) -> fun (V770) -> fun (V771) -> fun (V772) -> fun (V773) -> begin (V774 = (V771(V773))), ((V772(V774))(V773)) end end end end end end, fun (V775) -> fun (V776) -> fun (V777) -> begin (V778 = (V776(V777))), (V778(V777)) end end end end}, fun (V779) -> fun (V780) -> V780 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V492))))))(V493))), {'Idris.Prelude.Types.Right', V781} end), case V782 of {'Idris.Prelude.Types.Left', E200} -> (fun (V783) -> {'Idris.Prelude.Types.Left', V783} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V784) -> {'Idris.Prelude.Types.Right', 0} end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E150, E151)); {'Idris.TTImp.TTImp.Missing', E202} -> (fun (V785) -> fun (V786) -> begin (V815 = begin (V814 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V787) -> fun (V788) -> fun (V789) -> fun (V790) -> fun (V791) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V789, V790, V791)) end end end end end, fun (V792) -> fun (V793) -> fun (V794) -> V793 end end end, fun (V795) -> fun (V796) -> fun (V797) -> fun (V798) -> fun (V799) -> begin (V800 = (V797(V799))), begin (V801 = (V798(V799))), (V800(V801)) end end end end end end end}, fun (V802) -> fun (V803) -> fun (V804) -> fun (V805) -> fun (V806) -> begin (V807 = (V804(V806))), ((V805(V807))(V806)) end end end end end end, fun (V808) -> fun (V809) -> fun (V810) -> begin (V811 = (V809(V810))), (V811(V810)) end end end end}, fun (V812) -> fun (V813) -> V813 end end}, V0))(V786))), {'Idris.Prelude.Types.Right', V814} end), case V815 of {'Idris.Prelude.Types.Left', E203} -> (fun (V816) -> {'Idris.Prelude.Types.Left', V816} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V817) -> begin (V844 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V785, case V817 of {'Idris.Core.Context.MkDefs', E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230} -> (fun (V818, V819, V820, V821, V822, V823, V824, V825, V826, V827, V828, V829, V830, V831, V832, V833, V834, V835, V836, V837, V838, V839, V840, V841, V842, V843) -> V818 end(E205, E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228, E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V786))), case V844 of {'Idris.Prelude.Types.Left', E231} -> (fun (V845) -> {'Idris.Prelude.Types.Left', V845} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V846) -> case V846 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V785}, V786)); _ -> begin (V856 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V847) -> fun (V848) -> begin (V849 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V847, V848))), case V849 of {'Idris.Prelude.Types.Left', E233} -> (fun (V850) -> {'Idris.Prelude.Types.Left', V850} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V851) -> begin (V852 = V846), (('case--case block in process-1258'(V785, V2, V1, V0, V817, V846, V852, V847, V851, case V851 of {'Idris.Core.TT.MkTotality', E235, E236} -> (fun (V853, V854) -> V854 end(E235, E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V848)) end end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V855) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V855)) end, V846))))(V786))), case V856 of {'Idris.Prelude.Types.Left', E237} -> (fun (V857) -> {'Idris.Prelude.Types.Left', V857} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V858) -> {'Idris.Prelude.Types.Right', 0} end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E202)); {'Idris.TTImp.TTImp.CheckTotal', E239} -> (fun (V859) -> fun (V860) -> begin (V889 = begin (V888 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V861) -> fun (V862) -> fun (V863) -> fun (V864) -> fun (V865) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V863, V864, V865)) end end end end end, fun (V866) -> fun (V867) -> fun (V868) -> V867 end end end, fun (V869) -> fun (V870) -> fun (V871) -> fun (V872) -> fun (V873) -> begin (V874 = (V871(V873))), begin (V875 = (V872(V873))), (V874(V875)) end end end end end end end}, fun (V876) -> fun (V877) -> fun (V878) -> fun (V879) -> fun (V880) -> begin (V881 = (V878(V880))), ((V879(V881))(V880)) end end end end end end, fun (V882) -> fun (V883) -> fun (V884) -> begin (V885 = (V883(V884))), (V885(V884)) end end end end}, fun (V886) -> fun (V887) -> V887 end end}, V0))(V860))), {'Idris.Prelude.Types.Right', V888} end), case V889 of {'Idris.Prelude.Types.Left', E240} -> (fun (V890) -> {'Idris.Prelude.Types.Left', V890} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V891) -> begin (V918 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V859, case V891 of {'Idris.Core.Context.MkDefs', E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267} -> (fun (V892, V893, V894, V895, V896, V897, V898, V899, V900, V901, V902, V903, V904, V905, V906, V907, V908, V909, V910, V911, V912, V913, V914, V915, V916, V917) -> V892 end(E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V860))), case V918 of {'Idris.Prelude.Types.Left', E268} -> (fun (V919) -> {'Idris.Prelude.Types.Left', V919} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V920) -> case V920 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable__Core_Error'('erased', {'Idris.Core.Core.UndefinedName', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V859}, V860)); _ -> begin (V958 = (('Idris.Idris2.Core.Core':'un--traverse_'('erased', 'erased', fun (V921) -> fun (V922) -> begin (V923 = ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V921, V922))), case V923 of {'Idris.Prelude.Types.Left', E270} -> (fun (V924) -> {'Idris.Prelude.Types.Left', V924} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V925) -> begin (V926 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V921, V922))), case V926 of {'Idris.Prelude.Types.Left', E272} -> (fun (V927) -> {'Idris.Prelude.Types.Left', V927} end(E272)); {'Idris.Prelude.Types.Right', E273} -> (fun (V928) -> begin (V956 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V929) -> fun (V930) -> fun (V931) -> fun (V932) -> fun (V933) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V931, V932, V933)) end end end end end, fun (V934) -> fun (V935) -> fun (V936) -> V935 end end end, fun (V937) -> fun (V938) -> fun (V939) -> fun (V940) -> fun (V941) -> begin (V942 = (V939(V941))), begin (V943 = (V940(V941))), (V942(V943)) end end end end end end end}, fun (V944) -> fun (V945) -> fun (V946) -> fun (V947) -> fun (V948) -> begin (V949 = (V946(V948))), ((V947(V949))(V948)) end end end end end end, fun (V950) -> fun (V951) -> fun (V952) -> begin (V953 = (V951(V952))), (V953(V952)) end end end end}, fun (V954) -> fun (V955) -> V955 end end}, ('Idris.Idris2.Prelude.Types.Strings':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show__Name'(V921)), ('Idris.Idris2.Prelude.Types.Strings':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show__Totality'(V928))))))))(V922))), {'Idris.Prelude.Types.Right', V956} end end(E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor__List'('erased', 'erased', fun (V957) -> ('Idris.Idris2.Builtin':'un--fst'('erased', 'erased', V957)) end, V920))))(V860))), case V958 of {'Idris.Prelude.Types.Left', E274} -> (fun (V959) -> {'Idris.Prelude.Types.Left', V959} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V960) -> {'Idris.Prelude.Types.Right', 0} end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E239)); {'Idris.TTImp.TTImp.DebugInfo', E276} -> (fun (V961) -> fun (V962) -> begin (V991 = begin (V990 = (('Idris.Idris2.Erlang.Data.IORef':'un--readIORef'('erased', 'erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V963) -> fun (V964) -> fun (V965) -> fun (V966) -> fun (V967) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V965, V966, V967)) end end end end end, fun (V968) -> fun (V969) -> fun (V970) -> V969 end end end, fun (V971) -> fun (V972) -> fun (V973) -> fun (V974) -> fun (V975) -> begin (V976 = (V973(V975))), begin (V977 = (V974(V975))), (V976(V977)) end end end end end end end}, fun (V978) -> fun (V979) -> fun (V980) -> fun (V981) -> fun (V982) -> begin (V983 = (V980(V982))), ((V981(V983))(V982)) end end end end end end, fun (V984) -> fun (V985) -> fun (V986) -> begin (V987 = (V985(V986))), (V987(V986)) end end end end}, fun (V988) -> fun (V989) -> V989 end end}, V0))(V962))), {'Idris.Prelude.Types.Right', V990} end), case V991 of {'Idris.Prelude.Types.Left', E277} -> (fun (V992) -> {'Idris.Prelude.Types.Left', V992} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V993) -> begin (V1024 = begin (V1020 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V961, case V993 of {'Idris.Core.Context.MkDefs', E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304} -> (fun (V994, V995, V996, V997, V998, V999, V1000, V1001, V1002, V1003, V1004, V1005, V1006, V1007, V1008, V1009, V1010, V1011, V1012, V1013, V1014, V1015, V1016, V1017, V1018, V1019) -> V994 end(E279, E280, E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V962))), case V1020 of {'Idris.Prelude.Types.Left', E305} -> (fun (V1021) -> {'Idris.Prelude.Types.Left', V1021} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V1022) -> (('Idris.Idris2.Core.Core':'un--traverse'('erased', 'erased', fun (V1023) -> ('un--showInfo'(V1023)) end, V1022))(V962)) end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1024 of {'Idris.Prelude.Types.Left', E307} -> (fun (V1025) -> {'Idris.Prelude.Types.Left', V1025} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V1026) -> {'Idris.Prelude.Types.Right', 0} end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276)); {'Idris.TTImp.TTImp.Quit'} -> (fun () -> fun (V1027) -> begin (V1056 = begin (V1055 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'('erased', {'Idris.Prelude.IO.dn--un--__mkHasIO', {'Idris.Prelude.Interfaces.dn--un--__mkMonad', {'Idris.Prelude.Interfaces.dn--un--__mkApplicative', fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> fun (V1032) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor__IO'('erased', 'erased', V1030, V1031, V1032)) end end end end end, fun (V1033) -> fun (V1034) -> fun (V1035) -> V1034 end end end, fun (V1036) -> fun (V1037) -> fun (V1038) -> fun (V1039) -> fun (V1040) -> begin (V1041 = (V1038(V1040))), begin (V1042 = (V1039(V1040))), (V1041(V1042)) end end end end end end end}, fun (V1043) -> fun (V1044) -> fun (V1045) -> fun (V1046) -> fun (V1047) -> begin (V1048 = (V1045(V1047))), ((V1046(V1048))(V1047)) end end end end end end, fun (V1049) -> fun (V1050) -> fun (V1051) -> begin (V1052 = (V1050(V1051))), (V1052(V1051)) end end end end}, fun (V1053) -> fun (V1054) -> V1054 end end}, <<"Bye for now!"/utf8>>))(V1027))), {'Idris.Prelude.Types.Right', V1055} end), case V1056 of {'Idris.Prelude.Types.Left', E309} -> (fun (V1057) -> {'Idris.Prelude.Types.Left', V1057} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V1058) -> {'Idris.Prelude.Types.Right', 1} end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
